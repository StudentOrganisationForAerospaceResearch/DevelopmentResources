ARM GAS  /tmp/cc7zIX7I.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32f4xx_hal_rcc.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.HAL_RCC_DeInit,"ax",%progbits
  18              		.align	1
  19              		.weak	HAL_RCC_DeInit
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	HAL_RCC_DeInit:
  26              	.LFB124:
  27              		.file 1 "Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c"
   1:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /**
   2:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   ******************************************************************************
   3:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @file    stm32f4xx_hal_rcc.c
   4:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @author  MCD Application Team
   5:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @brief   RCC HAL module driver.
   6:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *          This file provides firmware functions to manage the following
   7:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *          functionalities of the Reset and Clock Control (RCC) peripheral:
   8:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *           + Initialization and de-initialization functions
   9:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *           + Peripheral Control functions
  10:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *
  11:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   @verbatim
  12:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   ==============================================================================
  13:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****                       ##### RCC specific features #####
  14:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   ==============================================================================
  15:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     [..]
  16:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       After reset the device is running from Internal High Speed oscillator
  17:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       (HSI 16MHz) with Flash 0 wait state, Flash prefetch buffer, D-Cache
  18:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       and I-Cache are disabled, and all peripherals are off except internal
  19:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       SRAM, Flash and JTAG.
  20:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       (+) There is no prescaler on High speed (AHB) and Low speed (APB) busses;
  21:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           all peripherals mapped on these busses are running at HSI speed.
  22:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       (+) The clock for all peripherals is switched off, except the SRAM and FLASH.
  23:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       (+) All GPIOs are in input floating state, except the JTAG pins which
  24:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           are assigned to be used for debug purpose.
  25:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
  26:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     [..]
  27:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       Once the device started from reset, the user application has to:
  28:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       (+) Configure the clock source to be used to drive the System clock
  29:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           (if the application needs higher frequency/performance)
  30:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       (+) Configure the System clock frequency and Flash settings
  31:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       (+) Configure the AHB and APB busses prescalers
ARM GAS  /tmp/cc7zIX7I.s 			page 2


  32:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       (+) Enable the clock for the peripheral(s) to be used
  33:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       (+) Configure the clock source(s) for peripherals which clocks are not
  34:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           derived from the System clock (I2S, RTC, ADC, USB OTG FS/SDIO/RNG)
  35:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
  36:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****                       ##### RCC Limitations #####
  37:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   ==============================================================================
  38:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     [..]
  39:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       A delay between an RCC peripheral clock enable and the effective peripheral
  40:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       enabling should be taken into account in order to manage the peripheral read/write
  41:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       from/to registers.
  42:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       (+) This delay depends on the peripheral mapping.
  43:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       (+) If peripheral is mapped on AHB: the delay is 2 AHB clock cycle
  44:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           after the clock enable bit is set on the hardware register
  45:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       (+) If peripheral is mapped on APB: the delay is 2 APB clock cycle
  46:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           after the clock enable bit is set on the hardware register
  47:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
  48:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     [..]
  49:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       Implemented Workaround:
  50:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       (+) For AHB & APB peripherals, a dummy read to the peripheral register has been
  51:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           inserted in each __HAL_RCC_PPP_CLK_ENABLE() macro.
  52:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
  53:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   @endverbatim
  54:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   ******************************************************************************
  55:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @attention
  56:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *
  57:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * <h2><center>&copy; COPYRIGHT(c) 2017 STMicroelectronics</center></h2>
  58:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *
  59:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * Redistribution and use in source and binary forms, with or without modification,
  60:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * are permitted provided that the following conditions are met:
  61:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *   1. Redistributions of source code must retain the above copyright notice,
  62:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *      this list of conditions and the following disclaimer.
  63:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  64:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *      this list of conditions and the following disclaimer in the documentation
  65:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *      and/or other materials provided with the distribution.
  66:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  67:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *      may be used to endorse or promote products derived from this software
  68:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *      without specific prior written permission.
  69:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *
  70:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  71:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  72:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  73:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  74:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  75:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  76:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  77:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  78:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  79:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  80:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *
  81:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   ******************************************************************************
  82:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   */
  83:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
  84:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /* Includes ------------------------------------------------------------------*/
  85:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** #include "stm32f4xx_hal.h"
  86:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
  87:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /** @addtogroup STM32F4xx_HAL_Driver
  88:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @{
ARM GAS  /tmp/cc7zIX7I.s 			page 3


  89:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   */
  90:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
  91:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /** @defgroup RCC RCC
  92:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @brief RCC HAL module driver
  93:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @{
  94:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   */
  95:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
  96:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** #ifdef HAL_RCC_MODULE_ENABLED
  97:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
  98:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /* Private typedef -----------------------------------------------------------*/
  99:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /* Private define ------------------------------------------------------------*/
 100:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /** @addtogroup RCC_Private_Constants
 101:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @{
 102:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   */
 103:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 104:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /* Private macro -------------------------------------------------------------*/
 105:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** #define __MCO1_CLK_ENABLE()   __HAL_RCC_GPIOA_CLK_ENABLE()
 106:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** #define MCO1_GPIO_PORT        GPIOA
 107:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** #define MCO1_PIN              GPIO_PIN_8
 108:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 109:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** #define __MCO2_CLK_ENABLE()   __HAL_RCC_GPIOC_CLK_ENABLE()
 110:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** #define MCO2_GPIO_PORT         GPIOC
 111:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** #define MCO2_PIN               GPIO_PIN_9
 112:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /**
 113:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @}
 114:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   */
 115:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 116:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /* Private variables ---------------------------------------------------------*/
 117:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /** @defgroup RCC_Private_Variables RCC Private Variables
 118:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @{
 119:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   */
 120:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /**
 121:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @}
 122:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   */
 123:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /* Private function prototypes -----------------------------------------------*/
 124:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /* Private functions ---------------------------------------------------------*/
 125:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 126:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /** @defgroup RCC_Exported_Functions RCC Exported Functions
 127:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *  @{
 128:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   */
 129:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 130:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /** @defgroup RCC_Exported_Functions_Group1 Initialization and de-initialization functions
 131:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****  *  @brief    Initialization and Configuration functions
 132:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****  *
 133:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** @verbatim
 134:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****  ===============================================================================
 135:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****            ##### Initialization and de-initialization functions #####
 136:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****  ===============================================================================
 137:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     [..]
 138:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       This section provides functions allowing to configure the internal/external oscillators
 139:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       (HSE, HSI, LSE, LSI, PLL, CSS and MCO) and the System busses clocks (SYSCLK, AHB, APB1
 140:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****        and APB2).
 141:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 142:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     [..] Internal/external clock and PLL configuration
 143:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****          (#) HSI (high-speed internal), 16 MHz factory-trimmed RC used directly or through
 144:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              the PLL as System clock source.
 145:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
ARM GAS  /tmp/cc7zIX7I.s 			page 4


 146:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****          (#) LSI (low-speed internal), 32 KHz low consumption RC used as IWDG and/or RTC
 147:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              clock source.
 148:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 149:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****          (#) HSE (high-speed external), 4 to 26 MHz crystal oscillator used directly or
 150:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              through the PLL as System clock source. Can be used also as RTC clock source.
 151:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 152:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****          (#) LSE (low-speed external), 32 KHz oscillator used as RTC clock source.
 153:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 154:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****          (#) PLL (clocked by HSI or HSE), featuring two different output clocks:
 155:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****            (++) The first output is used to generate the high speed system clock (up to 168 MHz)
 156:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****            (++) The second output is used to generate the clock for the USB OTG FS (48 MHz),
 157:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****                 the random analog generator (<=48 MHz) and the SDIO (<= 48 MHz).
 158:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 159:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****          (#) CSS (Clock security system), once enable using the macro __HAL_RCC_CSS_ENABLE()
 160:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              and if a HSE clock failure occurs(HSE used directly or through PLL as System
 161:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              clock source), the System clocks automatically switched to HSI and an interrupt
 162:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              is generated if enabled. The interrupt is linked to the Cortex-M4 NMI
 163:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              (Non-Maskable Interrupt) exception vector.
 164:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 165:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****          (#) MCO1 (microcontroller clock output), used to output HSI, LSE, HSE or PLL
 166:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              clock (through a configurable prescaler) on PA8 pin.
 167:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 168:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****          (#) MCO2 (microcontroller clock output), used to output HSE, PLL, SYSCLK or PLLI2S
 169:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              clock (through a configurable prescaler) on PC9 pin.
 170:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 171:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     [..] System, AHB and APB busses clocks configuration
 172:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****          (#) Several clock sources can be used to drive the System clock (SYSCLK): HSI,
 173:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              HSE and PLL.
 174:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              The AHB clock (HCLK) is derived from System clock through configurable
 175:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              prescaler and used to clock the CPU, memory and peripherals mapped
 176:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              on AHB bus (DMA, GPIO...). APB1 (PCLK1) and APB2 (PCLK2) clocks are derived
 177:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              from AHB clock through configurable prescalers and used to clock
 178:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              the peripherals mapped on these busses. You can use
 179:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              "HAL_RCC_GetSysClockFreq()" function to retrieve the frequencies of these clocks.
 180:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 181:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****          (#) For the STM32F405xx/07xx and STM32F415xx/17xx devices, the maximum
 182:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              frequency of the SYSCLK and HCLK is 168 MHz, PCLK2 84 MHz and PCLK1 42 MHz.
 183:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              Depending on the device voltage range, the maximum frequency should
 184:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              be adapted accordingly (refer to the product datasheets for more details).
 185:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 186:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****          (#) For the STM32F42xxx, STM32F43xxx, STM32F446xx, STM32F469xx and STM32F479xx devices,
 187:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              the maximum frequency of the SYSCLK and HCLK is 180 MHz, PCLK2 90 MHz and PCLK1 45 MHz
 188:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              Depending on the device voltage range, the maximum frequency should
 189:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              be adapted accordingly (refer to the product datasheets for more details).
 190:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 191:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****          (#) For the STM32F401xx, the maximum frequency of the SYSCLK and HCLK is 84 MHz,
 192:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              PCLK2 84 MHz and PCLK1 42 MHz.
 193:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              Depending on the device voltage range, the maximum frequency should
 194:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              be adapted accordingly (refer to the product datasheets for more details).
 195:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 196:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****          (#) For the STM32F41xxx, the maximum frequency of the SYSCLK and HCLK is 100 MHz,
 197:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              PCLK2 100 MHz and PCLK1 50 MHz.
 198:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              Depending on the device voltage range, the maximum frequency should
 199:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              be adapted accordingly (refer to the product datasheets for more details).
 200:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 201:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** @endverbatim
 202:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @{
ARM GAS  /tmp/cc7zIX7I.s 			page 5


 203:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   */
 204:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 205:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /**
 206:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @brief  Resets the RCC clock configuration to the default reset state.
 207:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @note   The default reset state of the clock configuration is given below:
 208:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *            - HSI ON and used as system clock source
 209:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *            - HSE and PLL OFF
 210:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *            - AHB, APB1 and APB2 prescaler set to 1.
 211:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *            - CSS, MCO1 and MCO2 OFF
 212:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *            - All interrupts disabled
 213:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @note   This function doesn't modify the configuration of the
 214:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *            - Peripheral clocks
 215:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *            - LSI, LSE and RTC clocks
 216:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @retval HAL status
 217:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   */
 218:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** __weak HAL_StatusTypeDef HAL_RCC_DeInit(void)
 219:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** {
  28              		.loc 1 219 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 1, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33 0000 80B4     		push	{r7}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 4
  36              		.cfi_offset 7, -4
  37 0002 00AF     		add	r7, sp, #0
  38              	.LCFI1:
  39              		.cfi_def_cfa_register 7
 220:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   return HAL_OK;
  40              		.loc 1 220 0
  41 0004 0023     		movs	r3, #0
 221:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** }
  42              		.loc 1 221 0
  43 0006 1846     		mov	r0, r3
  44 0008 BD46     		mov	sp, r7
  45              	.LCFI2:
  46              		.cfi_def_cfa_register 13
  47              		@ sp needed
  48 000a 5DF8047B 		ldr	r7, [sp], #4
  49              	.LCFI3:
  50              		.cfi_restore 7
  51              		.cfi_def_cfa_offset 0
  52 000e 7047     		bx	lr
  53              		.cfi_endproc
  54              	.LFE124:
  56              		.section	.text.HAL_RCC_OscConfig,"ax",%progbits
  57              		.align	1
  58              		.weak	HAL_RCC_OscConfig
  59              		.syntax unified
  60              		.thumb
  61              		.thumb_func
  62              		.fpu fpv4-sp-d16
  64              	HAL_RCC_OscConfig:
  65              	.LFB125:
 222:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 223:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /**
ARM GAS  /tmp/cc7zIX7I.s 			page 6


 224:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @brief  Initializes the RCC Oscillators according to the specified parameters in the
 225:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         RCC_OscInitTypeDef.
 226:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @param  RCC_OscInitStruct pointer to an RCC_OscInitTypeDef structure that
 227:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         contains the configuration information for the RCC Oscillators.
 228:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @note   The PLL is not disabled when used as system clock.
 229:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @note   Transitions LSE Bypass to LSE On and LSE On to LSE Bypass are not
 230:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         supported by this API. User should request a transition to LSE Off
 231:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         first and then LSE On or LSE Bypass.
 232:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @note   Transition HSE Bypass to HSE On and HSE On to HSE Bypass are not
 233:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         supported by this API. User should request a transition to HSE Off
 234:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         first and then HSE On or HSE Bypass.
 235:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @retval HAL status
 236:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   */
 237:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** __weak HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
 238:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** {
  66              		.loc 1 238 0
  67              		.cfi_startproc
  68              		@ args = 0, pretend = 0, frame = 16
  69              		@ frame_needed = 1, uses_anonymous_args = 0
  70 0000 80B5     		push	{r7, lr}
  71              	.LCFI4:
  72              		.cfi_def_cfa_offset 8
  73              		.cfi_offset 7, -8
  74              		.cfi_offset 14, -4
  75 0002 84B0     		sub	sp, sp, #16
  76              	.LCFI5:
  77              		.cfi_def_cfa_offset 24
  78 0004 00AF     		add	r7, sp, #0
  79              	.LCFI6:
  80              		.cfi_def_cfa_register 7
  81 0006 7860     		str	r0, [r7, #4]
 239:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   uint32_t tickstart;
 240:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 241:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* Check Null pointer */
 242:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   if(RCC_OscInitStruct == NULL)
  82              		.loc 1 242 0
  83 0008 7B68     		ldr	r3, [r7, #4]
  84 000a 002B     		cmp	r3, #0
  85 000c 01D1     		bne	.L4
 243:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
 244:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     return HAL_ERROR;
  86              		.loc 1 244 0
  87 000e 0123     		movs	r3, #1
  88 0010 13E2     		b	.L5
  89              	.L4:
 245:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
 246:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 247:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* Check the parameters */
 248:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));
 249:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /*------------------------------- HSE Configuration ------------------------*/
 250:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
  90              		.loc 1 250 0
  91 0012 7B68     		ldr	r3, [r7, #4]
  92 0014 1B68     		ldr	r3, [r3]
  93 0016 03F00103 		and	r3, r3, #1
  94 001a 002B     		cmp	r3, #0
  95 001c 75D0     		beq	.L6
ARM GAS  /tmp/cc7zIX7I.s 			page 7


 251:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
 252:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* Check the parameters */
 253:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     assert_param(IS_RCC_HSE(RCC_OscInitStruct->HSEState));
 254:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* When the HSE is used as system clock or clock source for PLL in these cases HSE will not dis
 255:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE) ||\
  96              		.loc 1 255 0
  97 001e 9F4B     		ldr	r3, .L54
  98 0020 9B68     		ldr	r3, [r3, #8]
  99 0022 03F00C03 		and	r3, r3, #12
 100 0026 042B     		cmp	r3, #4
 101 0028 0CD0     		beq	.L7
 256:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) 
 102              		.loc 1 256 0 discriminator 1
 103 002a 9C4B     		ldr	r3, .L54
 104 002c 9B68     		ldr	r3, [r3, #8]
 105 002e 03F00C03 		and	r3, r3, #12
 255:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) 
 106              		.loc 1 255 0 discriminator 1
 107 0032 082B     		cmp	r3, #8
 108 0034 12D1     		bne	.L8
 109              		.loc 1 256 0
 110 0036 994B     		ldr	r3, .L54
 111 0038 5B68     		ldr	r3, [r3, #4]
 112 003a 03F48003 		and	r3, r3, #4194304
 113 003e B3F5800F 		cmp	r3, #4194304
 114 0042 0BD1     		bne	.L8
 115              	.L7:
 257:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
 258:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_
 116              		.loc 1 258 0
 117 0044 954B     		ldr	r3, .L54
 118 0046 1B68     		ldr	r3, [r3]
 119 0048 03F40033 		and	r3, r3, #131072
 120 004c 002B     		cmp	r3, #0
 121 004e 5BD0     		beq	.L53
 122              		.loc 1 258 0 is_stmt 0 discriminator 1
 123 0050 7B68     		ldr	r3, [r7, #4]
 124 0052 5B68     		ldr	r3, [r3, #4]
 125 0054 002B     		cmp	r3, #0
 126 0056 57D1     		bne	.L53
 259:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 260:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         return HAL_ERROR;
 127              		.loc 1 260 0 is_stmt 1
 128 0058 0123     		movs	r3, #1
 129 005a EEE1     		b	.L5
 130              	.L8:
 261:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       }
 262:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     }
 263:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     else
 264:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
 265:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       /* Set the new HSE configuration ---------------------------------------*/
 266:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 131              		.loc 1 266 0
 132 005c 7B68     		ldr	r3, [r7, #4]
 133 005e 5B68     		ldr	r3, [r3, #4]
 134 0060 B3F5803F 		cmp	r3, #65536
 135 0064 06D1     		bne	.L10
ARM GAS  /tmp/cc7zIX7I.s 			page 8


 136              		.loc 1 266 0 is_stmt 0 discriminator 1
 137 0066 8D4A     		ldr	r2, .L54
 138 0068 8C4B     		ldr	r3, .L54
 139 006a 1B68     		ldr	r3, [r3]
 140 006c 43F48033 		orr	r3, r3, #65536
 141 0070 1360     		str	r3, [r2]
 142 0072 1DE0     		b	.L11
 143              	.L10:
 144              		.loc 1 266 0 discriminator 2
 145 0074 7B68     		ldr	r3, [r7, #4]
 146 0076 5B68     		ldr	r3, [r3, #4]
 147 0078 B3F5A02F 		cmp	r3, #327680
 148 007c 0CD1     		bne	.L12
 149              		.loc 1 266 0 discriminator 3
 150 007e 874A     		ldr	r2, .L54
 151 0080 864B     		ldr	r3, .L54
 152 0082 1B68     		ldr	r3, [r3]
 153 0084 43F48023 		orr	r3, r3, #262144
 154 0088 1360     		str	r3, [r2]
 155 008a 844A     		ldr	r2, .L54
 156 008c 834B     		ldr	r3, .L54
 157 008e 1B68     		ldr	r3, [r3]
 158 0090 43F48033 		orr	r3, r3, #65536
 159 0094 1360     		str	r3, [r2]
 160 0096 0BE0     		b	.L11
 161              	.L12:
 162              		.loc 1 266 0 discriminator 4
 163 0098 804A     		ldr	r2, .L54
 164 009a 804B     		ldr	r3, .L54
 165 009c 1B68     		ldr	r3, [r3]
 166 009e 23F48033 		bic	r3, r3, #65536
 167 00a2 1360     		str	r3, [r2]
 168 00a4 7D4A     		ldr	r2, .L54
 169 00a6 7D4B     		ldr	r3, .L54
 170 00a8 1B68     		ldr	r3, [r3]
 171 00aa 23F48023 		bic	r3, r3, #262144
 172 00ae 1360     		str	r3, [r2]
 173              	.L11:
 267:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 268:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       /* Check the HSE State */
 269:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       if((RCC_OscInitStruct->HSEState) != RCC_HSE_OFF)
 174              		.loc 1 269 0 is_stmt 1
 175 00b0 7B68     		ldr	r3, [r7, #4]
 176 00b2 5B68     		ldr	r3, [r3, #4]
 177 00b4 002B     		cmp	r3, #0
 178 00b6 13D0     		beq	.L13
 270:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 271:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         /* Get Start Tick */
 272:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 179              		.loc 1 272 0
 180 00b8 FFF7FEFF 		bl	HAL_GetTick
 181 00bc F860     		str	r0, [r7, #12]
 273:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 274:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         /* Wait till HSE is ready */
 275:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 182              		.loc 1 275 0
 183 00be 08E0     		b	.L14
ARM GAS  /tmp/cc7zIX7I.s 			page 9


 184              	.L15:
 276:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         {
 277:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 185              		.loc 1 277 0
 186 00c0 FFF7FEFF 		bl	HAL_GetTick
 187 00c4 0246     		mov	r2, r0
 188 00c6 FB68     		ldr	r3, [r7, #12]
 189 00c8 D31A     		subs	r3, r2, r3
 190 00ca 642B     		cmp	r3, #100
 191 00cc 01D9     		bls	.L14
 278:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           {
 279:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****             return HAL_TIMEOUT;
 192              		.loc 1 279 0
 193 00ce 0323     		movs	r3, #3
 194 00d0 B3E1     		b	.L5
 195              	.L14:
 275:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         {
 196              		.loc 1 275 0
 197 00d2 724B     		ldr	r3, .L54
 198 00d4 1B68     		ldr	r3, [r3]
 199 00d6 03F40033 		and	r3, r3, #131072
 200 00da 002B     		cmp	r3, #0
 201 00dc F0D0     		beq	.L15
 202 00de 14E0     		b	.L6
 203              	.L13:
 280:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           }
 281:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         }
 282:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       }
 283:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       else
 284:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 285:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         /* Get Start Tick */
 286:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 204              		.loc 1 286 0
 205 00e0 FFF7FEFF 		bl	HAL_GetTick
 206 00e4 F860     		str	r0, [r7, #12]
 287:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 288:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         /* Wait till HSE is bypassed or disabled */
 289:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 207              		.loc 1 289 0
 208 00e6 08E0     		b	.L16
 209              	.L17:
 290:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         {
 291:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 210              		.loc 1 291 0
 211 00e8 FFF7FEFF 		bl	HAL_GetTick
 212 00ec 0246     		mov	r2, r0
 213 00ee FB68     		ldr	r3, [r7, #12]
 214 00f0 D31A     		subs	r3, r2, r3
 215 00f2 642B     		cmp	r3, #100
 216 00f4 01D9     		bls	.L16
 292:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           {
 293:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****             return HAL_TIMEOUT;
 217              		.loc 1 293 0
 218 00f6 0323     		movs	r3, #3
 219 00f8 9FE1     		b	.L5
 220              	.L16:
 289:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         {
ARM GAS  /tmp/cc7zIX7I.s 			page 10


 221              		.loc 1 289 0
 222 00fa 684B     		ldr	r3, .L54
 223 00fc 1B68     		ldr	r3, [r3]
 224 00fe 03F40033 		and	r3, r3, #131072
 225 0102 002B     		cmp	r3, #0
 226 0104 F0D1     		bne	.L17
 227 0106 00E0     		b	.L6
 228              	.L53:
 258:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 229              		.loc 1 258 0
 230 0108 00BF     		nop
 231              	.L6:
 294:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           }
 295:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         }
 296:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       }
 297:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     }
 298:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
 299:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /*----------------------------- HSI Configuration --------------------------*/
 300:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 232              		.loc 1 300 0
 233 010a 7B68     		ldr	r3, [r7, #4]
 234 010c 1B68     		ldr	r3, [r3]
 235 010e 03F00203 		and	r3, r3, #2
 236 0112 002B     		cmp	r3, #0
 237 0114 63D0     		beq	.L18
 301:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
 302:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* Check the parameters */
 303:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     assert_param(IS_RCC_HSI(RCC_OscInitStruct->HSIState));
 304:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     assert_param(IS_RCC_CALIBRATION_VALUE(RCC_OscInitStruct->HSICalibrationValue));
 305:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 306:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* Check if HSI is used as system clock or as PLL source when PLL is selected as system clock *
 307:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI) ||\
 238              		.loc 1 307 0
 239 0116 614B     		ldr	r3, .L54
 240 0118 9B68     		ldr	r3, [r3, #8]
 241 011a 03F00C03 		and	r3, r3, #12
 242 011e 002B     		cmp	r3, #0
 243 0120 0BD0     		beq	.L19
 308:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) 
 244              		.loc 1 308 0 discriminator 1
 245 0122 5E4B     		ldr	r3, .L54
 246 0124 9B68     		ldr	r3, [r3, #8]
 247 0126 03F00C03 		and	r3, r3, #12
 307:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) 
 248              		.loc 1 307 0 discriminator 1
 249 012a 082B     		cmp	r3, #8
 250 012c 1CD1     		bne	.L20
 251              		.loc 1 308 0
 252 012e 5B4B     		ldr	r3, .L54
 253 0130 5B68     		ldr	r3, [r3, #4]
 254 0132 03F48003 		and	r3, r3, #4194304
 255 0136 002B     		cmp	r3, #0
 256 0138 16D1     		bne	.L20
 257              	.L19:
 309:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
 310:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       /* When HSI is used as system clock it will not disabled */
 311:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_
ARM GAS  /tmp/cc7zIX7I.s 			page 11


 258              		.loc 1 311 0
 259 013a 584B     		ldr	r3, .L54
 260 013c 1B68     		ldr	r3, [r3]
 261 013e 03F00203 		and	r3, r3, #2
 262 0142 002B     		cmp	r3, #0
 263 0144 05D0     		beq	.L21
 264              		.loc 1 311 0 is_stmt 0 discriminator 1
 265 0146 7B68     		ldr	r3, [r7, #4]
 266 0148 DB68     		ldr	r3, [r3, #12]
 267 014a 012B     		cmp	r3, #1
 268 014c 01D0     		beq	.L21
 312:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 313:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         return HAL_ERROR;
 269              		.loc 1 313 0 is_stmt 1
 270 014e 0123     		movs	r3, #1
 271 0150 73E1     		b	.L5
 272              	.L21:
 314:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       }
 315:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       /* Otherwise, just the calibration is allowed */
 316:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       else
 317:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 318:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         /* Adjusts the Internal High Speed oscillator (HSI) calibration value.*/
 319:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 273              		.loc 1 319 0
 274 0152 5249     		ldr	r1, .L54
 275 0154 514B     		ldr	r3, .L54
 276 0156 1B68     		ldr	r3, [r3]
 277 0158 23F0F802 		bic	r2, r3, #248
 278 015c 7B68     		ldr	r3, [r7, #4]
 279 015e 1B69     		ldr	r3, [r3, #16]
 280 0160 DB00     		lsls	r3, r3, #3
 281 0162 1343     		orrs	r3, r3, r2
 282 0164 0B60     		str	r3, [r1]
 311:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 283              		.loc 1 311 0
 284 0166 3AE0     		b	.L18
 285              	.L20:
 320:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       }
 321:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     }
 322:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     else
 323:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
 324:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       /* Check the HSI State */
 325:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       if((RCC_OscInitStruct->HSIState)!= RCC_HSI_OFF)
 286              		.loc 1 325 0
 287 0168 7B68     		ldr	r3, [r7, #4]
 288 016a DB68     		ldr	r3, [r3, #12]
 289 016c 002B     		cmp	r3, #0
 290 016e 20D0     		beq	.L22
 326:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 327:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         /* Enable the Internal High Speed oscillator (HSI). */
 328:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         __HAL_RCC_HSI_ENABLE();
 291              		.loc 1 328 0
 292 0170 4B4B     		ldr	r3, .L54+4
 293 0172 0122     		movs	r2, #1
 294 0174 1A60     		str	r2, [r3]
 329:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 330:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         /* Get Start Tick*/
ARM GAS  /tmp/cc7zIX7I.s 			page 12


 331:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 295              		.loc 1 331 0
 296 0176 FFF7FEFF 		bl	HAL_GetTick
 297 017a F860     		str	r0, [r7, #12]
 332:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 333:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         /* Wait till HSI is ready */
 334:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 298              		.loc 1 334 0
 299 017c 08E0     		b	.L23
 300              	.L24:
 335:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         {
 336:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 301              		.loc 1 336 0
 302 017e FFF7FEFF 		bl	HAL_GetTick
 303 0182 0246     		mov	r2, r0
 304 0184 FB68     		ldr	r3, [r7, #12]
 305 0186 D31A     		subs	r3, r2, r3
 306 0188 022B     		cmp	r3, #2
 307 018a 01D9     		bls	.L23
 337:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           {
 338:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****             return HAL_TIMEOUT;
 308              		.loc 1 338 0
 309 018c 0323     		movs	r3, #3
 310 018e 54E1     		b	.L5
 311              	.L23:
 334:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         {
 312              		.loc 1 334 0
 313 0190 424B     		ldr	r3, .L54
 314 0192 1B68     		ldr	r3, [r3]
 315 0194 03F00203 		and	r3, r3, #2
 316 0198 002B     		cmp	r3, #0
 317 019a F0D0     		beq	.L24
 339:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           }
 340:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         }
 341:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 342:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         /* Adjusts the Internal High Speed oscillator (HSI) calibration value. */
 343:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 318              		.loc 1 343 0
 319 019c 3F49     		ldr	r1, .L54
 320 019e 3F4B     		ldr	r3, .L54
 321 01a0 1B68     		ldr	r3, [r3]
 322 01a2 23F0F802 		bic	r2, r3, #248
 323 01a6 7B68     		ldr	r3, [r7, #4]
 324 01a8 1B69     		ldr	r3, [r3, #16]
 325 01aa DB00     		lsls	r3, r3, #3
 326 01ac 1343     		orrs	r3, r3, r2
 327 01ae 0B60     		str	r3, [r1]
 328 01b0 15E0     		b	.L18
 329              	.L22:
 344:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       }
 345:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       else
 346:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 347:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         /* Disable the Internal High Speed oscillator (HSI). */
 348:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         __HAL_RCC_HSI_DISABLE();
 330              		.loc 1 348 0
 331 01b2 3B4B     		ldr	r3, .L54+4
 332 01b4 0022     		movs	r2, #0
ARM GAS  /tmp/cc7zIX7I.s 			page 13


 333 01b6 1A60     		str	r2, [r3]
 349:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 350:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         /* Get Start Tick*/
 351:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 334              		.loc 1 351 0
 335 01b8 FFF7FEFF 		bl	HAL_GetTick
 336 01bc F860     		str	r0, [r7, #12]
 352:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 353:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         /* Wait till HSI is ready */
 354:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 337              		.loc 1 354 0
 338 01be 08E0     		b	.L25
 339              	.L26:
 355:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         {
 356:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 340              		.loc 1 356 0
 341 01c0 FFF7FEFF 		bl	HAL_GetTick
 342 01c4 0246     		mov	r2, r0
 343 01c6 FB68     		ldr	r3, [r7, #12]
 344 01c8 D31A     		subs	r3, r2, r3
 345 01ca 022B     		cmp	r3, #2
 346 01cc 01D9     		bls	.L25
 357:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           {
 358:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****             return HAL_TIMEOUT;
 347              		.loc 1 358 0
 348 01ce 0323     		movs	r3, #3
 349 01d0 33E1     		b	.L5
 350              	.L25:
 354:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         {
 351              		.loc 1 354 0
 352 01d2 324B     		ldr	r3, .L54
 353 01d4 1B68     		ldr	r3, [r3]
 354 01d6 03F00203 		and	r3, r3, #2
 355 01da 002B     		cmp	r3, #0
 356 01dc F0D1     		bne	.L26
 357              	.L18:
 359:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           }
 360:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         }
 361:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       }
 362:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     }
 363:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
 364:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /*------------------------------ LSI Configuration -------------------------*/
 365:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 358              		.loc 1 365 0
 359 01de 7B68     		ldr	r3, [r7, #4]
 360 01e0 1B68     		ldr	r3, [r3]
 361 01e2 03F00803 		and	r3, r3, #8
 362 01e6 002B     		cmp	r3, #0
 363 01e8 30D0     		beq	.L27
 366:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
 367:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* Check the parameters */
 368:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     assert_param(IS_RCC_LSI(RCC_OscInitStruct->LSIState));
 369:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 370:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* Check the LSI State */
 371:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     if((RCC_OscInitStruct->LSIState)!= RCC_LSI_OFF)
 364              		.loc 1 371 0
 365 01ea 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/cc7zIX7I.s 			page 14


 366 01ec 5B69     		ldr	r3, [r3, #20]
 367 01ee 002B     		cmp	r3, #0
 368 01f0 16D0     		beq	.L28
 372:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
 373:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       /* Enable the Internal Low Speed oscillator (LSI). */
 374:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       __HAL_RCC_LSI_ENABLE();
 369              		.loc 1 374 0
 370 01f2 2C4B     		ldr	r3, .L54+8
 371 01f4 0122     		movs	r2, #1
 372 01f6 1A60     		str	r2, [r3]
 375:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 376:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       /* Get Start Tick*/
 377:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 373              		.loc 1 377 0
 374 01f8 FFF7FEFF 		bl	HAL_GetTick
 375 01fc F860     		str	r0, [r7, #12]
 378:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 379:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       /* Wait till LSI is ready */
 380:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 376              		.loc 1 380 0
 377 01fe 08E0     		b	.L29
 378              	.L30:
 381:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 382:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 379              		.loc 1 382 0
 380 0200 FFF7FEFF 		bl	HAL_GetTick
 381 0204 0246     		mov	r2, r0
 382 0206 FB68     		ldr	r3, [r7, #12]
 383 0208 D31A     		subs	r3, r2, r3
 384 020a 022B     		cmp	r3, #2
 385 020c 01D9     		bls	.L29
 383:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         {
 384:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           return HAL_TIMEOUT;
 386              		.loc 1 384 0
 387 020e 0323     		movs	r3, #3
 388 0210 13E1     		b	.L5
 389              	.L29:
 380:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 390              		.loc 1 380 0
 391 0212 224B     		ldr	r3, .L54
 392 0214 5B6F     		ldr	r3, [r3, #116]
 393 0216 03F00203 		and	r3, r3, #2
 394 021a 002B     		cmp	r3, #0
 395 021c F0D0     		beq	.L30
 396 021e 15E0     		b	.L27
 397              	.L28:
 385:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         }
 386:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       }
 387:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     }
 388:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     else
 389:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
 390:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       /* Disable the Internal Low Speed oscillator (LSI). */
 391:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       __HAL_RCC_LSI_DISABLE();
 398              		.loc 1 391 0
 399 0220 204B     		ldr	r3, .L54+8
 400 0222 0022     		movs	r2, #0
 401 0224 1A60     		str	r2, [r3]
ARM GAS  /tmp/cc7zIX7I.s 			page 15


 392:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 393:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       /* Get Start Tick */
 394:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 402              		.loc 1 394 0
 403 0226 FFF7FEFF 		bl	HAL_GetTick
 404 022a F860     		str	r0, [r7, #12]
 395:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 396:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       /* Wait till LSI is ready */
 397:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 405              		.loc 1 397 0
 406 022c 08E0     		b	.L31
 407              	.L32:
 398:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 399:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 408              		.loc 1 399 0
 409 022e FFF7FEFF 		bl	HAL_GetTick
 410 0232 0246     		mov	r2, r0
 411 0234 FB68     		ldr	r3, [r7, #12]
 412 0236 D31A     		subs	r3, r2, r3
 413 0238 022B     		cmp	r3, #2
 414 023a 01D9     		bls	.L31
 400:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         {
 401:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           return HAL_TIMEOUT;
 415              		.loc 1 401 0
 416 023c 0323     		movs	r3, #3
 417 023e FCE0     		b	.L5
 418              	.L31:
 397:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 419              		.loc 1 397 0
 420 0240 164B     		ldr	r3, .L54
 421 0242 5B6F     		ldr	r3, [r3, #116]
 422 0244 03F00203 		and	r3, r3, #2
 423 0248 002B     		cmp	r3, #0
 424 024a F0D1     		bne	.L32
 425              	.L27:
 402:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         }
 403:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       }
 404:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     }
 405:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
 406:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /*------------------------------ LSE Configuration -------------------------*/
 407:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 426              		.loc 1 407 0
 427 024c 7B68     		ldr	r3, [r7, #4]
 428 024e 1B68     		ldr	r3, [r3]
 429 0250 03F00403 		and	r3, r3, #4
 430 0254 002B     		cmp	r3, #0
 431 0256 00F08680 		beq	.L33
 432              	.LBB2:
 408:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
 409:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* Check the parameters */
 410:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     assert_param(IS_RCC_LSE(RCC_OscInitStruct->LSEState));
 411:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 412:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* Enable Power Clock */
 413:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     __HAL_RCC_PWR_CLK_ENABLE();
 433              		.loc 1 413 0
 434 025a 0023     		movs	r3, #0
 435 025c BB60     		str	r3, [r7, #8]
ARM GAS  /tmp/cc7zIX7I.s 			page 16


 436 025e 0F4A     		ldr	r2, .L54
 437 0260 0E4B     		ldr	r3, .L54
 438 0262 1B6C     		ldr	r3, [r3, #64]
 439 0264 43F08053 		orr	r3, r3, #268435456
 440 0268 1364     		str	r3, [r2, #64]
 441 026a 0C4B     		ldr	r3, .L54
 442 026c 1B6C     		ldr	r3, [r3, #64]
 443 026e 03F08053 		and	r3, r3, #268435456
 444 0272 BB60     		str	r3, [r7, #8]
 445 0274 BB68     		ldr	r3, [r7, #8]
 446              	.LBE2:
 414:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 415:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* Enable write access to Backup domain */
 416:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     PWR->CR |= PWR_CR_DBP;
 447              		.loc 1 416 0
 448 0276 0C4A     		ldr	r2, .L54+12
 449 0278 0B4B     		ldr	r3, .L54+12
 450 027a 1B68     		ldr	r3, [r3]
 451 027c 43F48073 		orr	r3, r3, #256
 452 0280 1360     		str	r3, [r2]
 417:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 418:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* Wait for Backup domain Write protection enable */
 419:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     tickstart = HAL_GetTick();
 453              		.loc 1 419 0
 454 0282 FFF7FEFF 		bl	HAL_GetTick
 455 0286 F860     		str	r0, [r7, #12]
 420:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 421:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     while((PWR->CR & PWR_CR_DBP) == RESET)
 456              		.loc 1 421 0
 457 0288 10E0     		b	.L34
 458              	.L35:
 422:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
 423:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       if((HAL_GetTick() - tickstart ) > RCC_DBP_TIMEOUT_VALUE)
 459              		.loc 1 423 0
 460 028a FFF7FEFF 		bl	HAL_GetTick
 461 028e 0246     		mov	r2, r0
 462 0290 FB68     		ldr	r3, [r7, #12]
 463 0292 D31A     		subs	r3, r2, r3
 464 0294 022B     		cmp	r3, #2
 465 0296 09D9     		bls	.L34
 424:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 425:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         return HAL_TIMEOUT;
 466              		.loc 1 425 0
 467 0298 0323     		movs	r3, #3
 468 029a CEE0     		b	.L5
 469              	.L55:
 470              		.align	2
 471              	.L54:
 472 029c 00380240 		.word	1073887232
 473 02a0 00004742 		.word	1111949312
 474 02a4 800E4742 		.word	1111953024
 475 02a8 00700040 		.word	1073770496
 476              	.L34:
 421:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
 477              		.loc 1 421 0
 478 02ac 654B     		ldr	r3, .L56
 479 02ae 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/cc7zIX7I.s 			page 17


 480 02b0 03F48073 		and	r3, r3, #256
 481 02b4 002B     		cmp	r3, #0
 482 02b6 E8D0     		beq	.L35
 426:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       }
 427:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     }
 428:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 429:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* Set the new LSE configuration -----------------------------------------*/
 430:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 483              		.loc 1 430 0
 484 02b8 7B68     		ldr	r3, [r7, #4]
 485 02ba 9B68     		ldr	r3, [r3, #8]
 486 02bc 012B     		cmp	r3, #1
 487 02be 06D1     		bne	.L36
 488              		.loc 1 430 0 is_stmt 0 discriminator 1
 489 02c0 614A     		ldr	r2, .L56+4
 490 02c2 614B     		ldr	r3, .L56+4
 491 02c4 1B6F     		ldr	r3, [r3, #112]
 492 02c6 43F00103 		orr	r3, r3, #1
 493 02ca 1367     		str	r3, [r2, #112]
 494 02cc 1CE0     		b	.L37
 495              	.L36:
 496              		.loc 1 430 0 discriminator 2
 497 02ce 7B68     		ldr	r3, [r7, #4]
 498 02d0 9B68     		ldr	r3, [r3, #8]
 499 02d2 052B     		cmp	r3, #5
 500 02d4 0CD1     		bne	.L38
 501              		.loc 1 430 0 discriminator 3
 502 02d6 5C4A     		ldr	r2, .L56+4
 503 02d8 5B4B     		ldr	r3, .L56+4
 504 02da 1B6F     		ldr	r3, [r3, #112]
 505 02dc 43F00403 		orr	r3, r3, #4
 506 02e0 1367     		str	r3, [r2, #112]
 507 02e2 594A     		ldr	r2, .L56+4
 508 02e4 584B     		ldr	r3, .L56+4
 509 02e6 1B6F     		ldr	r3, [r3, #112]
 510 02e8 43F00103 		orr	r3, r3, #1
 511 02ec 1367     		str	r3, [r2, #112]
 512 02ee 0BE0     		b	.L37
 513              	.L38:
 514              		.loc 1 430 0 discriminator 4
 515 02f0 554A     		ldr	r2, .L56+4
 516 02f2 554B     		ldr	r3, .L56+4
 517 02f4 1B6F     		ldr	r3, [r3, #112]
 518 02f6 23F00103 		bic	r3, r3, #1
 519 02fa 1367     		str	r3, [r2, #112]
 520 02fc 524A     		ldr	r2, .L56+4
 521 02fe 524B     		ldr	r3, .L56+4
 522 0300 1B6F     		ldr	r3, [r3, #112]
 523 0302 23F00403 		bic	r3, r3, #4
 524 0306 1367     		str	r3, [r2, #112]
 525              	.L37:
 431:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* Check the LSE State */
 432:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     if((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
 526              		.loc 1 432 0 is_stmt 1
 527 0308 7B68     		ldr	r3, [r7, #4]
 528 030a 9B68     		ldr	r3, [r3, #8]
 529 030c 002B     		cmp	r3, #0
ARM GAS  /tmp/cc7zIX7I.s 			page 18


 530 030e 15D0     		beq	.L39
 433:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
 434:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       /* Get Start Tick*/
 435:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 531              		.loc 1 435 0
 532 0310 FFF7FEFF 		bl	HAL_GetTick
 533 0314 F860     		str	r0, [r7, #12]
 436:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 437:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       /* Wait till LSE is ready */
 438:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 534              		.loc 1 438 0
 535 0316 0AE0     		b	.L40
 536              	.L41:
 439:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 440:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 537              		.loc 1 440 0
 538 0318 FFF7FEFF 		bl	HAL_GetTick
 539 031c 0246     		mov	r2, r0
 540 031e FB68     		ldr	r3, [r7, #12]
 541 0320 D31A     		subs	r3, r2, r3
 542 0322 41F28832 		movw	r2, #5000
 543 0326 9342     		cmp	r3, r2
 544 0328 01D9     		bls	.L40
 441:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         {
 442:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           return HAL_TIMEOUT;
 545              		.loc 1 442 0
 546 032a 0323     		movs	r3, #3
 547 032c 85E0     		b	.L5
 548              	.L40:
 438:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 549              		.loc 1 438 0
 550 032e 464B     		ldr	r3, .L56+4
 551 0330 1B6F     		ldr	r3, [r3, #112]
 552 0332 03F00203 		and	r3, r3, #2
 553 0336 002B     		cmp	r3, #0
 554 0338 EED0     		beq	.L41
 555 033a 14E0     		b	.L33
 556              	.L39:
 443:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         }
 444:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       }
 445:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     }
 446:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     else
 447:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
 448:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       /* Get Start Tick */
 449:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 557              		.loc 1 449 0
 558 033c FFF7FEFF 		bl	HAL_GetTick
 559 0340 F860     		str	r0, [r7, #12]
 450:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 451:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       /* Wait till LSE is ready */
 452:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 560              		.loc 1 452 0
 561 0342 0AE0     		b	.L42
 562              	.L43:
 453:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 454:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 563              		.loc 1 454 0
ARM GAS  /tmp/cc7zIX7I.s 			page 19


 564 0344 FFF7FEFF 		bl	HAL_GetTick
 565 0348 0246     		mov	r2, r0
 566 034a FB68     		ldr	r3, [r7, #12]
 567 034c D31A     		subs	r3, r2, r3
 568 034e 41F28832 		movw	r2, #5000
 569 0352 9342     		cmp	r3, r2
 570 0354 01D9     		bls	.L42
 455:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         {
 456:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           return HAL_TIMEOUT;
 571              		.loc 1 456 0
 572 0356 0323     		movs	r3, #3
 573 0358 6FE0     		b	.L5
 574              	.L42:
 452:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 575              		.loc 1 452 0
 576 035a 3B4B     		ldr	r3, .L56+4
 577 035c 1B6F     		ldr	r3, [r3, #112]
 578 035e 03F00203 		and	r3, r3, #2
 579 0362 002B     		cmp	r3, #0
 580 0364 EED1     		bne	.L43
 581              	.L33:
 457:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         }
 458:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       }
 459:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     }
 460:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
 461:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /*-------------------------------- PLL Configuration -----------------------*/
 462:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* Check the parameters */
 463:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
 464:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 582              		.loc 1 464 0
 583 0366 7B68     		ldr	r3, [r7, #4]
 584 0368 9B69     		ldr	r3, [r3, #24]
 585 036a 002B     		cmp	r3, #0
 586 036c 64D0     		beq	.L44
 465:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
 466:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* Check if the PLL is used as system clock or not */
 467:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     if(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL)
 587              		.loc 1 467 0
 588 036e 364B     		ldr	r3, .L56+4
 589 0370 9B68     		ldr	r3, [r3, #8]
 590 0372 03F00C03 		and	r3, r3, #12
 591 0376 082B     		cmp	r3, #8
 592 0378 5CD0     		beq	.L45
 468:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
 469:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 593              		.loc 1 469 0
 594 037a 7B68     		ldr	r3, [r7, #4]
 595 037c 9B69     		ldr	r3, [r3, #24]
 596 037e 022B     		cmp	r3, #2
 597 0380 41D1     		bne	.L46
 470:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 471:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         /* Check the parameters */
 472:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         assert_param(IS_RCC_PLLSOURCE(RCC_OscInitStruct->PLL.PLLSource));
 473:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         assert_param(IS_RCC_PLLM_VALUE(RCC_OscInitStruct->PLL.PLLM));
 474:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         assert_param(IS_RCC_PLLN_VALUE(RCC_OscInitStruct->PLL.PLLN));
 475:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         assert_param(IS_RCC_PLLP_VALUE(RCC_OscInitStruct->PLL.PLLP));
 476:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         assert_param(IS_RCC_PLLQ_VALUE(RCC_OscInitStruct->PLL.PLLQ));
ARM GAS  /tmp/cc7zIX7I.s 			page 20


 477:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 478:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         /* Disable the main PLL. */
 479:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         __HAL_RCC_PLL_DISABLE();
 598              		.loc 1 479 0
 599 0382 324B     		ldr	r3, .L56+8
 600 0384 0022     		movs	r2, #0
 601 0386 1A60     		str	r2, [r3]
 480:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 481:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         /* Get Start Tick */
 482:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 602              		.loc 1 482 0
 603 0388 FFF7FEFF 		bl	HAL_GetTick
 604 038c F860     		str	r0, [r7, #12]
 483:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 484:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         /* Wait till PLL is ready */
 485:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 605              		.loc 1 485 0
 606 038e 08E0     		b	.L47
 607              	.L48:
 486:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         {
 487:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 608              		.loc 1 487 0
 609 0390 FFF7FEFF 		bl	HAL_GetTick
 610 0394 0246     		mov	r2, r0
 611 0396 FB68     		ldr	r3, [r7, #12]
 612 0398 D31A     		subs	r3, r2, r3
 613 039a 022B     		cmp	r3, #2
 614 039c 01D9     		bls	.L47
 488:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           {
 489:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****             return HAL_TIMEOUT;
 615              		.loc 1 489 0
 616 039e 0323     		movs	r3, #3
 617 03a0 4BE0     		b	.L5
 618              	.L47:
 485:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         {
 619              		.loc 1 485 0
 620 03a2 294B     		ldr	r3, .L56+4
 621 03a4 1B68     		ldr	r3, [r3]
 622 03a6 03F00073 		and	r3, r3, #33554432
 623 03aa 002B     		cmp	r3, #0
 624 03ac F0D1     		bne	.L48
 490:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           }
 491:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         }
 492:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 493:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         /* Configure the main PLL clock source, multiplication and division factors. */
 494:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                  
 625              		.loc 1 494 0
 626 03ae 2649     		ldr	r1, .L56+4
 627 03b0 7B68     		ldr	r3, [r7, #4]
 628 03b2 DA69     		ldr	r2, [r3, #28]
 629 03b4 7B68     		ldr	r3, [r7, #4]
 630 03b6 1B6A     		ldr	r3, [r3, #32]
 631 03b8 1A43     		orrs	r2, r2, r3
 632 03ba 7B68     		ldr	r3, [r7, #4]
 633 03bc 5B6A     		ldr	r3, [r3, #36]
 634 03be 9B01     		lsls	r3, r3, #6
 635 03c0 1A43     		orrs	r2, r2, r3
ARM GAS  /tmp/cc7zIX7I.s 			page 21


 636 03c2 7B68     		ldr	r3, [r7, #4]
 637 03c4 9B6A     		ldr	r3, [r3, #40]
 638 03c6 5B08     		lsrs	r3, r3, #1
 639 03c8 013B     		subs	r3, r3, #1
 640 03ca 1B04     		lsls	r3, r3, #16
 641 03cc 1A43     		orrs	r2, r2, r3
 642 03ce 7B68     		ldr	r3, [r7, #4]
 643 03d0 DB6A     		ldr	r3, [r3, #44]
 644 03d2 1B06     		lsls	r3, r3, #24
 645 03d4 1343     		orrs	r3, r3, r2
 646 03d6 4B60     		str	r3, [r1, #4]
 495:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****                                  RCC_OscInitStruct->PLL.PLLM                                       
 496:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****                                  (RCC_OscInitStruct->PLL.PLLN << RCC_PLLCFGR_PLLN_Pos)             
 497:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****                                  (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U) << RCC_PLLCFGR_PLLP_Po
 498:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****                                  (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)));
 499:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         /* Enable the main PLL. */
 500:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         __HAL_RCC_PLL_ENABLE();
 647              		.loc 1 500 0
 648 03d8 1C4B     		ldr	r3, .L56+8
 649 03da 0122     		movs	r2, #1
 650 03dc 1A60     		str	r2, [r3]
 501:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 502:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         /* Get Start Tick */
 503:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 651              		.loc 1 503 0
 652 03de FFF7FEFF 		bl	HAL_GetTick
 653 03e2 F860     		str	r0, [r7, #12]
 504:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 505:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         /* Wait till PLL is ready */
 506:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 654              		.loc 1 506 0
 655 03e4 08E0     		b	.L49
 656              	.L50:
 507:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         {
 508:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 657              		.loc 1 508 0
 658 03e6 FFF7FEFF 		bl	HAL_GetTick
 659 03ea 0246     		mov	r2, r0
 660 03ec FB68     		ldr	r3, [r7, #12]
 661 03ee D31A     		subs	r3, r2, r3
 662 03f0 022B     		cmp	r3, #2
 663 03f2 01D9     		bls	.L49
 509:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           {
 510:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****             return HAL_TIMEOUT;
 664              		.loc 1 510 0
 665 03f4 0323     		movs	r3, #3
 666 03f6 20E0     		b	.L5
 667              	.L49:
 506:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         {
 668              		.loc 1 506 0
 669 03f8 134B     		ldr	r3, .L56+4
 670 03fa 1B68     		ldr	r3, [r3]
 671 03fc 03F00073 		and	r3, r3, #33554432
 672 0400 002B     		cmp	r3, #0
 673 0402 F0D0     		beq	.L50
 674 0404 18E0     		b	.L44
 675              	.L46:
ARM GAS  /tmp/cc7zIX7I.s 			page 22


 511:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           }
 512:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         }
 513:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       }
 514:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       else
 515:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 516:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         /* Disable the main PLL. */
 517:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         __HAL_RCC_PLL_DISABLE();
 676              		.loc 1 517 0
 677 0406 114B     		ldr	r3, .L56+8
 678 0408 0022     		movs	r2, #0
 679 040a 1A60     		str	r2, [r3]
 518:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 519:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         /* Get Start Tick */
 520:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 680              		.loc 1 520 0
 681 040c FFF7FEFF 		bl	HAL_GetTick
 682 0410 F860     		str	r0, [r7, #12]
 521:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 522:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         /* Wait till PLL is ready */
 523:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 683              		.loc 1 523 0
 684 0412 08E0     		b	.L51
 685              	.L52:
 524:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         {
 525:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 686              		.loc 1 525 0
 687 0414 FFF7FEFF 		bl	HAL_GetTick
 688 0418 0246     		mov	r2, r0
 689 041a FB68     		ldr	r3, [r7, #12]
 690 041c D31A     		subs	r3, r2, r3
 691 041e 022B     		cmp	r3, #2
 692 0420 01D9     		bls	.L51
 526:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           {
 527:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****             return HAL_TIMEOUT;
 693              		.loc 1 527 0
 694 0422 0323     		movs	r3, #3
 695 0424 09E0     		b	.L5
 696              	.L51:
 523:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         {
 697              		.loc 1 523 0
 698 0426 084B     		ldr	r3, .L56+4
 699 0428 1B68     		ldr	r3, [r3]
 700 042a 03F00073 		and	r3, r3, #33554432
 701 042e 002B     		cmp	r3, #0
 702 0430 F0D1     		bne	.L52
 703 0432 01E0     		b	.L44
 704              	.L45:
 528:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           }
 529:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         }
 530:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       }
 531:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     }
 532:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     else
 533:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
 534:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       return HAL_ERROR;
 705              		.loc 1 534 0
 706 0434 0123     		movs	r3, #1
 707 0436 00E0     		b	.L5
ARM GAS  /tmp/cc7zIX7I.s 			page 23


 708              	.L44:
 535:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     }
 536:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
 537:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   return HAL_OK;
 709              		.loc 1 537 0
 710 0438 0023     		movs	r3, #0
 711              	.L5:
 538:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** }
 712              		.loc 1 538 0
 713 043a 1846     		mov	r0, r3
 714 043c 1037     		adds	r7, r7, #16
 715              	.LCFI7:
 716              		.cfi_def_cfa_offset 8
 717 043e BD46     		mov	sp, r7
 718              	.LCFI8:
 719              		.cfi_def_cfa_register 13
 720              		@ sp needed
 721 0440 80BD     		pop	{r7, pc}
 722              	.L57:
 723 0442 00BF     		.align	2
 724              	.L56:
 725 0444 00700040 		.word	1073770496
 726 0448 00380240 		.word	1073887232
 727 044c 60004742 		.word	1111949408
 728              		.cfi_endproc
 729              	.LFE125:
 731              		.section	.text.HAL_RCC_ClockConfig,"ax",%progbits
 732              		.align	1
 733              		.global	HAL_RCC_ClockConfig
 734              		.syntax unified
 735              		.thumb
 736              		.thumb_func
 737              		.fpu fpv4-sp-d16
 739              	HAL_RCC_ClockConfig:
 740              	.LFB126:
 539:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 540:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /**
 541:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @brief  Initializes the CPU, AHB and APB busses clocks according to the specified
 542:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         parameters in the RCC_ClkInitStruct.
 543:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @param  RCC_ClkInitStruct pointer to an RCC_OscInitTypeDef structure that
 544:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         contains the configuration information for the RCC peripheral.
 545:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @param  FLatency FLASH Latency, this parameter depend on device selected
 546:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *
 547:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @note   The SystemCoreClock CMSIS variable is used to store System Clock Frequency
 548:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         and updated by HAL_RCC_GetHCLKFreq() function called within this function
 549:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *
 550:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @note   The HSI is used (enabled by hardware) as system clock source after
 551:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         startup from Reset, wake-up from STOP and STANDBY mode, or in case
 552:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         of failure of the HSE used directly or indirectly as system clock
 553:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         (if the Clock Security System CSS is enabled).
 554:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *
 555:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @note   A switch from one clock source to another occurs only if the target
 556:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         clock source is ready (clock stable after startup delay or PLL locked).
 557:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         If a clock source which is not yet ready is selected, the switch will
 558:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         occur when the clock source will be ready.
 559:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *
 560:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @note   Depending on the device voltage range, the software has to set correctly
ARM GAS  /tmp/cc7zIX7I.s 			page 24


 561:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         HPRE[3:0] bits to ensure that HCLK not exceed the maximum allowed frequency
 562:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         (for more details refer to section above "Initialization/de-initialization functions")
 563:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @retval None
 564:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   */
 565:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** HAL_StatusTypeDef HAL_RCC_ClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t FLatency)
 566:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** {
 741              		.loc 1 566 0
 742              		.cfi_startproc
 743              		@ args = 0, pretend = 0, frame = 16
 744              		@ frame_needed = 1, uses_anonymous_args = 0
 745 0000 80B5     		push	{r7, lr}
 746              	.LCFI9:
 747              		.cfi_def_cfa_offset 8
 748              		.cfi_offset 7, -8
 749              		.cfi_offset 14, -4
 750 0002 84B0     		sub	sp, sp, #16
 751              	.LCFI10:
 752              		.cfi_def_cfa_offset 24
 753 0004 00AF     		add	r7, sp, #0
 754              	.LCFI11:
 755              		.cfi_def_cfa_register 7
 756 0006 7860     		str	r0, [r7, #4]
 757 0008 3960     		str	r1, [r7]
 567:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   uint32_t tickstart;
 568:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 569:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* Check Null pointer */
 570:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   if(RCC_ClkInitStruct == NULL)
 758              		.loc 1 570 0
 759 000a 7B68     		ldr	r3, [r7, #4]
 760 000c 002B     		cmp	r3, #0
 761 000e 01D1     		bne	.L59
 571:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
 572:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     return HAL_ERROR;
 762              		.loc 1 572 0
 763 0010 0123     		movs	r3, #1
 764 0012 CAE0     		b	.L60
 765              	.L59:
 573:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
 574:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 575:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* Check the parameters */
 576:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   assert_param(IS_RCC_CLOCKTYPE(RCC_ClkInitStruct->ClockType));
 577:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   assert_param(IS_FLASH_LATENCY(FLatency));
 578:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 579:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* To correctly read data from FLASH memory, the number of wait states (LATENCY)
 580:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     must be correctly programmed according to the frequency of the CPU clock
 581:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     (HCLK) and the supply voltage of the device. */
 582:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 583:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* Increasing the number of wait states because of higher CPU frequency */
 584:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   if(FLatency > __HAL_FLASH_GET_LATENCY())
 766              		.loc 1 584 0
 767 0014 674B     		ldr	r3, .L76
 768 0016 1B68     		ldr	r3, [r3]
 769 0018 03F00F02 		and	r2, r3, #15
 770 001c 3B68     		ldr	r3, [r7]
 771 001e 9A42     		cmp	r2, r3
 772 0020 0CD2     		bcs	.L61
 585:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
ARM GAS  /tmp/cc7zIX7I.s 			page 25


 586:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
 587:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     __HAL_FLASH_SET_LATENCY(FLatency);
 773              		.loc 1 587 0
 774 0022 644B     		ldr	r3, .L76
 775 0024 3A68     		ldr	r2, [r7]
 776 0026 D2B2     		uxtb	r2, r2
 777 0028 1A70     		strb	r2, [r3]
 588:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 589:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* Check that the new number of wait states is taken into account to access the Flash
 590:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     memory by reading the FLASH_ACR register */
 591:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     if(__HAL_FLASH_GET_LATENCY() != FLatency)
 778              		.loc 1 591 0
 779 002a 624B     		ldr	r3, .L76
 780 002c 1B68     		ldr	r3, [r3]
 781 002e 03F00F02 		and	r2, r3, #15
 782 0032 3B68     		ldr	r3, [r7]
 783 0034 9A42     		cmp	r2, r3
 784 0036 01D0     		beq	.L61
 592:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
 593:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       return HAL_ERROR;
 785              		.loc 1 593 0
 786 0038 0123     		movs	r3, #1
 787 003a B6E0     		b	.L60
 788              	.L61:
 594:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     }
 595:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
 596:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 597:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /*-------------------------- HCLK Configuration --------------------------*/
 598:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 789              		.loc 1 598 0
 790 003c 7B68     		ldr	r3, [r7, #4]
 791 003e 1B68     		ldr	r3, [r3]
 792 0040 03F00203 		and	r3, r3, #2
 793 0044 002B     		cmp	r3, #0
 794 0046 20D0     		beq	.L62
 599:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
 600:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* Set the highest APBx dividers in order to ensure that we do not go through
 601:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****        a non-spec phase whatever we decrease or increase HCLK. */
 602:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 795              		.loc 1 602 0
 796 0048 7B68     		ldr	r3, [r7, #4]
 797 004a 1B68     		ldr	r3, [r3]
 798 004c 03F00403 		and	r3, r3, #4
 799 0050 002B     		cmp	r3, #0
 800 0052 05D0     		beq	.L63
 603:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
 604:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_HCLK_DIV16);
 801              		.loc 1 604 0
 802 0054 584A     		ldr	r2, .L76+4
 803 0056 584B     		ldr	r3, .L76+4
 804 0058 9B68     		ldr	r3, [r3, #8]
 805 005a 43F4E053 		orr	r3, r3, #7168
 806 005e 9360     		str	r3, [r2, #8]
 807              	.L63:
 605:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     }
 606:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 607:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
ARM GAS  /tmp/cc7zIX7I.s 			page 26


 808              		.loc 1 607 0
 809 0060 7B68     		ldr	r3, [r7, #4]
 810 0062 1B68     		ldr	r3, [r3]
 811 0064 03F00803 		and	r3, r3, #8
 812 0068 002B     		cmp	r3, #0
 813 006a 05D0     		beq	.L64
 608:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
 609:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, (RCC_HCLK_DIV16 << 3));
 814              		.loc 1 609 0
 815 006c 524A     		ldr	r2, .L76+4
 816 006e 524B     		ldr	r3, .L76+4
 817 0070 9B68     		ldr	r3, [r3, #8]
 818 0072 43F46043 		orr	r3, r3, #57344
 819 0076 9360     		str	r3, [r2, #8]
 820              	.L64:
 610:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     }
 611:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 612:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     assert_param(IS_RCC_HCLK(RCC_ClkInitStruct->AHBCLKDivider));
 613:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 821              		.loc 1 613 0
 822 0078 4F49     		ldr	r1, .L76+4
 823 007a 4F4B     		ldr	r3, .L76+4
 824 007c 9B68     		ldr	r3, [r3, #8]
 825 007e 23F0F002 		bic	r2, r3, #240
 826 0082 7B68     		ldr	r3, [r7, #4]
 827 0084 9B68     		ldr	r3, [r3, #8]
 828 0086 1343     		orrs	r3, r3, r2
 829 0088 8B60     		str	r3, [r1, #8]
 830              	.L62:
 614:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
 615:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 616:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /*------------------------- SYSCLK Configuration ---------------------------*/
 617:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 831              		.loc 1 617 0
 832 008a 7B68     		ldr	r3, [r7, #4]
 833 008c 1B68     		ldr	r3, [r3]
 834 008e 03F00103 		and	r3, r3, #1
 835 0092 002B     		cmp	r3, #0
 836 0094 44D0     		beq	.L65
 618:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
 619:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     assert_param(IS_RCC_SYSCLKSOURCE(RCC_ClkInitStruct->SYSCLKSource));
 620:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 621:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* HSE is selected as System Clock Source */
 622:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 837              		.loc 1 622 0
 838 0096 7B68     		ldr	r3, [r7, #4]
 839 0098 5B68     		ldr	r3, [r3, #4]
 840 009a 012B     		cmp	r3, #1
 841 009c 07D1     		bne	.L66
 623:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
 624:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       /* Check the HSE ready flag */
 625:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 842              		.loc 1 625 0
 843 009e 464B     		ldr	r3, .L76+4
 844 00a0 1B68     		ldr	r3, [r3]
 845 00a2 03F40033 		and	r3, r3, #131072
 846 00a6 002B     		cmp	r3, #0
ARM GAS  /tmp/cc7zIX7I.s 			page 27


 847 00a8 19D1     		bne	.L67
 626:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 627:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         return HAL_ERROR;
 848              		.loc 1 627 0
 849 00aa 0123     		movs	r3, #1
 850 00ac 7DE0     		b	.L60
 851              	.L66:
 628:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       }
 629:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     }
 630:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* PLL is selected as System Clock Source */
 631:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 852              		.loc 1 631 0
 853 00ae 7B68     		ldr	r3, [r7, #4]
 854 00b0 5B68     		ldr	r3, [r3, #4]
 855 00b2 022B     		cmp	r3, #2
 856 00b4 03D0     		beq	.L68
 632:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****             (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLRCLK))
 857              		.loc 1 632 0 discriminator 1
 858 00b6 7B68     		ldr	r3, [r7, #4]
 859 00b8 5B68     		ldr	r3, [r3, #4]
 631:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****             (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLRCLK))
 860              		.loc 1 631 0 discriminator 1
 861 00ba 032B     		cmp	r3, #3
 862 00bc 07D1     		bne	.L69
 863              	.L68:
 633:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
 634:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       /* Check the PLL ready flag */
 635:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 864              		.loc 1 635 0
 865 00be 3E4B     		ldr	r3, .L76+4
 866 00c0 1B68     		ldr	r3, [r3]
 867 00c2 03F00073 		and	r3, r3, #33554432
 868 00c6 002B     		cmp	r3, #0
 869 00c8 09D1     		bne	.L67
 636:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 637:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         return HAL_ERROR;
 870              		.loc 1 637 0
 871 00ca 0123     		movs	r3, #1
 872 00cc 6DE0     		b	.L60
 873              	.L69:
 638:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       }
 639:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     }
 640:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* HSI is selected as System Clock Source */
 641:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     else
 642:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
 643:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       /* Check the HSI ready flag */
 644:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 874              		.loc 1 644 0
 875 00ce 3A4B     		ldr	r3, .L76+4
 876 00d0 1B68     		ldr	r3, [r3]
 877 00d2 03F00203 		and	r3, r3, #2
 878 00d6 002B     		cmp	r3, #0
 879 00d8 01D1     		bne	.L67
 645:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 646:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         return HAL_ERROR;
 880              		.loc 1 646 0
 881 00da 0123     		movs	r3, #1
ARM GAS  /tmp/cc7zIX7I.s 			page 28


 882 00dc 65E0     		b	.L60
 883              	.L67:
 647:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       }
 648:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     }
 649:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 650:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 884              		.loc 1 650 0
 885 00de 3649     		ldr	r1, .L76+4
 886 00e0 354B     		ldr	r3, .L76+4
 887 00e2 9B68     		ldr	r3, [r3, #8]
 888 00e4 23F00302 		bic	r2, r3, #3
 889 00e8 7B68     		ldr	r3, [r7, #4]
 890 00ea 5B68     		ldr	r3, [r3, #4]
 891 00ec 1343     		orrs	r3, r3, r2
 892 00ee 8B60     		str	r3, [r1, #8]
 651:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 652:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* Get Start Tick */
 653:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     tickstart = HAL_GetTick();
 893              		.loc 1 653 0
 894 00f0 FFF7FEFF 		bl	HAL_GetTick
 895 00f4 F860     		str	r0, [r7, #12]
 654:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 655:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 896              		.loc 1 655 0
 897 00f6 0AE0     		b	.L71
 898              	.L72:
 656:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
 657:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 899              		.loc 1 657 0
 900 00f8 FFF7FEFF 		bl	HAL_GetTick
 901 00fc 0246     		mov	r2, r0
 902 00fe FB68     		ldr	r3, [r7, #12]
 903 0100 D31A     		subs	r3, r2, r3
 904 0102 41F28832 		movw	r2, #5000
 905 0106 9342     		cmp	r3, r2
 906 0108 01D9     		bls	.L71
 658:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 659:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         return HAL_TIMEOUT;
 907              		.loc 1 659 0
 908 010a 0323     		movs	r3, #3
 909 010c 4DE0     		b	.L60
 910              	.L71:
 655:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
 911              		.loc 1 655 0
 912 010e 2A4B     		ldr	r3, .L76+4
 913 0110 9B68     		ldr	r3, [r3, #8]
 914 0112 03F00C02 		and	r2, r3, #12
 915 0116 7B68     		ldr	r3, [r7, #4]
 916 0118 5B68     		ldr	r3, [r3, #4]
 917 011a 9B00     		lsls	r3, r3, #2
 918 011c 9A42     		cmp	r2, r3
 919 011e EBD1     		bne	.L72
 920              	.L65:
 660:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       }
 661:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     }
 662:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
 663:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
ARM GAS  /tmp/cc7zIX7I.s 			page 29


 664:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* Decreasing the number of wait states because of lower CPU frequency */
 665:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   if(FLatency < __HAL_FLASH_GET_LATENCY())
 921              		.loc 1 665 0
 922 0120 244B     		ldr	r3, .L76
 923 0122 1B68     		ldr	r3, [r3]
 924 0124 03F00F02 		and	r2, r3, #15
 925 0128 3B68     		ldr	r3, [r7]
 926 012a 9A42     		cmp	r2, r3
 927 012c 0CD9     		bls	.L73
 666:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
 667:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****      /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
 668:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     __HAL_FLASH_SET_LATENCY(FLatency);
 928              		.loc 1 668 0
 929 012e 214B     		ldr	r3, .L76
 930 0130 3A68     		ldr	r2, [r7]
 931 0132 D2B2     		uxtb	r2, r2
 932 0134 1A70     		strb	r2, [r3]
 669:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 670:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* Check that the new number of wait states is taken into account to access the Flash
 671:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     memory by reading the FLASH_ACR register */
 672:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     if(__HAL_FLASH_GET_LATENCY() != FLatency)
 933              		.loc 1 672 0
 934 0136 1F4B     		ldr	r3, .L76
 935 0138 1B68     		ldr	r3, [r3]
 936 013a 03F00F02 		and	r2, r3, #15
 937 013e 3B68     		ldr	r3, [r7]
 938 0140 9A42     		cmp	r2, r3
 939 0142 01D0     		beq	.L73
 673:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
 674:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       return HAL_ERROR;
 940              		.loc 1 674 0
 941 0144 0123     		movs	r3, #1
 942 0146 30E0     		b	.L60
 943              	.L73:
 675:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     }
 676:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
 677:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 678:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /*-------------------------- PCLK1 Configuration ---------------------------*/
 679:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 944              		.loc 1 679 0
 945 0148 7B68     		ldr	r3, [r7, #4]
 946 014a 1B68     		ldr	r3, [r3]
 947 014c 03F00403 		and	r3, r3, #4
 948 0150 002B     		cmp	r3, #0
 949 0152 08D0     		beq	.L74
 680:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
 681:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     assert_param(IS_RCC_PCLK(RCC_ClkInitStruct->APB1CLKDivider));
 682:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_ClkInitStruct->APB1CLKDivider);
 950              		.loc 1 682 0
 951 0154 1849     		ldr	r1, .L76+4
 952 0156 184B     		ldr	r3, .L76+4
 953 0158 9B68     		ldr	r3, [r3, #8]
 954 015a 23F4E052 		bic	r2, r3, #7168
 955 015e 7B68     		ldr	r3, [r7, #4]
 956 0160 DB68     		ldr	r3, [r3, #12]
 957 0162 1343     		orrs	r3, r3, r2
 958 0164 8B60     		str	r3, [r1, #8]
ARM GAS  /tmp/cc7zIX7I.s 			page 30


 959              	.L74:
 683:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
 684:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 685:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /*-------------------------- PCLK2 Configuration ---------------------------*/
 686:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 960              		.loc 1 686 0
 961 0166 7B68     		ldr	r3, [r7, #4]
 962 0168 1B68     		ldr	r3, [r3]
 963 016a 03F00803 		and	r3, r3, #8
 964 016e 002B     		cmp	r3, #0
 965 0170 09D0     		beq	.L75
 687:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
 688:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     assert_param(IS_RCC_PCLK(RCC_ClkInitStruct->APB2CLKDivider));
 689:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, ((RCC_ClkInitStruct->APB2CLKDivider) << 3U));
 966              		.loc 1 689 0
 967 0172 1149     		ldr	r1, .L76+4
 968 0174 104B     		ldr	r3, .L76+4
 969 0176 9B68     		ldr	r3, [r3, #8]
 970 0178 23F46042 		bic	r2, r3, #57344
 971 017c 7B68     		ldr	r3, [r7, #4]
 972 017e 1B69     		ldr	r3, [r3, #16]
 973 0180 DB00     		lsls	r3, r3, #3
 974 0182 1343     		orrs	r3, r3, r2
 975 0184 8B60     		str	r3, [r1, #8]
 976              	.L75:
 690:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
 691:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 692:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* Update the SystemCoreClock global variable */
 693:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CF
 977              		.loc 1 693 0
 978 0186 FFF7FEFF 		bl	HAL_RCC_GetSysClockFreq
 979 018a 0146     		mov	r1, r0
 980 018c 0A4B     		ldr	r3, .L76+4
 981 018e 9B68     		ldr	r3, [r3, #8]
 982 0190 1B09     		lsrs	r3, r3, #4
 983 0192 03F00F03 		and	r3, r3, #15
 984 0196 094A     		ldr	r2, .L76+8
 985 0198 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 986 019a 21FA03F3 		lsr	r3, r1, r3
 987 019e 084A     		ldr	r2, .L76+12
 988 01a0 1360     		str	r3, [r2]
 694:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 695:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* Configure the source of time base considering new system clocks settings */
 696:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   HAL_InitTick (TICK_INT_PRIORITY);
 989              		.loc 1 696 0
 990 01a2 0020     		movs	r0, #0
 991 01a4 FFF7FEFF 		bl	HAL_InitTick
 697:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 698:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   return HAL_OK;
 992              		.loc 1 698 0
 993 01a8 0023     		movs	r3, #0
 994              	.L60:
 699:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** }
 995              		.loc 1 699 0
 996 01aa 1846     		mov	r0, r3
 997 01ac 1037     		adds	r7, r7, #16
 998              	.LCFI12:
ARM GAS  /tmp/cc7zIX7I.s 			page 31


 999              		.cfi_def_cfa_offset 8
 1000 01ae BD46     		mov	sp, r7
 1001              	.LCFI13:
 1002              		.cfi_def_cfa_register 13
 1003              		@ sp needed
 1004 01b0 80BD     		pop	{r7, pc}
 1005              	.L77:
 1006 01b2 00BF     		.align	2
 1007              	.L76:
 1008 01b4 003C0240 		.word	1073888256
 1009 01b8 00380240 		.word	1073887232
 1010 01bc 00000000 		.word	AHBPrescTable
 1011 01c0 00000000 		.word	SystemCoreClock
 1012              		.cfi_endproc
 1013              	.LFE126:
 1015              		.section	.text.HAL_RCC_MCOConfig,"ax",%progbits
 1016              		.align	1
 1017              		.global	HAL_RCC_MCOConfig
 1018              		.syntax unified
 1019              		.thumb
 1020              		.thumb_func
 1021              		.fpu fpv4-sp-d16
 1023              	HAL_RCC_MCOConfig:
 1024              	.LFB127:
 700:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 701:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /**
 702:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @}
 703:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   */
 704:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 705:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /** @defgroup RCC_Exported_Functions_Group2 Peripheral Control functions
 706:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****  *  @brief   RCC clocks control functions
 707:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****  *
 708:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** @verbatim
 709:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****  ===============================================================================
 710:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****                       ##### Peripheral Control functions #####
 711:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****  ===============================================================================
 712:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     [..]
 713:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     This subsection provides a set of functions allowing to control the RCC Clocks
 714:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     frequencies.
 715:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 716:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** @endverbatim
 717:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @{
 718:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   */
 719:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 720:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /**
 721:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @brief  Selects the clock source to output on MCO1 pin(PA8) or on MCO2 pin(PC9).
 722:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @note   PA8/PC9 should be configured in alternate function mode.
 723:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @param  RCC_MCOx specifies the output direction for the clock source.
 724:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *          This parameter can be one of the following values:
 725:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *            @arg RCC_MCO1: Clock source to output on MCO1 pin(PA8).
 726:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *            @arg RCC_MCO2: Clock source to output on MCO2 pin(PC9).
 727:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @param  RCC_MCOSource specifies the clock source to output.
 728:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *          This parameter can be one of the following values:
 729:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *            @arg RCC_MCO1SOURCE_HSI: HSI clock selected as MCO1 source
 730:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *            @arg RCC_MCO1SOURCE_LSE: LSE clock selected as MCO1 source
 731:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *            @arg RCC_MCO1SOURCE_HSE: HSE clock selected as MCO1 source
 732:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *            @arg RCC_MCO1SOURCE_PLLCLK: main PLL clock selected as MCO1 source
ARM GAS  /tmp/cc7zIX7I.s 			page 32


 733:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *            @arg RCC_MCO2SOURCE_SYSCLK: System clock (SYSCLK) selected as MCO2 source
 734:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *            @arg RCC_MCO2SOURCE_PLLI2SCLK: PLLI2S clock selected as MCO2 source, available for a
 735:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *            @arg RCC_MCO2SOURCE_I2SCLK: I2SCLK clock selected as MCO2 source, available only for
 736:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *            @arg RCC_MCO2SOURCE_HSE: HSE clock selected as MCO2 source
 737:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *            @arg RCC_MCO2SOURCE_PLLCLK: main PLL clock selected as MCO2 source
 738:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @param  RCC_MCODiv specifies the MCOx prescaler.
 739:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *          This parameter can be one of the following values:
 740:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *            @arg RCC_MCODIV_1: no division applied to MCOx clock
 741:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *            @arg RCC_MCODIV_2: division by 2 applied to MCOx clock
 742:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *            @arg RCC_MCODIV_3: division by 3 applied to MCOx clock
 743:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *            @arg RCC_MCODIV_4: division by 4 applied to MCOx clock
 744:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *            @arg RCC_MCODIV_5: division by 5 applied to MCOx clock
 745:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @note  For STM32F410Rx devices to output I2SCLK clock on MCO2 you should have
 746:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *        at last one of the SPI clocks enabled (SPI1, SPI2 or SPI5).
 747:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @retval None
 748:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   */
 749:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** void HAL_RCC_MCOConfig(uint32_t RCC_MCOx, uint32_t RCC_MCOSource, uint32_t RCC_MCODiv)
 750:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** {
 1025              		.loc 1 750 0
 1026              		.cfi_startproc
 1027              		@ args = 0, pretend = 0, frame = 48
 1028              		@ frame_needed = 1, uses_anonymous_args = 0
 1029 0000 80B5     		push	{r7, lr}
 1030              	.LCFI14:
 1031              		.cfi_def_cfa_offset 8
 1032              		.cfi_offset 7, -8
 1033              		.cfi_offset 14, -4
 1034 0002 8CB0     		sub	sp, sp, #48
 1035              	.LCFI15:
 1036              		.cfi_def_cfa_offset 56
 1037 0004 00AF     		add	r7, sp, #0
 1038              	.LCFI16:
 1039              		.cfi_def_cfa_register 7
 1040 0006 F860     		str	r0, [r7, #12]
 1041 0008 B960     		str	r1, [r7, #8]
 1042 000a 7A60     		str	r2, [r7, #4]
 751:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   GPIO_InitTypeDef GPIO_InitStruct;
 752:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* Check the parameters */
 753:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   assert_param(IS_RCC_MCO(RCC_MCOx));
 754:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   assert_param(IS_RCC_MCODIV(RCC_MCODiv));
 755:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* RCC_MCO1 */
 756:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   if(RCC_MCOx == RCC_MCO1)
 1043              		.loc 1 756 0
 1044 000c FB68     		ldr	r3, [r7, #12]
 1045 000e 002B     		cmp	r3, #0
 1046 0010 29D1     		bne	.L79
 1047              	.LBB3:
 757:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
 758:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     assert_param(IS_RCC_MCO1SOURCE(RCC_MCOSource));
 759:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 760:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* MCO1 Clock Enable */
 761:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     __MCO1_CLK_ENABLE();
 1048              		.loc 1 761 0
 1049 0012 0023     		movs	r3, #0
 1050 0014 BB61     		str	r3, [r7, #24]
 1051 0016 2B4A     		ldr	r2, .L82
 1052 0018 2A4B     		ldr	r3, .L82
ARM GAS  /tmp/cc7zIX7I.s 			page 33


 1053 001a 1B6B     		ldr	r3, [r3, #48]
 1054 001c 43F00103 		orr	r3, r3, #1
 1055 0020 1363     		str	r3, [r2, #48]
 1056 0022 284B     		ldr	r3, .L82
 1057 0024 1B6B     		ldr	r3, [r3, #48]
 1058 0026 03F00103 		and	r3, r3, #1
 1059 002a BB61     		str	r3, [r7, #24]
 1060 002c BB69     		ldr	r3, [r7, #24]
 1061              	.LBE3:
 762:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 763:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* Configure the MCO1 pin in alternate function mode */
 764:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     GPIO_InitStruct.Pin = MCO1_PIN;
 1062              		.loc 1 764 0
 1063 002e 4FF48073 		mov	r3, #256
 1064 0032 FB61     		str	r3, [r7, #28]
 765:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 1065              		.loc 1 765 0
 1066 0034 0223     		movs	r3, #2
 1067 0036 3B62     		str	r3, [r7, #32]
 766:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 1068              		.loc 1 766 0
 1069 0038 0323     		movs	r3, #3
 1070 003a BB62     		str	r3, [r7, #40]
 767:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 1071              		.loc 1 767 0
 1072 003c 0023     		movs	r3, #0
 1073 003e 7B62     		str	r3, [r7, #36]
 768:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     GPIO_InitStruct.Alternate = GPIO_AF0_MCO;
 1074              		.loc 1 768 0
 1075 0040 0023     		movs	r3, #0
 1076 0042 FB62     		str	r3, [r7, #44]
 769:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     HAL_GPIO_Init(MCO1_GPIO_PORT, &GPIO_InitStruct);
 1077              		.loc 1 769 0
 1078 0044 07F11C03 		add	r3, r7, #28
 1079 0048 1946     		mov	r1, r3
 1080 004a 1F48     		ldr	r0, .L82+4
 1081 004c FFF7FEFF 		bl	HAL_GPIO_Init
 770:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 771:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* Mask MCO1 and MCO1PRE[2:0] bits then Select MCO1 clock source and prescaler */
 772:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     MODIFY_REG(RCC->CFGR, (RCC_CFGR_MCO1 | RCC_CFGR_MCO1PRE), (RCC_MCOSource | RCC_MCODiv));
 1082              		.loc 1 772 0
 1083 0050 1C48     		ldr	r0, .L82
 1084 0052 1C4B     		ldr	r3, .L82
 1085 0054 9B68     		ldr	r3, [r3, #8]
 1086 0056 23F0EC62 		bic	r2, r3, #123731968
 1087 005a B968     		ldr	r1, [r7, #8]
 1088 005c 7B68     		ldr	r3, [r7, #4]
 1089 005e 0B43     		orrs	r3, r3, r1
 1090 0060 1343     		orrs	r3, r3, r2
 1091 0062 8360     		str	r3, [r0, #8]
 773:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 774:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****    /* This RCC MCO1 enable feature is available only on STM32F410xx devices */
 775:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** #if defined(RCC_CFGR_MCO1EN)
 776:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     __HAL_RCC_MCO1_ENABLE();
 777:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** #endif /* RCC_CFGR_MCO1EN */
 778:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
 779:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** #if defined(RCC_CFGR_MCO2)
ARM GAS  /tmp/cc7zIX7I.s 			page 34


 780:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   else
 781:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
 782:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     assert_param(IS_RCC_MCO2SOURCE(RCC_MCOSource));
 783:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 784:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* MCO2 Clock Enable */
 785:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     __MCO2_CLK_ENABLE();
 786:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 787:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* Configure the MCO2 pin in alternate function mode */
 788:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     GPIO_InitStruct.Pin = MCO2_PIN;
 789:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 790:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 791:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 792:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     GPIO_InitStruct.Alternate = GPIO_AF0_MCO;
 793:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     HAL_GPIO_Init(MCO2_GPIO_PORT, &GPIO_InitStruct);
 794:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 795:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* Mask MCO2 and MCO2PRE[2:0] bits then Select MCO2 clock source and prescaler */
 796:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     MODIFY_REG(RCC->CFGR, (RCC_CFGR_MCO2 | RCC_CFGR_MCO2PRE), (RCC_MCOSource | (RCC_MCODiv << 3U)))
 797:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 798:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****    /* This RCC MCO2 enable feature is available only on STM32F410Rx devices */
 799:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** #if defined(RCC_CFGR_MCO2EN)
 800:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     __HAL_RCC_MCO2_ENABLE();
 801:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** #endif /* RCC_CFGR_MCO2EN */
 802:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
 803:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** #endif /* RCC_CFGR_MCO2 */
 804:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** }
 1092              		.loc 1 804 0
 1093 0064 29E0     		b	.L81
 1094              	.L79:
 1095              	.LBB4:
 785:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 1096              		.loc 1 785 0
 1097 0066 0023     		movs	r3, #0
 1098 0068 7B61     		str	r3, [r7, #20]
 1099 006a 164A     		ldr	r2, .L82
 1100 006c 154B     		ldr	r3, .L82
 1101 006e 1B6B     		ldr	r3, [r3, #48]
 1102 0070 43F00403 		orr	r3, r3, #4
 1103 0074 1363     		str	r3, [r2, #48]
 1104 0076 134B     		ldr	r3, .L82
 1105 0078 1B6B     		ldr	r3, [r3, #48]
 1106 007a 03F00403 		and	r3, r3, #4
 1107 007e 7B61     		str	r3, [r7, #20]
 1108 0080 7B69     		ldr	r3, [r7, #20]
 1109              	.LBE4:
 788:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 1110              		.loc 1 788 0
 1111 0082 4FF40073 		mov	r3, #512
 1112 0086 FB61     		str	r3, [r7, #28]
 789:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 1113              		.loc 1 789 0
 1114 0088 0223     		movs	r3, #2
 1115 008a 3B62     		str	r3, [r7, #32]
 790:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 1116              		.loc 1 790 0
 1117 008c 0323     		movs	r3, #3
 1118 008e BB62     		str	r3, [r7, #40]
 791:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     GPIO_InitStruct.Alternate = GPIO_AF0_MCO;
ARM GAS  /tmp/cc7zIX7I.s 			page 35


 1119              		.loc 1 791 0
 1120 0090 0023     		movs	r3, #0
 1121 0092 7B62     		str	r3, [r7, #36]
 792:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     HAL_GPIO_Init(MCO2_GPIO_PORT, &GPIO_InitStruct);
 1122              		.loc 1 792 0
 1123 0094 0023     		movs	r3, #0
 1124 0096 FB62     		str	r3, [r7, #44]
 793:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 1125              		.loc 1 793 0
 1126 0098 07F11C03 		add	r3, r7, #28
 1127 009c 1946     		mov	r1, r3
 1128 009e 0B48     		ldr	r0, .L82+8
 1129 00a0 FFF7FEFF 		bl	HAL_GPIO_Init
 796:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 1130              		.loc 1 796 0
 1131 00a4 0748     		ldr	r0, .L82
 1132 00a6 074B     		ldr	r3, .L82
 1133 00a8 9B68     		ldr	r3, [r3, #8]
 1134 00aa 23F07842 		bic	r2, r3, #-134217728
 1135 00ae 7B68     		ldr	r3, [r7, #4]
 1136 00b0 D900     		lsls	r1, r3, #3
 1137 00b2 BB68     		ldr	r3, [r7, #8]
 1138 00b4 0B43     		orrs	r3, r3, r1
 1139 00b6 1343     		orrs	r3, r3, r2
 1140 00b8 8360     		str	r3, [r0, #8]
 1141              	.L81:
 1142              		.loc 1 804 0
 1143 00ba 00BF     		nop
 1144 00bc 3037     		adds	r7, r7, #48
 1145              	.LCFI17:
 1146              		.cfi_def_cfa_offset 8
 1147 00be BD46     		mov	sp, r7
 1148              	.LCFI18:
 1149              		.cfi_def_cfa_register 13
 1150              		@ sp needed
 1151 00c0 80BD     		pop	{r7, pc}
 1152              	.L83:
 1153 00c2 00BF     		.align	2
 1154              	.L82:
 1155 00c4 00380240 		.word	1073887232
 1156 00c8 00000240 		.word	1073872896
 1157 00cc 00080240 		.word	1073874944
 1158              		.cfi_endproc
 1159              	.LFE127:
 1161              		.section	.text.HAL_RCC_EnableCSS,"ax",%progbits
 1162              		.align	1
 1163              		.global	HAL_RCC_EnableCSS
 1164              		.syntax unified
 1165              		.thumb
 1166              		.thumb_func
 1167              		.fpu fpv4-sp-d16
 1169              	HAL_RCC_EnableCSS:
 1170              	.LFB128:
 805:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 806:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /**
 807:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @brief  Enables the Clock Security System.
 808:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @note   If a failure is detected on the HSE oscillator clock, this oscillator
ARM GAS  /tmp/cc7zIX7I.s 			page 36


 809:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         is automatically disabled and an interrupt is generated to inform the
 810:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         software about the failure (Clock Security System Interrupt, CSSI),
 811:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         allowing the MCU to perform rescue operations. The CSSI is linked to
 812:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         the Cortex-M4 NMI (Non-Maskable Interrupt) exception vector.
 813:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @retval None
 814:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   */
 815:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** void HAL_RCC_EnableCSS(void)
 816:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** {
 1171              		.loc 1 816 0
 1172              		.cfi_startproc
 1173              		@ args = 0, pretend = 0, frame = 0
 1174              		@ frame_needed = 1, uses_anonymous_args = 0
 1175              		@ link register save eliminated.
 1176 0000 80B4     		push	{r7}
 1177              	.LCFI19:
 1178              		.cfi_def_cfa_offset 4
 1179              		.cfi_offset 7, -4
 1180 0002 00AF     		add	r7, sp, #0
 1181              	.LCFI20:
 1182              		.cfi_def_cfa_register 7
 817:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *(__IO uint32_t *) RCC_CR_CSSON_BB = (uint32_t)ENABLE;
 1183              		.loc 1 817 0
 1184 0004 034B     		ldr	r3, .L85
 1185 0006 0122     		movs	r2, #1
 1186 0008 1A60     		str	r2, [r3]
 818:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** }
 1187              		.loc 1 818 0
 1188 000a 00BF     		nop
 1189 000c BD46     		mov	sp, r7
 1190              	.LCFI21:
 1191              		.cfi_def_cfa_register 13
 1192              		@ sp needed
 1193 000e 5DF8047B 		ldr	r7, [sp], #4
 1194              	.LCFI22:
 1195              		.cfi_restore 7
 1196              		.cfi_def_cfa_offset 0
 1197 0012 7047     		bx	lr
 1198              	.L86:
 1199              		.align	2
 1200              	.L85:
 1201 0014 4C004742 		.word	1111949388
 1202              		.cfi_endproc
 1203              	.LFE128:
 1205              		.section	.text.HAL_RCC_DisableCSS,"ax",%progbits
 1206              		.align	1
 1207              		.global	HAL_RCC_DisableCSS
 1208              		.syntax unified
 1209              		.thumb
 1210              		.thumb_func
 1211              		.fpu fpv4-sp-d16
 1213              	HAL_RCC_DisableCSS:
 1214              	.LFB129:
 819:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 820:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /**
 821:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @brief  Disables the Clock Security System.
 822:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @retval None
 823:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   */
ARM GAS  /tmp/cc7zIX7I.s 			page 37


 824:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** void HAL_RCC_DisableCSS(void)
 825:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** {
 1215              		.loc 1 825 0
 1216              		.cfi_startproc
 1217              		@ args = 0, pretend = 0, frame = 0
 1218              		@ frame_needed = 1, uses_anonymous_args = 0
 1219              		@ link register save eliminated.
 1220 0000 80B4     		push	{r7}
 1221              	.LCFI23:
 1222              		.cfi_def_cfa_offset 4
 1223              		.cfi_offset 7, -4
 1224 0002 00AF     		add	r7, sp, #0
 1225              	.LCFI24:
 1226              		.cfi_def_cfa_register 7
 826:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *(__IO uint32_t *) RCC_CR_CSSON_BB = (uint32_t)DISABLE;
 1227              		.loc 1 826 0
 1228 0004 034B     		ldr	r3, .L88
 1229 0006 0022     		movs	r2, #0
 1230 0008 1A60     		str	r2, [r3]
 827:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** }
 1231              		.loc 1 827 0
 1232 000a 00BF     		nop
 1233 000c BD46     		mov	sp, r7
 1234              	.LCFI25:
 1235              		.cfi_def_cfa_register 13
 1236              		@ sp needed
 1237 000e 5DF8047B 		ldr	r7, [sp], #4
 1238              	.LCFI26:
 1239              		.cfi_restore 7
 1240              		.cfi_def_cfa_offset 0
 1241 0012 7047     		bx	lr
 1242              	.L89:
 1243              		.align	2
 1244              	.L88:
 1245 0014 4C004742 		.word	1111949388
 1246              		.cfi_endproc
 1247              	.LFE129:
 1249              		.global	__aeabi_uldivmod
 1250              		.section	.text.HAL_RCC_GetSysClockFreq,"ax",%progbits
 1251              		.align	1
 1252              		.weak	HAL_RCC_GetSysClockFreq
 1253              		.syntax unified
 1254              		.thumb
 1255              		.thumb_func
 1256              		.fpu fpv4-sp-d16
 1258              	HAL_RCC_GetSysClockFreq:
 1259              	.LFB130:
 828:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 829:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /**
 830:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @brief  Returns the SYSCLK frequency
 831:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *
 832:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @note   The system frequency computed by this function is not the real
 833:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         frequency in the chip. It is calculated based on the predefined
 834:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         constant and the selected clock source:
 835:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @note     If SYSCLK source is HSI, function returns values based on HSI_VALUE(*)
 836:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @note     If SYSCLK source is HSE, function returns values based on HSE_VALUE(**)
 837:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @note     If SYSCLK source is PLL, function returns values based on HSE_VALUE(**)
ARM GAS  /tmp/cc7zIX7I.s 			page 38


 838:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *           or HSI_VALUE(*) multiplied/divided by the PLL factors.
 839:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @note     (*) HSI_VALUE is a constant defined in stm32f4xx_hal_conf.h file (default value
 840:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *               16 MHz) but the real value may vary depending on the variations
 841:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *               in voltage and temperature.
 842:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @note     (**) HSE_VALUE is a constant defined in stm32f4xx_hal_conf.h file (default value
 843:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *                25 MHz), user has to ensure that HSE_VALUE is same as the real
 844:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *                frequency of the crystal used. Otherwise, this function may
 845:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *                have wrong result.
 846:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *
 847:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @note   The result of this function could be not correct when using fractional
 848:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         value for HSE crystal.
 849:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *
 850:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @note   This function can be used by the user application to compute the
 851:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         baudrate for the communication peripherals or configure other parameters.
 852:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *
 853:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @note   Each time SYSCLK changes, this function must be called to update the
 854:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         right SYSCLK value. Otherwise, any configuration based on this function will be incorre
 855:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *
 856:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *
 857:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @retval SYSCLK frequency
 858:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   */
 859:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** __weak uint32_t HAL_RCC_GetSysClockFreq(void)
 860:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** {
 1260              		.loc 1 860 0
 1261              		.cfi_startproc
 1262              		@ args = 0, pretend = 0, frame = 56
 1263              		@ frame_needed = 1, uses_anonymous_args = 0
 1264 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 1265              	.LCFI27:
 1266              		.cfi_def_cfa_offset 36
 1267              		.cfi_offset 4, -36
 1268              		.cfi_offset 5, -32
 1269              		.cfi_offset 6, -28
 1270              		.cfi_offset 7, -24
 1271              		.cfi_offset 8, -20
 1272              		.cfi_offset 9, -16
 1273              		.cfi_offset 10, -12
 1274              		.cfi_offset 11, -8
 1275              		.cfi_offset 14, -4
 1276 0004 8FB0     		sub	sp, sp, #60
 1277              	.LCFI28:
 1278              		.cfi_def_cfa_offset 96
 1279 0006 00AF     		add	r7, sp, #0
 1280              	.LCFI29:
 1281              		.cfi_def_cfa_register 7
 861:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   uint32_t pllm = 0U, pllvco = 0U, pllp = 0U;
 1282              		.loc 1 861 0
 1283 0008 0023     		movs	r3, #0
 1284 000a FB62     		str	r3, [r7, #44]
 1285 000c 0023     		movs	r3, #0
 1286 000e 7B63     		str	r3, [r7, #52]
 1287 0010 0023     		movs	r3, #0
 1288 0012 BB62     		str	r3, [r7, #40]
 862:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   uint32_t sysclockfreq = 0U;
 1289              		.loc 1 862 0
 1290 0014 0023     		movs	r3, #0
 1291 0016 3B63     		str	r3, [r7, #48]
ARM GAS  /tmp/cc7zIX7I.s 			page 39


 863:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 864:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* Get SYSCLK source -------------------------------------------------------*/
 865:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   switch (RCC->CFGR & RCC_CFGR_SWS)
 1292              		.loc 1 865 0
 1293 0018 624B     		ldr	r3, .L100
 1294 001a 9B68     		ldr	r3, [r3, #8]
 1295 001c 03F00C03 		and	r3, r3, #12
 1296 0020 042B     		cmp	r3, #4
 1297 0022 07D0     		beq	.L92
 1298 0024 082B     		cmp	r3, #8
 1299 0026 08D0     		beq	.L93
 1300 0028 002B     		cmp	r3, #0
 1301 002a 40F0B280 		bne	.L99
 866:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
 867:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     case RCC_CFGR_SWS_HSI:  /* HSI used as system clock source */
 868:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
 869:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       sysclockfreq = HSI_VALUE;
 1302              		.loc 1 869 0
 1303 002e 5E4B     		ldr	r3, .L100+4
 1304 0030 3B63     		str	r3, [r7, #48]
 870:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****        break;
 1305              		.loc 1 870 0
 1306 0032 B1E0     		b	.L95
 1307              	.L92:
 871:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     }
 872:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     case RCC_CFGR_SWS_HSE:  /* HSE used as system clock  source */
 873:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
 874:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       sysclockfreq = HSE_VALUE;
 1308              		.loc 1 874 0
 1309 0034 5D4B     		ldr	r3, .L100+8
 1310 0036 3B63     		str	r3, [r7, #48]
 875:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       break;
 1311              		.loc 1 875 0
 1312 0038 AEE0     		b	.L95
 1313              	.L93:
 876:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     }
 877:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     case RCC_CFGR_SWS_PLL:  /* PLL used as system clock  source */
 878:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
 879:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLLM) * PLLN
 880:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       SYSCLK = PLL_VCO / PLLP */
 881:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 1314              		.loc 1 881 0
 1315 003a 5A4B     		ldr	r3, .L100
 1316 003c 5B68     		ldr	r3, [r3, #4]
 1317 003e 03F03F03 		and	r3, r3, #63
 1318 0042 FB62     		str	r3, [r7, #44]
 882:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 1319              		.loc 1 882 0
 1320 0044 574B     		ldr	r3, .L100
 1321 0046 5B68     		ldr	r3, [r3, #4]
 1322 0048 03F48003 		and	r3, r3, #4194304
 1323 004c 002B     		cmp	r3, #0
 1324 004e 4ED0     		beq	.L96
 883:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 884:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         /* HSE used as PLL clock source */
 885:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN
 1325              		.loc 1 885 0
ARM GAS  /tmp/cc7zIX7I.s 			page 40


 1326 0050 544B     		ldr	r3, .L100
 1327 0052 5B68     		ldr	r3, [r3, #4]
 1328 0054 9B09     		lsrs	r3, r3, #6
 1329 0056 4FF00004 		mov	r4, #0
 1330 005a 40F2FF11 		movw	r1, #511
 1331 005e 4FF00002 		mov	r2, #0
 1332 0062 01EA0301 		and	r1, r1, r3
 1333 0066 02EA0402 		and	r2, r2, r4
 1334 006a 0B46     		mov	r3, r1
 1335 006c 1446     		mov	r4, r2
 1336 006e 6001     		lsls	r0, r4, #5
 1337 0070 7862     		str	r0, [r7, #36]
 1338 0072 786A     		ldr	r0, [r7, #36]
 1339 0074 40EAD360 		orr	r0, r0, r3, lsr #27
 1340 0078 7862     		str	r0, [r7, #36]
 1341 007a 5B01     		lsls	r3, r3, #5
 1342 007c 3B62     		str	r3, [r7, #32]
 1343 007e D7E90834 		ldrd	r3, [r7, #32]
 1344 0082 5B1A     		subs	r3, r3, r1
 1345 0084 64EB0204 		sbc	r4, r4, r2
 1346 0088 4FEA8419 		lsl	r9, r4, #6
 1347 008c 49EA9369 		orr	r9, r9, r3, lsr #26
 1348 0090 4FEA8318 		lsl	r8, r3, #6
 1349 0094 B8EB0308 		subs	r8, r8, r3
 1350 0098 69EB0409 		sbc	r9, r9, r4
 1351 009c 4FEAC903 		lsl	r3, r9, #3
 1352 00a0 FB61     		str	r3, [r7, #28]
 1353 00a2 FB69     		ldr	r3, [r7, #28]
 1354 00a4 43EA5873 		orr	r3, r3, r8, lsr #29
 1355 00a8 FB61     		str	r3, [r7, #28]
 1356 00aa 4FEAC803 		lsl	r3, r8, #3
 1357 00ae BB61     		str	r3, [r7, #24]
 1358 00b0 D7E90689 		ldrd	r8, [r7, #24]
 1359 00b4 18EB0108 		adds	r8, r8, r1
 1360 00b8 49EB0209 		adc	r9, r9, r2
 1361 00bc 4FEA4923 		lsl	r3, r9, #9
 1362 00c0 7B61     		str	r3, [r7, #20]
 1363 00c2 7B69     		ldr	r3, [r7, #20]
 1364 00c4 43EAD853 		orr	r3, r3, r8, lsr #23
 1365 00c8 7B61     		str	r3, [r7, #20]
 1366 00ca 4FEA4823 		lsl	r3, r8, #9
 1367 00ce 3B61     		str	r3, [r7, #16]
 1368 00d0 D7E90489 		ldrd	r8, [r7, #16]
 1369 00d4 4046     		mov	r0, r8
 1370 00d6 4946     		mov	r1, r9
 1371 00d8 FB6A     		ldr	r3, [r7, #44]
 1372 00da 4FF00004 		mov	r4, #0
 1373 00de 1A46     		mov	r2, r3
 1374 00e0 2346     		mov	r3, r4
 1375 00e2 FFF7FEFF 		bl	__aeabi_uldivmod
 1376              	.LVL0:
 1377 00e6 0346     		mov	r3, r0
 1378 00e8 0C46     		mov	r4, r1
 1379 00ea 7B63     		str	r3, [r7, #52]
 1380 00ec 43E0     		b	.L97
 1381              	.L96:
 886:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       }
ARM GAS  /tmp/cc7zIX7I.s 			page 41


 887:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       else
 888:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 889:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         /* HSI used as PLL clock source */
 890:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         pllvco = (uint32_t) ((((uint64_t) HSI_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN
 1382              		.loc 1 890 0
 1383 00ee 2D4B     		ldr	r3, .L100
 1384 00f0 5B68     		ldr	r3, [r3, #4]
 1385 00f2 9B09     		lsrs	r3, r3, #6
 1386 00f4 4FF00004 		mov	r4, #0
 1387 00f8 40F2FF11 		movw	r1, #511
 1388 00fc 4FF00002 		mov	r2, #0
 1389 0100 01EA0301 		and	r1, r1, r3
 1390 0104 02EA0402 		and	r2, r2, r4
 1391 0108 0B46     		mov	r3, r1
 1392 010a 1446     		mov	r4, r2
 1393 010c 6001     		lsls	r0, r4, #5
 1394 010e F860     		str	r0, [r7, #12]
 1395 0110 F868     		ldr	r0, [r7, #12]
 1396 0112 40EAD360 		orr	r0, r0, r3, lsr #27
 1397 0116 F860     		str	r0, [r7, #12]
 1398 0118 5B01     		lsls	r3, r3, #5
 1399 011a BB60     		str	r3, [r7, #8]
 1400 011c D7E90234 		ldrd	r3, [r7, #8]
 1401 0120 5B1A     		subs	r3, r3, r1
 1402 0122 64EB0204 		sbc	r4, r4, r2
 1403 0126 A601     		lsls	r6, r4, #6
 1404 0128 46EA9366 		orr	r6, r6, r3, lsr #26
 1405 012c 9D01     		lsls	r5, r3, #6
 1406 012e ED1A     		subs	r5, r5, r3
 1407 0130 66EB0406 		sbc	r6, r6, r4
 1408 0134 F300     		lsls	r3, r6, #3
 1409 0136 7B60     		str	r3, [r7, #4]
 1410 0138 7B68     		ldr	r3, [r7, #4]
 1411 013a 43EA5573 		orr	r3, r3, r5, lsr #29
 1412 013e 7B60     		str	r3, [r7, #4]
 1413 0140 EB00     		lsls	r3, r5, #3
 1414 0142 3B60     		str	r3, [r7]
 1415 0144 D7E90056 		ldrd	r5, [r7]
 1416 0148 6D18     		adds	r5, r5, r1
 1417 014a 46EB0206 		adc	r6, r6, r2
 1418 014e 4FEA862B 		lsl	fp, r6, #10
 1419 0152 4BEA955B 		orr	fp, fp, r5, lsr #22
 1420 0156 4FEA852A 		lsl	r10, r5, #10
 1421 015a 5546     		mov	r5, r10
 1422 015c 5E46     		mov	r6, fp
 1423 015e 2846     		mov	r0, r5
 1424 0160 3146     		mov	r1, r6
 1425 0162 FB6A     		ldr	r3, [r7, #44]
 1426 0164 4FF00004 		mov	r4, #0
 1427 0168 1A46     		mov	r2, r3
 1428 016a 2346     		mov	r3, r4
 1429 016c FFF7FEFF 		bl	__aeabi_uldivmod
 1430              	.LVL1:
 1431 0170 0346     		mov	r3, r0
 1432 0172 0C46     		mov	r4, r1
 1433 0174 7B63     		str	r3, [r7, #52]
 1434              	.L97:
ARM GAS  /tmp/cc7zIX7I.s 			page 42


 891:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       }
 892:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       pllp = ((((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >> RCC_PLLCFGR_PLLP_Pos) + 1U) *2U);
 1435              		.loc 1 892 0
 1436 0176 0B4B     		ldr	r3, .L100
 1437 0178 5B68     		ldr	r3, [r3, #4]
 1438 017a 1B0C     		lsrs	r3, r3, #16
 1439 017c 03F00303 		and	r3, r3, #3
 1440 0180 0133     		adds	r3, r3, #1
 1441 0182 5B00     		lsls	r3, r3, #1
 1442 0184 BB62     		str	r3, [r7, #40]
 893:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 894:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       sysclockfreq = pllvco/pllp;
 1443              		.loc 1 894 0
 1444 0186 7A6B     		ldr	r2, [r7, #52]
 1445 0188 BB6A     		ldr	r3, [r7, #40]
 1446 018a B2FBF3F3 		udiv	r3, r2, r3
 1447 018e 3B63     		str	r3, [r7, #48]
 895:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       break;
 1448              		.loc 1 895 0
 1449 0190 02E0     		b	.L95
 1450              	.L99:
 896:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     }
 897:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     default:
 898:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
 899:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       sysclockfreq = HSI_VALUE;
 1451              		.loc 1 899 0
 1452 0192 054B     		ldr	r3, .L100+4
 1453 0194 3B63     		str	r3, [r7, #48]
 900:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       break;
 1454              		.loc 1 900 0
 1455 0196 00BF     		nop
 1456              	.L95:
 901:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     }
 902:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
 903:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   return sysclockfreq;
 1457              		.loc 1 903 0
 1458 0198 3B6B     		ldr	r3, [r7, #48]
 904:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** }
 1459              		.loc 1 904 0
 1460 019a 1846     		mov	r0, r3
 1461 019c 3C37     		adds	r7, r7, #60
 1462              	.LCFI30:
 1463              		.cfi_def_cfa_offset 36
 1464 019e BD46     		mov	sp, r7
 1465              	.LCFI31:
 1466              		.cfi_def_cfa_register 13
 1467              		@ sp needed
 1468 01a0 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 1469              	.L101:
 1470              		.align	2
 1471              	.L100:
 1472 01a4 00380240 		.word	1073887232
 1473 01a8 0024F400 		.word	16000000
 1474 01ac 00127A00 		.word	8000000
 1475              		.cfi_endproc
 1476              	.LFE130:
 1478              		.section	.text.HAL_RCC_GetHCLKFreq,"ax",%progbits
ARM GAS  /tmp/cc7zIX7I.s 			page 43


 1479              		.align	1
 1480              		.global	HAL_RCC_GetHCLKFreq
 1481              		.syntax unified
 1482              		.thumb
 1483              		.thumb_func
 1484              		.fpu fpv4-sp-d16
 1486              	HAL_RCC_GetHCLKFreq:
 1487              	.LFB131:
 905:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 906:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /**
 907:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @brief  Returns the HCLK frequency
 908:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @note   Each time HCLK changes, this function must be called to update the
 909:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         right HCLK value. Otherwise, any configuration based on this function will be incorrect
 910:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *
 911:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @note   The SystemCoreClock CMSIS variable is used to store System Clock Frequency
 912:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         and updated within this function
 913:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @retval HCLK frequency
 914:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   */
 915:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** uint32_t HAL_RCC_GetHCLKFreq(void)
 916:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** {
 1488              		.loc 1 916 0
 1489              		.cfi_startproc
 1490              		@ args = 0, pretend = 0, frame = 0
 1491              		@ frame_needed = 1, uses_anonymous_args = 0
 1492              		@ link register save eliminated.
 1493 0000 80B4     		push	{r7}
 1494              	.LCFI32:
 1495              		.cfi_def_cfa_offset 4
 1496              		.cfi_offset 7, -4
 1497 0002 00AF     		add	r7, sp, #0
 1498              	.LCFI33:
 1499              		.cfi_def_cfa_register 7
 917:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   return SystemCoreClock;
 1500              		.loc 1 917 0
 1501 0004 034B     		ldr	r3, .L104
 1502 0006 1B68     		ldr	r3, [r3]
 918:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** }
 1503              		.loc 1 918 0
 1504 0008 1846     		mov	r0, r3
 1505 000a BD46     		mov	sp, r7
 1506              	.LCFI34:
 1507              		.cfi_def_cfa_register 13
 1508              		@ sp needed
 1509 000c 5DF8047B 		ldr	r7, [sp], #4
 1510              	.LCFI35:
 1511              		.cfi_restore 7
 1512              		.cfi_def_cfa_offset 0
 1513 0010 7047     		bx	lr
 1514              	.L105:
 1515 0012 00BF     		.align	2
 1516              	.L104:
 1517 0014 00000000 		.word	SystemCoreClock
 1518              		.cfi_endproc
 1519              	.LFE131:
 1521              		.section	.text.HAL_RCC_GetPCLK1Freq,"ax",%progbits
 1522              		.align	1
 1523              		.global	HAL_RCC_GetPCLK1Freq
ARM GAS  /tmp/cc7zIX7I.s 			page 44


 1524              		.syntax unified
 1525              		.thumb
 1526              		.thumb_func
 1527              		.fpu fpv4-sp-d16
 1529              	HAL_RCC_GetPCLK1Freq:
 1530              	.LFB132:
 919:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 920:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /**
 921:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @brief  Returns the PCLK1 frequency
 922:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @note   Each time PCLK1 changes, this function must be called to update the
 923:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         right PCLK1 value. Otherwise, any configuration based on this function will be incorrec
 924:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @retval PCLK1 frequency
 925:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   */
 926:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** uint32_t HAL_RCC_GetPCLK1Freq(void)
 927:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** {
 1531              		.loc 1 927 0
 1532              		.cfi_startproc
 1533              		@ args = 0, pretend = 0, frame = 0
 1534              		@ frame_needed = 1, uses_anonymous_args = 0
 1535 0000 80B5     		push	{r7, lr}
 1536              	.LCFI36:
 1537              		.cfi_def_cfa_offset 8
 1538              		.cfi_offset 7, -8
 1539              		.cfi_offset 14, -4
 1540 0002 00AF     		add	r7, sp, #0
 1541              	.LCFI37:
 1542              		.cfi_def_cfa_register 7
 928:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
 929:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1)>> RCC_CFGR_PPRE1_Pos]
 1543              		.loc 1 929 0
 1544 0004 FFF7FEFF 		bl	HAL_RCC_GetHCLKFreq
 1545 0008 0146     		mov	r1, r0
 1546 000a 054B     		ldr	r3, .L108
 1547 000c 9B68     		ldr	r3, [r3, #8]
 1548 000e 9B0A     		lsrs	r3, r3, #10
 1549 0010 03F00703 		and	r3, r3, #7
 1550 0014 034A     		ldr	r2, .L108+4
 1551 0016 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 1552 0018 21FA03F3 		lsr	r3, r1, r3
 930:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** }
 1553              		.loc 1 930 0
 1554 001c 1846     		mov	r0, r3
 1555 001e 80BD     		pop	{r7, pc}
 1556              	.L109:
 1557              		.align	2
 1558              	.L108:
 1559 0020 00380240 		.word	1073887232
 1560 0024 00000000 		.word	APBPrescTable
 1561              		.cfi_endproc
 1562              	.LFE132:
 1564              		.section	.text.HAL_RCC_GetPCLK2Freq,"ax",%progbits
 1565              		.align	1
 1566              		.global	HAL_RCC_GetPCLK2Freq
 1567              		.syntax unified
 1568              		.thumb
 1569              		.thumb_func
 1570              		.fpu fpv4-sp-d16
ARM GAS  /tmp/cc7zIX7I.s 			page 45


 1572              	HAL_RCC_GetPCLK2Freq:
 1573              	.LFB133:
 931:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 932:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /**
 933:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @brief  Returns the PCLK2 frequency
 934:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @note   Each time PCLK2 changes, this function must be called to update the
 935:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         right PCLK2 value. Otherwise, any configuration based on this function will be incorrec
 936:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @retval PCLK2 frequency
 937:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   */
 938:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** uint32_t HAL_RCC_GetPCLK2Freq(void)
 939:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** {
 1574              		.loc 1 939 0
 1575              		.cfi_startproc
 1576              		@ args = 0, pretend = 0, frame = 0
 1577              		@ frame_needed = 1, uses_anonymous_args = 0
 1578 0000 80B5     		push	{r7, lr}
 1579              	.LCFI38:
 1580              		.cfi_def_cfa_offset 8
 1581              		.cfi_offset 7, -8
 1582              		.cfi_offset 14, -4
 1583 0002 00AF     		add	r7, sp, #0
 1584              	.LCFI39:
 1585              		.cfi_def_cfa_register 7
 940:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* Get HCLK source and Compute PCLK2 frequency ---------------------------*/
 941:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   return (HAL_RCC_GetHCLKFreq()>> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE2)>> RCC_CFGR_PPRE2_Pos])
 1586              		.loc 1 941 0
 1587 0004 FFF7FEFF 		bl	HAL_RCC_GetHCLKFreq
 1588 0008 0146     		mov	r1, r0
 1589 000a 054B     		ldr	r3, .L112
 1590 000c 9B68     		ldr	r3, [r3, #8]
 1591 000e 5B0B     		lsrs	r3, r3, #13
 1592 0010 03F00703 		and	r3, r3, #7
 1593 0014 034A     		ldr	r2, .L112+4
 1594 0016 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 1595 0018 21FA03F3 		lsr	r3, r1, r3
 942:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** }
 1596              		.loc 1 942 0
 1597 001c 1846     		mov	r0, r3
 1598 001e 80BD     		pop	{r7, pc}
 1599              	.L113:
 1600              		.align	2
 1601              	.L112:
 1602 0020 00380240 		.word	1073887232
 1603 0024 00000000 		.word	APBPrescTable
 1604              		.cfi_endproc
 1605              	.LFE133:
 1607              		.section	.text.HAL_RCC_GetOscConfig,"ax",%progbits
 1608              		.align	1
 1609              		.weak	HAL_RCC_GetOscConfig
 1610              		.syntax unified
 1611              		.thumb
 1612              		.thumb_func
 1613              		.fpu fpv4-sp-d16
 1615              	HAL_RCC_GetOscConfig:
 1616              	.LFB134:
 943:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 944:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /**
ARM GAS  /tmp/cc7zIX7I.s 			page 46


 945:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @brief  Configures the RCC_OscInitStruct according to the internal
 946:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * RCC configuration registers.
 947:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @param  RCC_OscInitStruct pointer to an RCC_OscInitTypeDef structure that
 948:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * will be configured.
 949:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @retval None
 950:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   */
 951:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** __weak void HAL_RCC_GetOscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
 952:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** {
 1617              		.loc 1 952 0
 1618              		.cfi_startproc
 1619              		@ args = 0, pretend = 0, frame = 8
 1620              		@ frame_needed = 1, uses_anonymous_args = 0
 1621              		@ link register save eliminated.
 1622 0000 80B4     		push	{r7}
 1623              	.LCFI40:
 1624              		.cfi_def_cfa_offset 4
 1625              		.cfi_offset 7, -4
 1626 0002 83B0     		sub	sp, sp, #12
 1627              	.LCFI41:
 1628              		.cfi_def_cfa_offset 16
 1629 0004 00AF     		add	r7, sp, #0
 1630              	.LCFI42:
 1631              		.cfi_def_cfa_register 7
 1632 0006 7860     		str	r0, [r7, #4]
 953:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* Set all possible values for the Oscillator type parameter ---------------*/
 954:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   RCC_OscInitStruct->OscillatorType = RCC_OSCILLATORTYPE_HSE | RCC_OSCILLATORTYPE_HSI | RCC_OSCILLA
 1633              		.loc 1 954 0
 1634 0008 7B68     		ldr	r3, [r7, #4]
 1635 000a 0F22     		movs	r2, #15
 1636 000c 1A60     		str	r2, [r3]
 955:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 956:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* Get the HSE configuration -----------------------------------------------*/
 957:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   if((RCC->CR &RCC_CR_HSEBYP) == RCC_CR_HSEBYP)
 1637              		.loc 1 957 0
 1638 000e 454B     		ldr	r3, .L127
 1639 0010 1B68     		ldr	r3, [r3]
 1640 0012 03F48023 		and	r3, r3, #262144
 1641 0016 B3F5802F 		cmp	r3, #262144
 1642 001a 04D1     		bne	.L115
 958:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
 959:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     RCC_OscInitStruct->HSEState = RCC_HSE_BYPASS;
 1643              		.loc 1 959 0
 1644 001c 7B68     		ldr	r3, [r7, #4]
 1645 001e 4FF4A022 		mov	r2, #327680
 1646 0022 5A60     		str	r2, [r3, #4]
 1647 0024 0EE0     		b	.L116
 1648              	.L115:
 960:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
 961:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   else if((RCC->CR &RCC_CR_HSEON) == RCC_CR_HSEON)
 1649              		.loc 1 961 0
 1650 0026 3F4B     		ldr	r3, .L127
 1651 0028 1B68     		ldr	r3, [r3]
 1652 002a 03F48033 		and	r3, r3, #65536
 1653 002e B3F5803F 		cmp	r3, #65536
 1654 0032 04D1     		bne	.L117
 962:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
 963:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     RCC_OscInitStruct->HSEState = RCC_HSE_ON;
ARM GAS  /tmp/cc7zIX7I.s 			page 47


 1655              		.loc 1 963 0
 1656 0034 7B68     		ldr	r3, [r7, #4]
 1657 0036 4FF48032 		mov	r2, #65536
 1658 003a 5A60     		str	r2, [r3, #4]
 1659 003c 02E0     		b	.L116
 1660              	.L117:
 964:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
 965:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   else
 966:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
 967:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     RCC_OscInitStruct->HSEState = RCC_HSE_OFF;
 1661              		.loc 1 967 0
 1662 003e 7B68     		ldr	r3, [r7, #4]
 1663 0040 0022     		movs	r2, #0
 1664 0042 5A60     		str	r2, [r3, #4]
 1665              	.L116:
 968:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
 969:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 970:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* Get the HSI configuration -----------------------------------------------*/
 971:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   if((RCC->CR &RCC_CR_HSION) == RCC_CR_HSION)
 1666              		.loc 1 971 0
 1667 0044 374B     		ldr	r3, .L127
 1668 0046 1B68     		ldr	r3, [r3]
 1669 0048 03F00103 		and	r3, r3, #1
 1670 004c 012B     		cmp	r3, #1
 1671 004e 03D1     		bne	.L118
 972:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
 973:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     RCC_OscInitStruct->HSIState = RCC_HSI_ON;
 1672              		.loc 1 973 0
 1673 0050 7B68     		ldr	r3, [r7, #4]
 1674 0052 0122     		movs	r2, #1
 1675 0054 DA60     		str	r2, [r3, #12]
 1676 0056 02E0     		b	.L119
 1677              	.L118:
 974:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
 975:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   else
 976:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
 977:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     RCC_OscInitStruct->HSIState = RCC_HSI_OFF;
 1678              		.loc 1 977 0
 1679 0058 7B68     		ldr	r3, [r7, #4]
 1680 005a 0022     		movs	r2, #0
 1681 005c DA60     		str	r2, [r3, #12]
 1682              	.L119:
 978:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
 979:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 980:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   RCC_OscInitStruct->HSICalibrationValue = (uint32_t)((RCC->CR &RCC_CR_HSITRIM) >> RCC_CR_HSITRIM_P
 1683              		.loc 1 980 0
 1684 005e 314B     		ldr	r3, .L127
 1685 0060 1B68     		ldr	r3, [r3]
 1686 0062 DB08     		lsrs	r3, r3, #3
 1687 0064 03F01F02 		and	r2, r3, #31
 1688 0068 7B68     		ldr	r3, [r7, #4]
 1689 006a 1A61     		str	r2, [r3, #16]
 981:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 982:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* Get the LSE configuration -----------------------------------------------*/
 983:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   if((RCC->BDCR &RCC_BDCR_LSEBYP) == RCC_BDCR_LSEBYP)
 1690              		.loc 1 983 0
 1691 006c 2D4B     		ldr	r3, .L127
ARM GAS  /tmp/cc7zIX7I.s 			page 48


 1692 006e 1B6F     		ldr	r3, [r3, #112]
 1693 0070 03F00403 		and	r3, r3, #4
 1694 0074 042B     		cmp	r3, #4
 1695 0076 03D1     		bne	.L120
 984:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
 985:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     RCC_OscInitStruct->LSEState = RCC_LSE_BYPASS;
 1696              		.loc 1 985 0
 1697 0078 7B68     		ldr	r3, [r7, #4]
 1698 007a 0522     		movs	r2, #5
 1699 007c 9A60     		str	r2, [r3, #8]
 1700 007e 0CE0     		b	.L121
 1701              	.L120:
 986:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
 987:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   else if((RCC->BDCR &RCC_BDCR_LSEON) == RCC_BDCR_LSEON)
 1702              		.loc 1 987 0
 1703 0080 284B     		ldr	r3, .L127
 1704 0082 1B6F     		ldr	r3, [r3, #112]
 1705 0084 03F00103 		and	r3, r3, #1
 1706 0088 012B     		cmp	r3, #1
 1707 008a 03D1     		bne	.L122
 988:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
 989:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     RCC_OscInitStruct->LSEState = RCC_LSE_ON;
 1708              		.loc 1 989 0
 1709 008c 7B68     		ldr	r3, [r7, #4]
 1710 008e 0122     		movs	r2, #1
 1711 0090 9A60     		str	r2, [r3, #8]
 1712 0092 02E0     		b	.L121
 1713              	.L122:
 990:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
 991:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   else
 992:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
 993:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     RCC_OscInitStruct->LSEState = RCC_LSE_OFF;
 1714              		.loc 1 993 0
 1715 0094 7B68     		ldr	r3, [r7, #4]
 1716 0096 0022     		movs	r2, #0
 1717 0098 9A60     		str	r2, [r3, #8]
 1718              	.L121:
 994:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
 995:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 996:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* Get the LSI configuration -----------------------------------------------*/
 997:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   if((RCC->CSR &RCC_CSR_LSION) == RCC_CSR_LSION)
 1719              		.loc 1 997 0
 1720 009a 224B     		ldr	r3, .L127
 1721 009c 5B6F     		ldr	r3, [r3, #116]
 1722 009e 03F00103 		and	r3, r3, #1
 1723 00a2 012B     		cmp	r3, #1
 1724 00a4 03D1     		bne	.L123
 998:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
 999:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     RCC_OscInitStruct->LSIState = RCC_LSI_ON;
 1725              		.loc 1 999 0
 1726 00a6 7B68     		ldr	r3, [r7, #4]
 1727 00a8 0122     		movs	r2, #1
 1728 00aa 5A61     		str	r2, [r3, #20]
 1729 00ac 02E0     		b	.L124
 1730              	.L123:
1000:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
1001:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   else
ARM GAS  /tmp/cc7zIX7I.s 			page 49


1002:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
1003:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     RCC_OscInitStruct->LSIState = RCC_LSI_OFF;
 1731              		.loc 1 1003 0
 1732 00ae 7B68     		ldr	r3, [r7, #4]
 1733 00b0 0022     		movs	r2, #0
 1734 00b2 5A61     		str	r2, [r3, #20]
 1735              	.L124:
1004:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
1005:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
1006:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* Get the PLL configuration -----------------------------------------------*/
1007:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   if((RCC->CR &RCC_CR_PLLON) == RCC_CR_PLLON)
 1736              		.loc 1 1007 0
 1737 00b4 1B4B     		ldr	r3, .L127
 1738 00b6 1B68     		ldr	r3, [r3]
 1739 00b8 03F08073 		and	r3, r3, #16777216
 1740 00bc B3F1807F 		cmp	r3, #16777216
 1741 00c0 03D1     		bne	.L125
1008:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
1009:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     RCC_OscInitStruct->PLL.PLLState = RCC_PLL_ON;
 1742              		.loc 1 1009 0
 1743 00c2 7B68     		ldr	r3, [r7, #4]
 1744 00c4 0222     		movs	r2, #2
 1745 00c6 9A61     		str	r2, [r3, #24]
 1746 00c8 02E0     		b	.L126
 1747              	.L125:
1010:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
1011:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   else
1012:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
1013:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     RCC_OscInitStruct->PLL.PLLState = RCC_PLL_OFF;
 1748              		.loc 1 1013 0
 1749 00ca 7B68     		ldr	r3, [r7, #4]
 1750 00cc 0122     		movs	r2, #1
 1751 00ce 9A61     		str	r2, [r3, #24]
 1752              	.L126:
1014:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
1015:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   RCC_OscInitStruct->PLL.PLLSource = (uint32_t)(RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC);
 1753              		.loc 1 1015 0
 1754 00d0 144B     		ldr	r3, .L127
 1755 00d2 5B68     		ldr	r3, [r3, #4]
 1756 00d4 03F48002 		and	r2, r3, #4194304
 1757 00d8 7B68     		ldr	r3, [r7, #4]
 1758 00da DA61     		str	r2, [r3, #28]
1016:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   RCC_OscInitStruct->PLL.PLLM = (uint32_t)(RCC->PLLCFGR & RCC_PLLCFGR_PLLM);
 1759              		.loc 1 1016 0
 1760 00dc 114B     		ldr	r3, .L127
 1761 00de 5B68     		ldr	r3, [r3, #4]
 1762 00e0 03F03F02 		and	r2, r3, #63
 1763 00e4 7B68     		ldr	r3, [r7, #4]
 1764 00e6 1A62     		str	r2, [r3, #32]
1017:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   RCC_OscInitStruct->PLL.PLLN = (uint32_t)((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Po
 1765              		.loc 1 1017 0
 1766 00e8 0E4B     		ldr	r3, .L127
 1767 00ea 5B68     		ldr	r3, [r3, #4]
 1768 00ec 9B09     		lsrs	r3, r3, #6
 1769 00ee C3F30802 		ubfx	r2, r3, #0, #9
 1770 00f2 7B68     		ldr	r3, [r7, #4]
 1771 00f4 5A62     		str	r2, [r3, #36]
ARM GAS  /tmp/cc7zIX7I.s 			page 50


1018:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   RCC_OscInitStruct->PLL.PLLP = (uint32_t)((((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) + RCC_PLLCFGR_PLLP_0
 1772              		.loc 1 1018 0
 1773 00f6 0B4B     		ldr	r3, .L127
 1774 00f8 5B68     		ldr	r3, [r3, #4]
 1775 00fa 03F44033 		and	r3, r3, #196608
 1776 00fe 03F58033 		add	r3, r3, #65536
 1777 0102 5B00     		lsls	r3, r3, #1
 1778 0104 1A0C     		lsrs	r2, r3, #16
 1779 0106 7B68     		ldr	r3, [r7, #4]
 1780 0108 9A62     		str	r2, [r3, #40]
1019:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   RCC_OscInitStruct->PLL.PLLQ = (uint32_t)((RCC->PLLCFGR & RCC_PLLCFGR_PLLQ) >> RCC_PLLCFGR_PLLQ_Po
 1781              		.loc 1 1019 0
 1782 010a 064B     		ldr	r3, .L127
 1783 010c 5B68     		ldr	r3, [r3, #4]
 1784 010e 1B0E     		lsrs	r3, r3, #24
 1785 0110 03F00F02 		and	r2, r3, #15
 1786 0114 7B68     		ldr	r3, [r7, #4]
 1787 0116 DA62     		str	r2, [r3, #44]
1020:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** }
 1788              		.loc 1 1020 0
 1789 0118 00BF     		nop
 1790 011a 0C37     		adds	r7, r7, #12
 1791              	.LCFI43:
 1792              		.cfi_def_cfa_offset 4
 1793 011c BD46     		mov	sp, r7
 1794              	.LCFI44:
 1795              		.cfi_def_cfa_register 13
 1796              		@ sp needed
 1797 011e 5DF8047B 		ldr	r7, [sp], #4
 1798              	.LCFI45:
 1799              		.cfi_restore 7
 1800              		.cfi_def_cfa_offset 0
 1801 0122 7047     		bx	lr
 1802              	.L128:
 1803              		.align	2
 1804              	.L127:
 1805 0124 00380240 		.word	1073887232
 1806              		.cfi_endproc
 1807              	.LFE134:
 1809              		.section	.text.HAL_RCC_GetClockConfig,"ax",%progbits
 1810              		.align	1
 1811              		.global	HAL_RCC_GetClockConfig
 1812              		.syntax unified
 1813              		.thumb
 1814              		.thumb_func
 1815              		.fpu fpv4-sp-d16
 1817              	HAL_RCC_GetClockConfig:
 1818              	.LFB135:
1021:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
1022:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /**
1023:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @brief  Configures the RCC_ClkInitStruct according to the internal
1024:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * RCC configuration registers.
1025:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @param  RCC_ClkInitStruct pointer to an RCC_ClkInitTypeDef structure that
1026:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * will be configured.
1027:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @param  pFLatency Pointer on the Flash Latency.
1028:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @retval None
1029:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   */
ARM GAS  /tmp/cc7zIX7I.s 			page 51


1030:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** void HAL_RCC_GetClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t *pFLatency)
1031:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** {
 1819              		.loc 1 1031 0
 1820              		.cfi_startproc
 1821              		@ args = 0, pretend = 0, frame = 8
 1822              		@ frame_needed = 1, uses_anonymous_args = 0
 1823              		@ link register save eliminated.
 1824 0000 80B4     		push	{r7}
 1825              	.LCFI46:
 1826              		.cfi_def_cfa_offset 4
 1827              		.cfi_offset 7, -4
 1828 0002 83B0     		sub	sp, sp, #12
 1829              	.LCFI47:
 1830              		.cfi_def_cfa_offset 16
 1831 0004 00AF     		add	r7, sp, #0
 1832              	.LCFI48:
 1833              		.cfi_def_cfa_register 7
 1834 0006 7860     		str	r0, [r7, #4]
 1835 0008 3960     		str	r1, [r7]
1032:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* Set all possible values for the Clock type parameter --------------------*/
1033:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_PCLK1 | 
 1836              		.loc 1 1033 0
 1837 000a 7B68     		ldr	r3, [r7, #4]
 1838 000c 0F22     		movs	r2, #15
 1839 000e 1A60     		str	r2, [r3]
1034:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
1035:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* Get the SYSCLK configuration --------------------------------------------*/
1036:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
 1840              		.loc 1 1036 0
 1841 0010 124B     		ldr	r3, .L130
 1842 0012 9B68     		ldr	r3, [r3, #8]
 1843 0014 03F00302 		and	r2, r3, #3
 1844 0018 7B68     		ldr	r3, [r7, #4]
 1845 001a 5A60     		str	r2, [r3, #4]
1037:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
1038:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* Get the HCLK configuration ----------------------------------------------*/
1039:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   RCC_ClkInitStruct->AHBCLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_HPRE);
 1846              		.loc 1 1039 0
 1847 001c 0F4B     		ldr	r3, .L130
 1848 001e 9B68     		ldr	r3, [r3, #8]
 1849 0020 03F0F002 		and	r2, r3, #240
 1850 0024 7B68     		ldr	r3, [r7, #4]
 1851 0026 9A60     		str	r2, [r3, #8]
1040:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
1041:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* Get the APB1 configuration ----------------------------------------------*/
1042:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   RCC_ClkInitStruct->APB1CLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_PPRE1);
 1852              		.loc 1 1042 0
 1853 0028 0C4B     		ldr	r3, .L130
 1854 002a 9B68     		ldr	r3, [r3, #8]
 1855 002c 03F4E052 		and	r2, r3, #7168
 1856 0030 7B68     		ldr	r3, [r7, #4]
 1857 0032 DA60     		str	r2, [r3, #12]
1043:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
1044:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* Get the APB2 configuration ----------------------------------------------*/
1045:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)((RCC->CFGR & RCC_CFGR_PPRE2) >> 3U);
 1858              		.loc 1 1045 0
 1859 0034 094B     		ldr	r3, .L130
ARM GAS  /tmp/cc7zIX7I.s 			page 52


 1860 0036 9B68     		ldr	r3, [r3, #8]
 1861 0038 DB08     		lsrs	r3, r3, #3
 1862 003a 03F4E052 		and	r2, r3, #7168
 1863 003e 7B68     		ldr	r3, [r7, #4]
 1864 0040 1A61     		str	r2, [r3, #16]
1046:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
1047:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* Get the Flash Wait State (Latency) configuration ------------------------*/
1048:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
 1865              		.loc 1 1048 0
 1866 0042 074B     		ldr	r3, .L130+4
 1867 0044 1B68     		ldr	r3, [r3]
 1868 0046 03F00F02 		and	r2, r3, #15
 1869 004a 3B68     		ldr	r3, [r7]
 1870 004c 1A60     		str	r2, [r3]
1049:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** }
 1871              		.loc 1 1049 0
 1872 004e 00BF     		nop
 1873 0050 0C37     		adds	r7, r7, #12
 1874              	.LCFI49:
 1875              		.cfi_def_cfa_offset 4
 1876 0052 BD46     		mov	sp, r7
 1877              	.LCFI50:
 1878              		.cfi_def_cfa_register 13
 1879              		@ sp needed
 1880 0054 5DF8047B 		ldr	r7, [sp], #4
 1881              	.LCFI51:
 1882              		.cfi_restore 7
 1883              		.cfi_def_cfa_offset 0
 1884 0058 7047     		bx	lr
 1885              	.L131:
 1886 005a 00BF     		.align	2
 1887              	.L130:
 1888 005c 00380240 		.word	1073887232
 1889 0060 003C0240 		.word	1073888256
 1890              		.cfi_endproc
 1891              	.LFE135:
 1893              		.section	.text.HAL_RCC_NMI_IRQHandler,"ax",%progbits
 1894              		.align	1
 1895              		.global	HAL_RCC_NMI_IRQHandler
 1896              		.syntax unified
 1897              		.thumb
 1898              		.thumb_func
 1899              		.fpu fpv4-sp-d16
 1901              	HAL_RCC_NMI_IRQHandler:
 1902              	.LFB136:
1050:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
1051:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /**
1052:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @brief This function handles the RCC CSS interrupt request.
1053:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @note This API should be called under the NMI_Handler().
1054:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @retval None
1055:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   */
1056:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** void HAL_RCC_NMI_IRQHandler(void)
1057:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** {
 1903              		.loc 1 1057 0
 1904              		.cfi_startproc
 1905              		@ args = 0, pretend = 0, frame = 0
 1906              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  /tmp/cc7zIX7I.s 			page 53


 1907 0000 80B5     		push	{r7, lr}
 1908              	.LCFI52:
 1909              		.cfi_def_cfa_offset 8
 1910              		.cfi_offset 7, -8
 1911              		.cfi_offset 14, -4
 1912 0002 00AF     		add	r7, sp, #0
 1913              	.LCFI53:
 1914              		.cfi_def_cfa_register 7
1058:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* Check RCC CSSF flag  */
1059:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   if(__HAL_RCC_GET_IT(RCC_IT_CSS))
 1915              		.loc 1 1059 0
 1916 0004 064B     		ldr	r3, .L135
 1917 0006 DB68     		ldr	r3, [r3, #12]
 1918 0008 03F08003 		and	r3, r3, #128
 1919 000c 802B     		cmp	r3, #128
 1920 000e 04D1     		bne	.L134
1060:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
1061:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* RCC Clock Security System interrupt user callback */
1062:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     HAL_RCC_CSSCallback();
 1921              		.loc 1 1062 0
 1922 0010 FFF7FEFF 		bl	HAL_RCC_CSSCallback
1063:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
1064:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* Clear RCC CSS pending bit */
1065:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     __HAL_RCC_CLEAR_IT(RCC_IT_CSS);
 1923              		.loc 1 1065 0
 1924 0014 034B     		ldr	r3, .L135+4
 1925 0016 8022     		movs	r2, #128
 1926 0018 1A70     		strb	r2, [r3]
 1927              	.L134:
1066:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
1067:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** }
 1928              		.loc 1 1067 0
 1929 001a 00BF     		nop
 1930 001c 80BD     		pop	{r7, pc}
 1931              	.L136:
 1932 001e 00BF     		.align	2
 1933              	.L135:
 1934 0020 00380240 		.word	1073887232
 1935 0024 0E380240 		.word	1073887246
 1936              		.cfi_endproc
 1937              	.LFE136:
 1939              		.section	.text.HAL_RCC_CSSCallback,"ax",%progbits
 1940              		.align	1
 1941              		.weak	HAL_RCC_CSSCallback
 1942              		.syntax unified
 1943              		.thumb
 1944              		.thumb_func
 1945              		.fpu fpv4-sp-d16
 1947              	HAL_RCC_CSSCallback:
 1948              	.LFB137:
1068:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
1069:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /**
1070:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @brief  RCC Clock Security System interrupt callback
1071:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @retval None
1072:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   */
1073:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** __weak void HAL_RCC_CSSCallback(void)
1074:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** {
ARM GAS  /tmp/cc7zIX7I.s 			page 54


 1949              		.loc 1 1074 0
 1950              		.cfi_startproc
 1951              		@ args = 0, pretend = 0, frame = 0
 1952              		@ frame_needed = 1, uses_anonymous_args = 0
 1953              		@ link register save eliminated.
 1954 0000 80B4     		push	{r7}
 1955              	.LCFI54:
 1956              		.cfi_def_cfa_offset 4
 1957              		.cfi_offset 7, -4
 1958 0002 00AF     		add	r7, sp, #0
 1959              	.LCFI55:
 1960              		.cfi_def_cfa_register 7
1075:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
1076:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****             the HAL_RCC_CSSCallback could be implemented in the user file
1077:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****    */
1078:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** }
 1961              		.loc 1 1078 0
 1962 0004 00BF     		nop
 1963 0006 BD46     		mov	sp, r7
 1964              	.LCFI56:
 1965              		.cfi_def_cfa_register 13
 1966              		@ sp needed
 1967 0008 5DF8047B 		ldr	r7, [sp], #4
 1968              	.LCFI57:
 1969              		.cfi_restore 7
 1970              		.cfi_def_cfa_offset 0
 1971 000c 7047     		bx	lr
 1972              		.cfi_endproc
 1973              	.LFE137:
 1975              		.text
 1976              	.Letext0:
 1977              		.file 2 "/opt/gcc4mbed/gcc-arm-none-eabi/arm-none-eabi/include/machine/_default_types.h"
 1978              		.file 3 "/opt/gcc4mbed/gcc-arm-none-eabi/arm-none-eabi/include/sys/_stdint.h"
 1979              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 1980              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 1981              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f411xe.h"
 1982              		.file 7 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f4xx.h"
 1983              		.file 8 "/opt/gcc4mbed/gcc-arm-none-eabi/arm-none-eabi/include/sys/lock.h"
 1984              		.file 9 "/opt/gcc4mbed/gcc-arm-none-eabi/arm-none-eabi/include/sys/_types.h"
 1985              		.file 10 "/opt/gcc4mbed/gcc-arm-none-eabi/lib/gcc/arm-none-eabi/6.3.1/include/stddef.h"
 1986              		.file 11 "/opt/gcc4mbed/gcc-arm-none-eabi/arm-none-eabi/include/sys/reent.h"
 1987              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 1988              		.file 13 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 1989              		.file 14 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 1990              		.file 15 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
ARM GAS  /tmp/cc7zIX7I.s 			page 55


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f4xx_hal_rcc.c
     /tmp/cc7zIX7I.s:18     .text.HAL_RCC_DeInit:0000000000000000 $t
     /tmp/cc7zIX7I.s:25     .text.HAL_RCC_DeInit:0000000000000000 HAL_RCC_DeInit
     /tmp/cc7zIX7I.s:57     .text.HAL_RCC_OscConfig:0000000000000000 $t
     /tmp/cc7zIX7I.s:64     .text.HAL_RCC_OscConfig:0000000000000000 HAL_RCC_OscConfig
     /tmp/cc7zIX7I.s:472    .text.HAL_RCC_OscConfig:000000000000029c $d
     /tmp/cc7zIX7I.s:478    .text.HAL_RCC_OscConfig:00000000000002ac $t
     /tmp/cc7zIX7I.s:725    .text.HAL_RCC_OscConfig:0000000000000444 $d
     /tmp/cc7zIX7I.s:732    .text.HAL_RCC_ClockConfig:0000000000000000 $t
     /tmp/cc7zIX7I.s:739    .text.HAL_RCC_ClockConfig:0000000000000000 HAL_RCC_ClockConfig
     /tmp/cc7zIX7I.s:1258   .text.HAL_RCC_GetSysClockFreq:0000000000000000 HAL_RCC_GetSysClockFreq
     /tmp/cc7zIX7I.s:1008   .text.HAL_RCC_ClockConfig:00000000000001b4 $d
     /tmp/cc7zIX7I.s:1016   .text.HAL_RCC_MCOConfig:0000000000000000 $t
     /tmp/cc7zIX7I.s:1023   .text.HAL_RCC_MCOConfig:0000000000000000 HAL_RCC_MCOConfig
     /tmp/cc7zIX7I.s:1155   .text.HAL_RCC_MCOConfig:00000000000000c4 $d
     /tmp/cc7zIX7I.s:1162   .text.HAL_RCC_EnableCSS:0000000000000000 $t
     /tmp/cc7zIX7I.s:1169   .text.HAL_RCC_EnableCSS:0000000000000000 HAL_RCC_EnableCSS
     /tmp/cc7zIX7I.s:1201   .text.HAL_RCC_EnableCSS:0000000000000014 $d
     /tmp/cc7zIX7I.s:1206   .text.HAL_RCC_DisableCSS:0000000000000000 $t
     /tmp/cc7zIX7I.s:1213   .text.HAL_RCC_DisableCSS:0000000000000000 HAL_RCC_DisableCSS
     /tmp/cc7zIX7I.s:1245   .text.HAL_RCC_DisableCSS:0000000000000014 $d
     /tmp/cc7zIX7I.s:1251   .text.HAL_RCC_GetSysClockFreq:0000000000000000 $t
     /tmp/cc7zIX7I.s:1472   .text.HAL_RCC_GetSysClockFreq:00000000000001a4 $d
     /tmp/cc7zIX7I.s:1479   .text.HAL_RCC_GetHCLKFreq:0000000000000000 $t
     /tmp/cc7zIX7I.s:1486   .text.HAL_RCC_GetHCLKFreq:0000000000000000 HAL_RCC_GetHCLKFreq
     /tmp/cc7zIX7I.s:1517   .text.HAL_RCC_GetHCLKFreq:0000000000000014 $d
     /tmp/cc7zIX7I.s:1522   .text.HAL_RCC_GetPCLK1Freq:0000000000000000 $t
     /tmp/cc7zIX7I.s:1529   .text.HAL_RCC_GetPCLK1Freq:0000000000000000 HAL_RCC_GetPCLK1Freq
     /tmp/cc7zIX7I.s:1559   .text.HAL_RCC_GetPCLK1Freq:0000000000000020 $d
     /tmp/cc7zIX7I.s:1565   .text.HAL_RCC_GetPCLK2Freq:0000000000000000 $t
     /tmp/cc7zIX7I.s:1572   .text.HAL_RCC_GetPCLK2Freq:0000000000000000 HAL_RCC_GetPCLK2Freq
     /tmp/cc7zIX7I.s:1602   .text.HAL_RCC_GetPCLK2Freq:0000000000000020 $d
     /tmp/cc7zIX7I.s:1608   .text.HAL_RCC_GetOscConfig:0000000000000000 $t
     /tmp/cc7zIX7I.s:1615   .text.HAL_RCC_GetOscConfig:0000000000000000 HAL_RCC_GetOscConfig
     /tmp/cc7zIX7I.s:1805   .text.HAL_RCC_GetOscConfig:0000000000000124 $d
     /tmp/cc7zIX7I.s:1810   .text.HAL_RCC_GetClockConfig:0000000000000000 $t
     /tmp/cc7zIX7I.s:1817   .text.HAL_RCC_GetClockConfig:0000000000000000 HAL_RCC_GetClockConfig
     /tmp/cc7zIX7I.s:1888   .text.HAL_RCC_GetClockConfig:000000000000005c $d
     /tmp/cc7zIX7I.s:1894   .text.HAL_RCC_NMI_IRQHandler:0000000000000000 $t
     /tmp/cc7zIX7I.s:1901   .text.HAL_RCC_NMI_IRQHandler:0000000000000000 HAL_RCC_NMI_IRQHandler
     /tmp/cc7zIX7I.s:1947   .text.HAL_RCC_CSSCallback:0000000000000000 HAL_RCC_CSSCallback
     /tmp/cc7zIX7I.s:1934   .text.HAL_RCC_NMI_IRQHandler:0000000000000020 $d
     /tmp/cc7zIX7I.s:1940   .text.HAL_RCC_CSSCallback:0000000000000000 $t
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
HAL_GetTick
HAL_InitTick
AHBPrescTable
SystemCoreClock
HAL_GPIO_Init
__aeabi_uldivmod
APBPrescTable
