ARM GAS  /tmp/ccUjksEu.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32f4xx_hal_dma.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.HAL_DMA_Init,"ax",%progbits
  18              		.align	1
  19              		.global	HAL_DMA_Init
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	HAL_DMA_Init:
  26              	.LFB124:
  27              		.file 1 "Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c"
   1:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** /**
   2:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   ******************************************************************************
   3:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @file    stm32f4xx_hal_dma.c
   4:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @author  MCD Application Team
   5:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @brief   DMA HAL module driver.
   6:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   *    
   7:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   *          This file provides firmware functions to manage the following 
   8:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   *          functionalities of the Direct Memory Access (DMA) peripheral:
   9:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   *           + Initialization and de-initialization functions
  10:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   *           + IO operation functions
  11:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   *           + Peripheral State and errors functions
  12:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   @verbatim     
  13:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   ==============================================================================
  14:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****                         ##### How to use this driver #####
  15:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   ==============================================================================
  16:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   [..]
  17:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****    (#) Enable and configure the peripheral to be connected to the DMA Stream
  18:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****        (except for internal SRAM/FLASH memories: no initialization is 
  19:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****        necessary) please refer to Reference manual for connection between peripherals
  20:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****        and DMA requests.
  21:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
  22:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****    (#) For a given Stream, program the required configuration through the following parameters:
  23:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****        Transfer Direction, Source and Destination data formats, 
  24:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****        Circular, Normal or peripheral flow control mode, Stream Priority level, 
  25:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****        Source and Destination Increment mode, FIFO mode and its Threshold (if needed), 
  26:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****        Burst mode for Source and/or Destination (if needed) using HAL_DMA_Init() function.
  27:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
  28:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****    -@-   Prior to HAL_DMA_Init() the clock must be enabled for DMA through the following macros:
  29:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****          __HAL_RCC_DMA1_CLK_ENABLE() or __HAL_RCC_DMA2_CLK_ENABLE().
  30:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
  31:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****      *** Polling mode IO operation ***
ARM GAS  /tmp/ccUjksEu.s 			page 2


  32:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****      =================================
  33:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     [..]
  34:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****           (+) Use HAL_DMA_Start() to start DMA transfer after the configuration of Source 
  35:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****               address and destination address and the Length of data to be transferred.
  36:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****           (+) Use HAL_DMA_PollForTransfer() to poll for the end of current transfer, in this  
  37:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****               case a fixed Timeout can be configured by User depending from his application.
  38:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****           (+) Use HAL_DMA_Abort() function to abort the current transfer.
  39:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
  40:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****      *** Interrupt mode IO operation ***
  41:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****      ===================================
  42:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     [..]
  43:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****           (+) Configure the DMA interrupt priority using HAL_NVIC_SetPriority()
  44:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****           (+) Enable the DMA IRQ handler using HAL_NVIC_EnableIRQ() 
  45:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****           (+) Use HAL_DMA_Start_IT() to start DMA transfer after the configuration of  
  46:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****               Source address and destination address and the Length of data to be transferred. In t
  47:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****               case the DMA interrupt is configured 
  48:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****           (+) Use HAL_DMA_IRQHandler() called under DMA_IRQHandler() Interrupt subroutine
  49:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****           (+) At the end of data transfer HAL_DMA_IRQHandler() function is executed and user can 
  50:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****               add his own function by customization of function pointer XferCpltCallback and 
  51:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****               XferErrorCallback (i.e a member of DMA handle structure).
  52:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     [..]
  53:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****      (#) Use HAL_DMA_GetState() function to return the DMA state and HAL_DMA_GetError() in case of 
  54:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****          detection.
  55:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
  56:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****      (#) Use HAL_DMA_Abort_IT() function to abort the current transfer
  57:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
  58:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****      -@-   In Memory-to-Memory transfer mode, Circular mode is not allowed.
  59:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
  60:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****      -@-   The FIFO is used mainly to reduce bus usage and to allow data packing/unpacking: it is
  61:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****            possible to set different Data Sizes for the Peripheral and the Memory (ie. you can set
  62:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****            Half-Word data size for the peripheral to access its data register and set Word data siz
  63:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****            for the Memory to gain in access time. Each two half words will be packed and written in
  64:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****            a single access to a Word in the Memory).
  65:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
  66:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****      -@-   When FIFO is disabled, it is not allowed to configure different Data Sizes for Source
  67:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****            and Destination. In this case the Peripheral Data Size will be applied to both Source
  68:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****            and Destination.
  69:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
  70:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****      *** DMA HAL driver macros list ***
  71:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****      =============================================
  72:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****      [..]
  73:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****        Below the list of most used macros in DMA HAL driver.
  74:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****        
  75:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       (+) __HAL_DMA_ENABLE: Enable the specified DMA Stream.
  76:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       (+) __HAL_DMA_DISABLE: Disable the specified DMA Stream.
  77:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       (+) __HAL_DMA_GET_IT_SOURCE: Check whether the specified DMA Stream interrupt has occurred or
  78:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
  79:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****      [..]
  80:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       (@) You can refer to the DMA HAL driver header file for more useful macros
  81:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
  82:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   @endverbatim
  83:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   ******************************************************************************
  84:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @attention
  85:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   *
  86:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * <h2><center>&copy; COPYRIGHT(c) 2017 STMicroelectronics</center></h2>
  87:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   *
  88:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * Redistribution and use in source and binary forms, with or without modification,
ARM GAS  /tmp/ccUjksEu.s 			page 3


  89:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * are permitted provided that the following conditions are met:
  90:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   *   1. Redistributions of source code must retain the above copyright notice,
  91:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   *      this list of conditions and the following disclaimer.
  92:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  93:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   *      this list of conditions and the following disclaimer in the documentation
  94:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   *      and/or other materials provided with the distribution.
  95:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  96:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   *      may be used to endorse or promote products derived from this software
  97:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   *      without specific prior written permission.
  98:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   *
  99:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 100:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 101:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 102:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
 103:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 104:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 105:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
 106:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
 107:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 108:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 109:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   *
 110:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   ******************************************************************************
 111:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   */ 
 112:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 113:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** /* Includes ------------------------------------------------------------------*/
 114:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** #include "stm32f4xx_hal.h"
 115:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 116:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** /** @addtogroup STM32F4xx_HAL_Driver
 117:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @{
 118:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   */
 119:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 120:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** /** @defgroup DMA DMA
 121:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @brief DMA HAL module driver
 122:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @{
 123:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   */
 124:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 125:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** #ifdef HAL_DMA_MODULE_ENABLED
 126:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 127:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** /* Private types -------------------------------------------------------------*/
 128:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** typedef struct
 129:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** {
 130:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   __IO uint32_t ISR;   /*!< DMA interrupt status register */
 131:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   __IO uint32_t Reserved0;
 132:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   __IO uint32_t IFCR;  /*!< DMA interrupt flag clear register */
 133:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** } DMA_Base_Registers;
 134:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 135:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** /* Private variables ---------------------------------------------------------*/
 136:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** /* Private constants ---------------------------------------------------------*/
 137:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** /** @addtogroup DMA_Private_Constants
 138:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****  * @{
 139:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****  */
 140:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****  #define HAL_TIMEOUT_DMA_ABORT    5U  /* 5 ms */
 141:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** /**
 142:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @}
 143:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   */
 144:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** /* Private macros ------------------------------------------------------------*/
 145:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** /* Private functions ---------------------------------------------------------*/
ARM GAS  /tmp/ccUjksEu.s 			page 4


 146:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** /** @addtogroup DMA_Private_Functions
 147:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @{
 148:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   */
 149:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** static void DMA_SetConfig(DMA_HandleTypeDef *hdma, uint32_t SrcAddress, uint32_t DstAddress, uint32
 150:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** static uint32_t DMA_CalcBaseAndBitshift(DMA_HandleTypeDef *hdma);
 151:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** static HAL_StatusTypeDef DMA_CheckFifoParam(DMA_HandleTypeDef *hdma);
 152:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 153:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** /**
 154:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @}
 155:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   */  
 156:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 157:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** /* Exported functions ---------------------------------------------------------*/
 158:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** /** @addtogroup DMA_Exported_Functions
 159:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @{
 160:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   */
 161:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 162:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** /** @addtogroup DMA_Exported_Functions_Group1
 163:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   *
 164:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** @verbatim
 165:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****  ===============================================================================
 166:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****              ##### Initialization and de-initialization functions  #####
 167:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****  ===============================================================================
 168:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     [..]
 169:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     This section provides functions allowing to initialize the DMA Stream source
 170:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     and destination addresses, incrementation and data sizes, transfer direction, 
 171:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     circular/normal mode selection, memory-to-memory mode selection and Stream priority value.
 172:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     [..]
 173:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     The HAL_DMA_Init() function follows the DMA configuration procedures as described in
 174:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     reference manual.
 175:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 176:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** @endverbatim
 177:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @{
 178:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   */
 179:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   
 180:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** /**
 181:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @brief  Initialize the DMA according to the specified
 182:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   *         parameters in the DMA_InitTypeDef and create the associated handle.
 183:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @param  hdma Pointer to a DMA_HandleTypeDef structure that contains
 184:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   *               the configuration information for the specified DMA Stream.  
 185:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @retval HAL status
 186:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   */
 187:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** HAL_StatusTypeDef HAL_DMA_Init(DMA_HandleTypeDef *hdma)
 188:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** {
  28              		.loc 1 188 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 24
  31              		@ frame_needed = 1, uses_anonymous_args = 0
  32 0000 80B5     		push	{r7, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 8
  35              		.cfi_offset 7, -8
  36              		.cfi_offset 14, -4
  37 0002 86B0     		sub	sp, sp, #24
  38              	.LCFI1:
  39              		.cfi_def_cfa_offset 32
  40 0004 00AF     		add	r7, sp, #0
  41              	.LCFI2:
ARM GAS  /tmp/ccUjksEu.s 			page 5


  42              		.cfi_def_cfa_register 7
  43 0006 7860     		str	r0, [r7, #4]
 189:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   uint32_t tmp = 0U;
  44              		.loc 1 189 0
  45 0008 0023     		movs	r3, #0
  46 000a 7B61     		str	r3, [r7, #20]
 190:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   uint32_t tickstart = HAL_GetTick();
  47              		.loc 1 190 0
  48 000c FFF7FEFF 		bl	HAL_GetTick
  49 0010 3861     		str	r0, [r7, #16]
 191:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   DMA_Base_Registers *regs;
 192:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 193:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   /* Check the DMA peripheral state */
 194:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   if(hdma == NULL)
  50              		.loc 1 194 0
  51 0012 7B68     		ldr	r3, [r7, #4]
  52 0014 002B     		cmp	r3, #0
  53 0016 01D1     		bne	.L2
 195:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   {
 196:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     return HAL_ERROR;
  54              		.loc 1 196 0
  55 0018 0123     		movs	r3, #1
  56 001a 99E0     		b	.L3
  57              	.L2:
 197:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   }
 198:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 199:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   /* Check the parameters */
 200:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   assert_param(IS_DMA_STREAM_ALL_INSTANCE(hdma->Instance));
 201:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   assert_param(IS_DMA_CHANNEL(hdma->Init.Channel));
 202:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   assert_param(IS_DMA_DIRECTION(hdma->Init.Direction));
 203:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   assert_param(IS_DMA_PERIPHERAL_INC_STATE(hdma->Init.PeriphInc));
 204:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   assert_param(IS_DMA_MEMORY_INC_STATE(hdma->Init.MemInc));
 205:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   assert_param(IS_DMA_PERIPHERAL_DATA_SIZE(hdma->Init.PeriphDataAlignment));
 206:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   assert_param(IS_DMA_MEMORY_DATA_SIZE(hdma->Init.MemDataAlignment));
 207:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   assert_param(IS_DMA_MODE(hdma->Init.Mode));
 208:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   assert_param(IS_DMA_PRIORITY(hdma->Init.Priority));
 209:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   assert_param(IS_DMA_FIFO_MODE_STATE(hdma->Init.FIFOMode));
 210:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   /* Check the memory burst, peripheral burst and FIFO threshold parameters only
 211:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****      when FIFO mode is enabled */
 212:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   if(hdma->Init.FIFOMode != DMA_FIFOMODE_DISABLE)
 213:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   {
 214:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     assert_param(IS_DMA_FIFO_THRESHOLD(hdma->Init.FIFOThreshold));
 215:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     assert_param(IS_DMA_MEMORY_BURST(hdma->Init.MemBurst));
 216:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     assert_param(IS_DMA_PERIPHERAL_BURST(hdma->Init.PeriphBurst));
 217:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   }
 218:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   
 219:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   /* Allocate lock resource */
 220:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   __HAL_UNLOCK(hdma);
  58              		.loc 1 220 0
  59 001c 7B68     		ldr	r3, [r7, #4]
  60 001e 0022     		movs	r2, #0
  61 0020 83F83420 		strb	r2, [r3, #52]
 221:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 222:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   /* Change DMA peripheral state */
 223:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   hdma->State = HAL_DMA_STATE_BUSY;
  62              		.loc 1 223 0
  63 0024 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccUjksEu.s 			page 6


  64 0026 0222     		movs	r2, #2
  65 0028 83F83520 		strb	r2, [r3, #53]
 224:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   
 225:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   /* Disable the peripheral */
 226:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   __HAL_DMA_DISABLE(hdma);
  66              		.loc 1 226 0
  67 002c 7B68     		ldr	r3, [r7, #4]
  68 002e 1B68     		ldr	r3, [r3]
  69 0030 7A68     		ldr	r2, [r7, #4]
  70 0032 1268     		ldr	r2, [r2]
  71 0034 1268     		ldr	r2, [r2]
  72 0036 22F00102 		bic	r2, r2, #1
  73 003a 1A60     		str	r2, [r3]
 227:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   
 228:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   /* Check if the DMA Stream is effectively disabled */
 229:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   while((hdma->Instance->CR & DMA_SxCR_EN) != RESET)
  74              		.loc 1 229 0
  75 003c 0FE0     		b	.L4
  76              	.L5:
 230:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   {
 231:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     /* Check for the Timeout */
 232:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     if((HAL_GetTick() - tickstart ) > HAL_TIMEOUT_DMA_ABORT)
  77              		.loc 1 232 0
  78 003e FFF7FEFF 		bl	HAL_GetTick
  79 0042 0246     		mov	r2, r0
  80 0044 3B69     		ldr	r3, [r7, #16]
  81 0046 D31A     		subs	r3, r2, r3
  82 0048 052B     		cmp	r3, #5
  83 004a 08D9     		bls	.L4
 233:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     {
 234:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       /* Update error code */
 235:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       hdma->ErrorCode = HAL_DMA_ERROR_TIMEOUT;
  84              		.loc 1 235 0
  85 004c 7B68     		ldr	r3, [r7, #4]
  86 004e 2022     		movs	r2, #32
  87 0050 5A65     		str	r2, [r3, #84]
 236:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       
 237:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       /* Change the DMA state */
 238:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       hdma->State = HAL_DMA_STATE_TIMEOUT;
  88              		.loc 1 238 0
  89 0052 7B68     		ldr	r3, [r7, #4]
  90 0054 0322     		movs	r2, #3
  91 0056 83F83520 		strb	r2, [r3, #53]
 239:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       
 240:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       return HAL_TIMEOUT;
  92              		.loc 1 240 0
  93 005a 0323     		movs	r3, #3
  94 005c 78E0     		b	.L3
  95              	.L4:
 229:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   {
  96              		.loc 1 229 0
  97 005e 7B68     		ldr	r3, [r7, #4]
  98 0060 1B68     		ldr	r3, [r3]
  99 0062 1B68     		ldr	r3, [r3]
 100 0064 03F00103 		and	r3, r3, #1
 101 0068 002B     		cmp	r3, #0
 102 006a E8D1     		bne	.L5
ARM GAS  /tmp/ccUjksEu.s 			page 7


 241:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     }
 242:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   }
 243:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   
 244:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   /* Get the CR register value */
 245:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   tmp = hdma->Instance->CR;
 103              		.loc 1 245 0
 104 006c 7B68     		ldr	r3, [r7, #4]
 105 006e 1B68     		ldr	r3, [r3]
 106 0070 1B68     		ldr	r3, [r3]
 107 0072 7B61     		str	r3, [r7, #20]
 246:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 247:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   /* Clear CHSEL, MBURST, PBURST, PL, MSIZE, PSIZE, MINC, PINC, CIRC, DIR, CT and DBM bits */
 248:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   tmp &= ((uint32_t)~(DMA_SxCR_CHSEL | DMA_SxCR_MBURST | DMA_SxCR_PBURST | \
 108              		.loc 1 248 0
 109 0074 7A69     		ldr	r2, [r7, #20]
 110 0076 384B     		ldr	r3, .L8
 111 0078 1340     		ands	r3, r3, r2
 112 007a 7B61     		str	r3, [r7, #20]
 249:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****                       DMA_SxCR_PL    | DMA_SxCR_MSIZE  | DMA_SxCR_PSIZE  | \
 250:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****                       DMA_SxCR_MINC  | DMA_SxCR_PINC   | DMA_SxCR_CIRC   | \
 251:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****                       DMA_SxCR_DIR   | DMA_SxCR_CT     | DMA_SxCR_DBM));
 252:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 253:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   /* Prepare the DMA Stream configuration */
 254:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   tmp |=  hdma->Init.Channel             | hdma->Init.Direction        |
 113              		.loc 1 254 0
 114 007c 7B68     		ldr	r3, [r7, #4]
 115 007e 5A68     		ldr	r2, [r3, #4]
 116 0080 7B68     		ldr	r3, [r7, #4]
 117 0082 9B68     		ldr	r3, [r3, #8]
 118 0084 1A43     		orrs	r2, r2, r3
 255:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****           hdma->Init.PeriphInc           | hdma->Init.MemInc           |
 119              		.loc 1 255 0
 120 0086 7B68     		ldr	r3, [r7, #4]
 121 0088 DB68     		ldr	r3, [r3, #12]
 254:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****           hdma->Init.PeriphInc           | hdma->Init.MemInc           |
 122              		.loc 1 254 0
 123 008a 1A43     		orrs	r2, r2, r3
 124              		.loc 1 255 0
 125 008c 7B68     		ldr	r3, [r7, #4]
 126 008e 1B69     		ldr	r3, [r3, #16]
 127 0090 1A43     		orrs	r2, r2, r3
 256:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****           hdma->Init.PeriphDataAlignment | hdma->Init.MemDataAlignment |
 128              		.loc 1 256 0
 129 0092 7B68     		ldr	r3, [r7, #4]
 130 0094 5B69     		ldr	r3, [r3, #20]
 255:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****           hdma->Init.PeriphInc           | hdma->Init.MemInc           |
 131              		.loc 1 255 0
 132 0096 1A43     		orrs	r2, r2, r3
 133              		.loc 1 256 0
 134 0098 7B68     		ldr	r3, [r7, #4]
 135 009a 9B69     		ldr	r3, [r3, #24]
 136 009c 1A43     		orrs	r2, r2, r3
 257:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****           hdma->Init.Mode                | hdma->Init.Priority;
 137              		.loc 1 257 0
 138 009e 7B68     		ldr	r3, [r7, #4]
 139 00a0 DB69     		ldr	r3, [r3, #28]
 256:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****           hdma->Init.PeriphDataAlignment | hdma->Init.MemDataAlignment |
ARM GAS  /tmp/ccUjksEu.s 			page 8


 140              		.loc 1 256 0
 141 00a2 1A43     		orrs	r2, r2, r3
 142              		.loc 1 257 0
 143 00a4 7B68     		ldr	r3, [r7, #4]
 144 00a6 1B6A     		ldr	r3, [r3, #32]
 145 00a8 1343     		orrs	r3, r3, r2
 254:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****           hdma->Init.PeriphInc           | hdma->Init.MemInc           |
 146              		.loc 1 254 0
 147 00aa 7A69     		ldr	r2, [r7, #20]
 148 00ac 1343     		orrs	r3, r3, r2
 149 00ae 7B61     		str	r3, [r7, #20]
 258:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 259:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   /* the Memory burst and peripheral burst are not used when the FIFO is disabled */
 260:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   if(hdma->Init.FIFOMode == DMA_FIFOMODE_ENABLE)
 150              		.loc 1 260 0
 151 00b0 7B68     		ldr	r3, [r7, #4]
 152 00b2 5B6A     		ldr	r3, [r3, #36]
 153 00b4 042B     		cmp	r3, #4
 154 00b6 07D1     		bne	.L6
 261:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   {
 262:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     /* Get memory burst and peripheral burst */
 263:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     tmp |=  hdma->Init.MemBurst | hdma->Init.PeriphBurst;
 155              		.loc 1 263 0
 156 00b8 7B68     		ldr	r3, [r7, #4]
 157 00ba DA6A     		ldr	r2, [r3, #44]
 158 00bc 7B68     		ldr	r3, [r7, #4]
 159 00be 1B6B     		ldr	r3, [r3, #48]
 160 00c0 1343     		orrs	r3, r3, r2
 161 00c2 7A69     		ldr	r2, [r7, #20]
 162 00c4 1343     		orrs	r3, r3, r2
 163 00c6 7B61     		str	r3, [r7, #20]
 164              	.L6:
 264:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   }
 265:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   
 266:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   /* Write to DMA Stream CR register */
 267:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   hdma->Instance->CR = tmp;  
 165              		.loc 1 267 0
 166 00c8 7B68     		ldr	r3, [r7, #4]
 167 00ca 1B68     		ldr	r3, [r3]
 168 00cc 7A69     		ldr	r2, [r7, #20]
 169 00ce 1A60     		str	r2, [r3]
 268:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 269:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   /* Get the FCR register value */
 270:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   tmp = hdma->Instance->FCR;
 170              		.loc 1 270 0
 171 00d0 7B68     		ldr	r3, [r7, #4]
 172 00d2 1B68     		ldr	r3, [r3]
 173 00d4 5B69     		ldr	r3, [r3, #20]
 174 00d6 7B61     		str	r3, [r7, #20]
 271:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 272:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   /* Clear Direct mode and FIFO threshold bits */
 273:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   tmp &= (uint32_t)~(DMA_SxFCR_DMDIS | DMA_SxFCR_FTH);
 175              		.loc 1 273 0
 176 00d8 7B69     		ldr	r3, [r7, #20]
 177 00da 23F00703 		bic	r3, r3, #7
 178 00de 7B61     		str	r3, [r7, #20]
 274:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
ARM GAS  /tmp/ccUjksEu.s 			page 9


 275:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   /* Prepare the DMA Stream FIFO configuration */
 276:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   tmp |= hdma->Init.FIFOMode;
 179              		.loc 1 276 0
 180 00e0 7B68     		ldr	r3, [r7, #4]
 181 00e2 5B6A     		ldr	r3, [r3, #36]
 182 00e4 7A69     		ldr	r2, [r7, #20]
 183 00e6 1343     		orrs	r3, r3, r2
 184 00e8 7B61     		str	r3, [r7, #20]
 277:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 278:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   /* The FIFO threshold is not used when the FIFO mode is disabled */
 279:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   if(hdma->Init.FIFOMode == DMA_FIFOMODE_ENABLE)
 185              		.loc 1 279 0
 186 00ea 7B68     		ldr	r3, [r7, #4]
 187 00ec 5B6A     		ldr	r3, [r3, #36]
 188 00ee 042B     		cmp	r3, #4
 189 00f0 17D1     		bne	.L7
 280:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   {
 281:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     /* Get the FIFO threshold */
 282:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     tmp |= hdma->Init.FIFOThreshold;
 190              		.loc 1 282 0
 191 00f2 7B68     		ldr	r3, [r7, #4]
 192 00f4 9B6A     		ldr	r3, [r3, #40]
 193 00f6 7A69     		ldr	r2, [r7, #20]
 194 00f8 1343     		orrs	r3, r3, r2
 195 00fa 7B61     		str	r3, [r7, #20]
 283:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     
 284:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     /* Check compatibility between FIFO threshold level and size of the memory burst */
 285:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     /* for INCR4, INCR8, INCR16 bursts */
 286:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     if (hdma->Init.MemBurst != DMA_MBURST_SINGLE)
 196              		.loc 1 286 0
 197 00fc 7B68     		ldr	r3, [r7, #4]
 198 00fe DB6A     		ldr	r3, [r3, #44]
 199 0100 002B     		cmp	r3, #0
 200 0102 0ED0     		beq	.L7
 287:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     {
 288:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       if (DMA_CheckFifoParam(hdma) != HAL_OK)
 201              		.loc 1 288 0
 202 0104 7868     		ldr	r0, [r7, #4]
 203 0106 FFF7FEFF 		bl	DMA_CheckFifoParam
 204 010a 0346     		mov	r3, r0
 205 010c 002B     		cmp	r3, #0
 206 010e 08D0     		beq	.L7
 289:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       {
 290:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         /* Update error code */
 291:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         hdma->ErrorCode = HAL_DMA_ERROR_PARAM;
 207              		.loc 1 291 0
 208 0110 7B68     		ldr	r3, [r7, #4]
 209 0112 4022     		movs	r2, #64
 210 0114 5A65     		str	r2, [r3, #84]
 292:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         
 293:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         /* Change the DMA state */
 294:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         hdma->State = HAL_DMA_STATE_READY;
 211              		.loc 1 294 0
 212 0116 7B68     		ldr	r3, [r7, #4]
 213 0118 0122     		movs	r2, #1
 214 011a 83F83520 		strb	r2, [r3, #53]
 295:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         
ARM GAS  /tmp/ccUjksEu.s 			page 10


 296:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         return HAL_ERROR; 
 215              		.loc 1 296 0
 216 011e 0123     		movs	r3, #1
 217 0120 16E0     		b	.L3
 218              	.L7:
 297:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       }
 298:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     }
 299:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   }
 300:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   
 301:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   /* Write to DMA Stream FCR */
 302:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   hdma->Instance->FCR = tmp;
 219              		.loc 1 302 0
 220 0122 7B68     		ldr	r3, [r7, #4]
 221 0124 1B68     		ldr	r3, [r3]
 222 0126 7A69     		ldr	r2, [r7, #20]
 223 0128 5A61     		str	r2, [r3, #20]
 303:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 304:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   /* Initialize StreamBaseAddress and StreamIndex parameters to be used to calculate
 305:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****      DMA steam Base Address needed by HAL_DMA_IRQHandler() and HAL_DMA_PollForTransfer() */
 306:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   regs = (DMA_Base_Registers *)DMA_CalcBaseAndBitshift(hdma);
 224              		.loc 1 306 0
 225 012a 7868     		ldr	r0, [r7, #4]
 226 012c FFF7FEFF 		bl	DMA_CalcBaseAndBitshift
 227 0130 0346     		mov	r3, r0
 228 0132 FB60     		str	r3, [r7, #12]
 307:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   
 308:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   /* Clear all interrupt flags */
 309:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   regs->IFCR = 0x3FU << hdma->StreamIndex;
 229              		.loc 1 309 0
 230 0134 7B68     		ldr	r3, [r7, #4]
 231 0136 DB6D     		ldr	r3, [r3, #92]
 232 0138 3F22     		movs	r2, #63
 233 013a 9A40     		lsls	r2, r2, r3
 234 013c FB68     		ldr	r3, [r7, #12]
 235 013e 9A60     		str	r2, [r3, #8]
 310:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 311:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   /* Initialize the error code */
 312:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   hdma->ErrorCode = HAL_DMA_ERROR_NONE;
 236              		.loc 1 312 0
 237 0140 7B68     		ldr	r3, [r7, #4]
 238 0142 0022     		movs	r2, #0
 239 0144 5A65     		str	r2, [r3, #84]
 313:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****                                                                                      
 314:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   /* Initialize the DMA state */
 315:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   hdma->State = HAL_DMA_STATE_READY;
 240              		.loc 1 315 0
 241 0146 7B68     		ldr	r3, [r7, #4]
 242 0148 0122     		movs	r2, #1
 243 014a 83F83520 		strb	r2, [r3, #53]
 316:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 317:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   return HAL_OK;
 244              		.loc 1 317 0
 245 014e 0023     		movs	r3, #0
 246              	.L3:
 318:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** }
 247              		.loc 1 318 0
 248 0150 1846     		mov	r0, r3
ARM GAS  /tmp/ccUjksEu.s 			page 11


 249 0152 1837     		adds	r7, r7, #24
 250              	.LCFI3:
 251              		.cfi_def_cfa_offset 8
 252 0154 BD46     		mov	sp, r7
 253              	.LCFI4:
 254              		.cfi_def_cfa_register 13
 255              		@ sp needed
 256 0156 80BD     		pop	{r7, pc}
 257              	.L9:
 258              		.align	2
 259              	.L8:
 260 0158 3F8010F0 		.word	-267354049
 261              		.cfi_endproc
 262              	.LFE124:
 264              		.section	.text.HAL_DMA_DeInit,"ax",%progbits
 265              		.align	1
 266              		.global	HAL_DMA_DeInit
 267              		.syntax unified
 268              		.thumb
 269              		.thumb_func
 270              		.fpu fpv4-sp-d16
 272              	HAL_DMA_DeInit:
 273              	.LFB125:
 319:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 320:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** /**
 321:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @brief  DeInitializes the DMA peripheral 
 322:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @param  hdma pointer to a DMA_HandleTypeDef structure that contains
 323:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   *               the configuration information for the specified DMA Stream.  
 324:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @retval HAL status
 325:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   */
 326:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** HAL_StatusTypeDef HAL_DMA_DeInit(DMA_HandleTypeDef *hdma)
 327:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** {
 274              		.loc 1 327 0
 275              		.cfi_startproc
 276              		@ args = 0, pretend = 0, frame = 16
 277              		@ frame_needed = 1, uses_anonymous_args = 0
 278 0000 80B5     		push	{r7, lr}
 279              	.LCFI5:
 280              		.cfi_def_cfa_offset 8
 281              		.cfi_offset 7, -8
 282              		.cfi_offset 14, -4
 283 0002 84B0     		sub	sp, sp, #16
 284              	.LCFI6:
 285              		.cfi_def_cfa_offset 24
 286 0004 00AF     		add	r7, sp, #0
 287              	.LCFI7:
 288              		.cfi_def_cfa_register 7
 289 0006 7860     		str	r0, [r7, #4]
 328:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   DMA_Base_Registers *regs;
 329:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 330:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   /* Check the DMA peripheral state */
 331:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   if(hdma == NULL)
 290              		.loc 1 331 0
 291 0008 7B68     		ldr	r3, [r7, #4]
 292 000a 002B     		cmp	r3, #0
 293 000c 01D1     		bne	.L11
 332:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   {
ARM GAS  /tmp/ccUjksEu.s 			page 12


 333:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     return HAL_ERROR;
 294              		.loc 1 333 0
 295 000e 0123     		movs	r3, #1
 296 0010 3EE0     		b	.L12
 297              	.L11:
 334:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   }
 335:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   
 336:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   /* Check the DMA peripheral state */
 337:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   if(hdma->State == HAL_DMA_STATE_BUSY)
 298              		.loc 1 337 0
 299 0012 7B68     		ldr	r3, [r7, #4]
 300 0014 93F83530 		ldrb	r3, [r3, #53]
 301 0018 DBB2     		uxtb	r3, r3
 302 001a 022B     		cmp	r3, #2
 303 001c 01D1     		bne	.L13
 338:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   {
 339:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     /* Return error status */
 340:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     return HAL_BUSY;
 304              		.loc 1 340 0
 305 001e 0223     		movs	r3, #2
 306 0020 36E0     		b	.L12
 307              	.L13:
 341:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   }
 342:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 343:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   /* Check the parameters */
 344:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   assert_param(IS_DMA_STREAM_ALL_INSTANCE(hdma->Instance));
 345:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 346:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   /* Disable the selected DMA Streamx */
 347:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   __HAL_DMA_DISABLE(hdma);
 308              		.loc 1 347 0
 309 0022 7B68     		ldr	r3, [r7, #4]
 310 0024 1B68     		ldr	r3, [r3]
 311 0026 7A68     		ldr	r2, [r7, #4]
 312 0028 1268     		ldr	r2, [r2]
 313 002a 1268     		ldr	r2, [r2]
 314 002c 22F00102 		bic	r2, r2, #1
 315 0030 1A60     		str	r2, [r3]
 348:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 349:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   /* Reset DMA Streamx control register */
 350:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   hdma->Instance->CR   = 0U;
 316              		.loc 1 350 0
 317 0032 7B68     		ldr	r3, [r7, #4]
 318 0034 1B68     		ldr	r3, [r3]
 319 0036 0022     		movs	r2, #0
 320 0038 1A60     		str	r2, [r3]
 351:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 352:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   /* Reset DMA Streamx number of data to transfer register */
 353:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   hdma->Instance->NDTR = 0U;
 321              		.loc 1 353 0
 322 003a 7B68     		ldr	r3, [r7, #4]
 323 003c 1B68     		ldr	r3, [r3]
 324 003e 0022     		movs	r2, #0
 325 0040 5A60     		str	r2, [r3, #4]
 354:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 355:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   /* Reset DMA Streamx peripheral address register */
 356:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   hdma->Instance->PAR  = 0U;
 326              		.loc 1 356 0
ARM GAS  /tmp/ccUjksEu.s 			page 13


 327 0042 7B68     		ldr	r3, [r7, #4]
 328 0044 1B68     		ldr	r3, [r3]
 329 0046 0022     		movs	r2, #0
 330 0048 9A60     		str	r2, [r3, #8]
 357:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 358:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   /* Reset DMA Streamx memory 0 address register */
 359:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   hdma->Instance->M0AR = 0U;
 331              		.loc 1 359 0
 332 004a 7B68     		ldr	r3, [r7, #4]
 333 004c 1B68     		ldr	r3, [r3]
 334 004e 0022     		movs	r2, #0
 335 0050 DA60     		str	r2, [r3, #12]
 360:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   
 361:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   /* Reset DMA Streamx memory 1 address register */
 362:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   hdma->Instance->M1AR = 0U;
 336              		.loc 1 362 0
 337 0052 7B68     		ldr	r3, [r7, #4]
 338 0054 1B68     		ldr	r3, [r3]
 339 0056 0022     		movs	r2, #0
 340 0058 1A61     		str	r2, [r3, #16]
 363:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   
 364:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   /* Reset DMA Streamx FIFO control register */
 365:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   hdma->Instance->FCR  = 0x00000021U;
 341              		.loc 1 365 0
 342 005a 7B68     		ldr	r3, [r7, #4]
 343 005c 1B68     		ldr	r3, [r3]
 344 005e 2122     		movs	r2, #33
 345 0060 5A61     		str	r2, [r3, #20]
 366:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   
 367:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   /* Get DMA steam Base Address */  
 368:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   regs = (DMA_Base_Registers *)DMA_CalcBaseAndBitshift(hdma);
 346              		.loc 1 368 0
 347 0062 7868     		ldr	r0, [r7, #4]
 348 0064 FFF7FEFF 		bl	DMA_CalcBaseAndBitshift
 349 0068 0346     		mov	r3, r0
 350 006a FB60     		str	r3, [r7, #12]
 369:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   
 370:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   /* Clear all interrupt flags at correct offset within the register */
 371:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   regs->IFCR = 0x3FU << hdma->StreamIndex;
 351              		.loc 1 371 0
 352 006c 7B68     		ldr	r3, [r7, #4]
 353 006e DB6D     		ldr	r3, [r3, #92]
 354 0070 3F22     		movs	r2, #63
 355 0072 9A40     		lsls	r2, r2, r3
 356 0074 FB68     		ldr	r3, [r7, #12]
 357 0076 9A60     		str	r2, [r3, #8]
 372:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 373:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   /* Initialize the error code */
 374:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   hdma->ErrorCode = HAL_DMA_ERROR_NONE;
 358              		.loc 1 374 0
 359 0078 7B68     		ldr	r3, [r7, #4]
 360 007a 0022     		movs	r2, #0
 361 007c 5A65     		str	r2, [r3, #84]
 375:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 376:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   /* Initialize the DMA state */
 377:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   hdma->State = HAL_DMA_STATE_RESET;
 362              		.loc 1 377 0
ARM GAS  /tmp/ccUjksEu.s 			page 14


 363 007e 7B68     		ldr	r3, [r7, #4]
 364 0080 0022     		movs	r2, #0
 365 0082 83F83520 		strb	r2, [r3, #53]
 378:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 379:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   /* Release Lock */
 380:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   __HAL_UNLOCK(hdma);
 366              		.loc 1 380 0
 367 0086 7B68     		ldr	r3, [r7, #4]
 368 0088 0022     		movs	r2, #0
 369 008a 83F83420 		strb	r2, [r3, #52]
 381:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 382:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   return HAL_OK;
 370              		.loc 1 382 0
 371 008e 0023     		movs	r3, #0
 372              	.L12:
 383:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** }
 373              		.loc 1 383 0
 374 0090 1846     		mov	r0, r3
 375 0092 1037     		adds	r7, r7, #16
 376              	.LCFI8:
 377              		.cfi_def_cfa_offset 8
 378 0094 BD46     		mov	sp, r7
 379              	.LCFI9:
 380              		.cfi_def_cfa_register 13
 381              		@ sp needed
 382 0096 80BD     		pop	{r7, pc}
 383              		.cfi_endproc
 384              	.LFE125:
 386              		.section	.text.HAL_DMA_Start,"ax",%progbits
 387              		.align	1
 388              		.global	HAL_DMA_Start
 389              		.syntax unified
 390              		.thumb
 391              		.thumb_func
 392              		.fpu fpv4-sp-d16
 394              	HAL_DMA_Start:
 395              	.LFB126:
 384:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 385:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** /**
 386:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @}
 387:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   */
 388:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 389:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** /** @addtogroup DMA_Exported_Functions_Group2
 390:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   *
 391:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** @verbatim   
 392:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****  ===============================================================================
 393:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****                       #####  IO operation functions  #####
 394:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****  ===============================================================================
 395:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     [..]  This section provides functions allowing to:
 396:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       (+) Configure the source, destination address and data length and Start DMA transfer
 397:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       (+) Configure the source, destination address and data length and 
 398:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****           Start DMA transfer with interrupt
 399:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       (+) Abort DMA transfer
 400:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       (+) Poll for transfer complete
 401:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       (+) Handle DMA interrupt request  
 402:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 403:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** @endverbatim
ARM GAS  /tmp/ccUjksEu.s 			page 15


 404:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @{
 405:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   */
 406:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 407:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** /**
 408:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @brief  Starts the DMA Transfer.
 409:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @param  hdma       pointer to a DMA_HandleTypeDef structure that contains
 410:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   *                     the configuration information for the specified DMA Stream.
 411:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @param  SrcAddress The source memory Buffer address
 412:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @param  DstAddress The destination memory Buffer address
 413:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @param  DataLength The length of data to be transferred from source to destination
 414:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @retval HAL status
 415:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   */
 416:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** HAL_StatusTypeDef HAL_DMA_Start(DMA_HandleTypeDef *hdma, uint32_t SrcAddress, uint32_t DstAddress, 
 417:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** {
 396              		.loc 1 417 0
 397              		.cfi_startproc
 398              		@ args = 0, pretend = 0, frame = 24
 399              		@ frame_needed = 1, uses_anonymous_args = 0
 400 0000 80B5     		push	{r7, lr}
 401              	.LCFI10:
 402              		.cfi_def_cfa_offset 8
 403              		.cfi_offset 7, -8
 404              		.cfi_offset 14, -4
 405 0002 86B0     		sub	sp, sp, #24
 406              	.LCFI11:
 407              		.cfi_def_cfa_offset 32
 408 0004 00AF     		add	r7, sp, #0
 409              	.LCFI12:
 410              		.cfi_def_cfa_register 7
 411 0006 F860     		str	r0, [r7, #12]
 412 0008 B960     		str	r1, [r7, #8]
 413 000a 7A60     		str	r2, [r7, #4]
 414 000c 3B60     		str	r3, [r7]
 418:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   HAL_StatusTypeDef status = HAL_OK;
 415              		.loc 1 418 0
 416 000e 0023     		movs	r3, #0
 417 0010 FB75     		strb	r3, [r7, #23]
 419:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   
 420:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   /* Check the parameters */
 421:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   assert_param(IS_DMA_BUFFER_SIZE(DataLength));
 422:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 423:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   /* Process locked */
 424:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   __HAL_LOCK(hdma);
 418              		.loc 1 424 0
 419 0012 FB68     		ldr	r3, [r7, #12]
 420 0014 93F83430 		ldrb	r3, [r3, #52]	@ zero_extendqisi2
 421 0018 012B     		cmp	r3, #1
 422 001a 01D1     		bne	.L15
 423              		.loc 1 424 0 is_stmt 0 discriminator 1
 424 001c 0223     		movs	r3, #2
 425 001e 26E0     		b	.L16
 426              	.L15:
 427              		.loc 1 424 0 discriminator 2
 428 0020 FB68     		ldr	r3, [r7, #12]
 429 0022 0122     		movs	r2, #1
 430 0024 83F83420 		strb	r2, [r3, #52]
 425:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
ARM GAS  /tmp/ccUjksEu.s 			page 16


 426:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   if(HAL_DMA_STATE_READY == hdma->State)
 431              		.loc 1 426 0 is_stmt 1 discriminator 2
 432 0028 FB68     		ldr	r3, [r7, #12]
 433 002a 93F83530 		ldrb	r3, [r3, #53]
 434 002e DBB2     		uxtb	r3, r3
 435 0030 012B     		cmp	r3, #1
 436 0032 15D1     		bne	.L17
 427:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   {
 428:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     /* Change DMA peripheral state */
 429:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     hdma->State = HAL_DMA_STATE_BUSY;
 437              		.loc 1 429 0
 438 0034 FB68     		ldr	r3, [r7, #12]
 439 0036 0222     		movs	r2, #2
 440 0038 83F83520 		strb	r2, [r3, #53]
 430:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     
 431:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     /* Initialize the error code */
 432:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     hdma->ErrorCode = HAL_DMA_ERROR_NONE;
 441              		.loc 1 432 0
 442 003c FB68     		ldr	r3, [r7, #12]
 443 003e 0022     		movs	r2, #0
 444 0040 5A65     		str	r2, [r3, #84]
 433:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     
 434:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     /* Configure the source, destination address and the data length */
 435:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     DMA_SetConfig(hdma, SrcAddress, DstAddress, DataLength);
 445              		.loc 1 435 0
 446 0042 3B68     		ldr	r3, [r7]
 447 0044 7A68     		ldr	r2, [r7, #4]
 448 0046 B968     		ldr	r1, [r7, #8]
 449 0048 F868     		ldr	r0, [r7, #12]
 450 004a FFF7FEFF 		bl	DMA_SetConfig
 436:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 437:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     /* Enable the Peripheral */
 438:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     __HAL_DMA_ENABLE(hdma);
 451              		.loc 1 438 0
 452 004e FB68     		ldr	r3, [r7, #12]
 453 0050 1B68     		ldr	r3, [r3]
 454 0052 FA68     		ldr	r2, [r7, #12]
 455 0054 1268     		ldr	r2, [r2]
 456 0056 1268     		ldr	r2, [r2]
 457 0058 42F00102 		orr	r2, r2, #1
 458 005c 1A60     		str	r2, [r3]
 459 005e 05E0     		b	.L18
 460              	.L17:
 439:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   }
 440:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   else
 441:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   {
 442:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     /* Process unlocked */
 443:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     __HAL_UNLOCK(hdma);
 461              		.loc 1 443 0
 462 0060 FB68     		ldr	r3, [r7, #12]
 463 0062 0022     		movs	r2, #0
 464 0064 83F83420 		strb	r2, [r3, #52]
 444:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     
 445:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     /* Return error status */
 446:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     status = HAL_BUSY;
 465              		.loc 1 446 0
 466 0068 0223     		movs	r3, #2
ARM GAS  /tmp/ccUjksEu.s 			page 17


 467 006a FB75     		strb	r3, [r7, #23]
 468              	.L18:
 447:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   } 
 448:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   return status; 
 469              		.loc 1 448 0
 470 006c FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 471              	.L16:
 449:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** }
 472              		.loc 1 449 0
 473 006e 1846     		mov	r0, r3
 474 0070 1837     		adds	r7, r7, #24
 475              	.LCFI13:
 476              		.cfi_def_cfa_offset 8
 477 0072 BD46     		mov	sp, r7
 478              	.LCFI14:
 479              		.cfi_def_cfa_register 13
 480              		@ sp needed
 481 0074 80BD     		pop	{r7, pc}
 482              		.cfi_endproc
 483              	.LFE126:
 485              		.section	.text.HAL_DMA_Start_IT,"ax",%progbits
 486              		.align	1
 487              		.global	HAL_DMA_Start_IT
 488              		.syntax unified
 489              		.thumb
 490              		.thumb_func
 491              		.fpu fpv4-sp-d16
 493              	HAL_DMA_Start_IT:
 494              	.LFB127:
 450:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 451:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** /**
 452:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @brief  Start the DMA Transfer with interrupt enabled.
 453:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @param  hdma       pointer to a DMA_HandleTypeDef structure that contains
 454:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   *                     the configuration information for the specified DMA Stream.  
 455:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @param  SrcAddress The source memory Buffer address
 456:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @param  DstAddress The destination memory Buffer address
 457:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @param  DataLength The length of data to be transferred from source to destination
 458:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @retval HAL status
 459:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   */
 460:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** HAL_StatusTypeDef HAL_DMA_Start_IT(DMA_HandleTypeDef *hdma, uint32_t SrcAddress, uint32_t DstAddres
 461:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** {
 495              		.loc 1 461 0
 496              		.cfi_startproc
 497              		@ args = 0, pretend = 0, frame = 24
 498              		@ frame_needed = 1, uses_anonymous_args = 0
 499 0000 80B5     		push	{r7, lr}
 500              	.LCFI15:
 501              		.cfi_def_cfa_offset 8
 502              		.cfi_offset 7, -8
 503              		.cfi_offset 14, -4
 504 0002 86B0     		sub	sp, sp, #24
 505              	.LCFI16:
 506              		.cfi_def_cfa_offset 32
 507 0004 00AF     		add	r7, sp, #0
 508              	.LCFI17:
 509              		.cfi_def_cfa_register 7
 510 0006 F860     		str	r0, [r7, #12]
ARM GAS  /tmp/ccUjksEu.s 			page 18


 511 0008 B960     		str	r1, [r7, #8]
 512 000a 7A60     		str	r2, [r7, #4]
 513 000c 3B60     		str	r3, [r7]
 462:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   HAL_StatusTypeDef status = HAL_OK;
 514              		.loc 1 462 0
 515 000e 0023     		movs	r3, #0
 516 0010 FB75     		strb	r3, [r7, #23]
 463:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 464:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   /* calculate DMA base and stream number */
 465:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   DMA_Base_Registers *regs = (DMA_Base_Registers *)hdma->StreamBaseAddress;
 517              		.loc 1 465 0
 518 0012 FB68     		ldr	r3, [r7, #12]
 519 0014 9B6D     		ldr	r3, [r3, #88]
 520 0016 3B61     		str	r3, [r7, #16]
 466:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   
 467:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   /* Check the parameters */
 468:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   assert_param(IS_DMA_BUFFER_SIZE(DataLength));
 469:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****  
 470:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   /* Process locked */
 471:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   __HAL_LOCK(hdma);
 521              		.loc 1 471 0
 522 0018 FB68     		ldr	r3, [r7, #12]
 523 001a 93F83430 		ldrb	r3, [r3, #52]	@ zero_extendqisi2
 524 001e 012B     		cmp	r3, #1
 525 0020 01D1     		bne	.L20
 526              		.loc 1 471 0 is_stmt 0 discriminator 1
 527 0022 0223     		movs	r3, #2
 528 0024 48E0     		b	.L21
 529              	.L20:
 530              		.loc 1 471 0 discriminator 2
 531 0026 FB68     		ldr	r3, [r7, #12]
 532 0028 0122     		movs	r2, #1
 533 002a 83F83420 		strb	r2, [r3, #52]
 472:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   
 473:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   if(HAL_DMA_STATE_READY == hdma->State)
 534              		.loc 1 473 0 is_stmt 1 discriminator 2
 535 002e FB68     		ldr	r3, [r7, #12]
 536 0030 93F83530 		ldrb	r3, [r3, #53]
 537 0034 DBB2     		uxtb	r3, r3
 538 0036 012B     		cmp	r3, #1
 539 0038 37D1     		bne	.L22
 474:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   {
 475:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     /* Change DMA peripheral state */
 476:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     hdma->State = HAL_DMA_STATE_BUSY;
 540              		.loc 1 476 0
 541 003a FB68     		ldr	r3, [r7, #12]
 542 003c 0222     		movs	r2, #2
 543 003e 83F83520 		strb	r2, [r3, #53]
 477:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     
 478:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     /* Initialize the error code */
 479:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     hdma->ErrorCode = HAL_DMA_ERROR_NONE;
 544              		.loc 1 479 0
 545 0042 FB68     		ldr	r3, [r7, #12]
 546 0044 0022     		movs	r2, #0
 547 0046 5A65     		str	r2, [r3, #84]
 480:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     
 481:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     /* Configure the source, destination address and the data length */
ARM GAS  /tmp/ccUjksEu.s 			page 19


 482:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     DMA_SetConfig(hdma, SrcAddress, DstAddress, DataLength);
 548              		.loc 1 482 0
 549 0048 3B68     		ldr	r3, [r7]
 550 004a 7A68     		ldr	r2, [r7, #4]
 551 004c B968     		ldr	r1, [r7, #8]
 552 004e F868     		ldr	r0, [r7, #12]
 553 0050 FFF7FEFF 		bl	DMA_SetConfig
 483:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     
 484:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     /* Clear all interrupt flags at correct offset within the register */
 485:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     regs->IFCR = 0x3FU << hdma->StreamIndex;
 554              		.loc 1 485 0
 555 0054 FB68     		ldr	r3, [r7, #12]
 556 0056 DB6D     		ldr	r3, [r3, #92]
 557 0058 3F22     		movs	r2, #63
 558 005a 9A40     		lsls	r2, r2, r3
 559 005c 3B69     		ldr	r3, [r7, #16]
 560 005e 9A60     		str	r2, [r3, #8]
 486:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     
 487:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     /* Enable Common interrupts*/
 488:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     hdma->Instance->CR  |= DMA_IT_TC | DMA_IT_TE | DMA_IT_DME;
 561              		.loc 1 488 0
 562 0060 FB68     		ldr	r3, [r7, #12]
 563 0062 1B68     		ldr	r3, [r3]
 564 0064 FA68     		ldr	r2, [r7, #12]
 565 0066 1268     		ldr	r2, [r2]
 566 0068 1268     		ldr	r2, [r2]
 567 006a 42F01602 		orr	r2, r2, #22
 568 006e 1A60     		str	r2, [r3]
 489:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     hdma->Instance->FCR |= DMA_IT_FE;
 569              		.loc 1 489 0
 570 0070 FB68     		ldr	r3, [r7, #12]
 571 0072 1B68     		ldr	r3, [r3]
 572 0074 FA68     		ldr	r2, [r7, #12]
 573 0076 1268     		ldr	r2, [r2]
 574 0078 5269     		ldr	r2, [r2, #20]
 575 007a 42F08002 		orr	r2, r2, #128
 576 007e 5A61     		str	r2, [r3, #20]
 490:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     
 491:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     if(hdma->XferHalfCpltCallback != NULL)
 577              		.loc 1 491 0
 578 0080 FB68     		ldr	r3, [r7, #12]
 579 0082 1B6C     		ldr	r3, [r3, #64]
 580 0084 002B     		cmp	r3, #0
 581 0086 07D0     		beq	.L23
 492:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     {
 493:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       hdma->Instance->CR  |= DMA_IT_HT;
 582              		.loc 1 493 0
 583 0088 FB68     		ldr	r3, [r7, #12]
 584 008a 1B68     		ldr	r3, [r3]
 585 008c FA68     		ldr	r2, [r7, #12]
 586 008e 1268     		ldr	r2, [r2]
 587 0090 1268     		ldr	r2, [r2]
 588 0092 42F00802 		orr	r2, r2, #8
 589 0096 1A60     		str	r2, [r3]
 590              	.L23:
 494:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     }
 495:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     
ARM GAS  /tmp/ccUjksEu.s 			page 20


 496:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     /* Enable the Peripheral */
 497:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     __HAL_DMA_ENABLE(hdma);
 591              		.loc 1 497 0
 592 0098 FB68     		ldr	r3, [r7, #12]
 593 009a 1B68     		ldr	r3, [r3]
 594 009c FA68     		ldr	r2, [r7, #12]
 595 009e 1268     		ldr	r2, [r2]
 596 00a0 1268     		ldr	r2, [r2]
 597 00a2 42F00102 		orr	r2, r2, #1
 598 00a6 1A60     		str	r2, [r3]
 599 00a8 05E0     		b	.L24
 600              	.L22:
 498:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   }
 499:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   else
 500:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   {
 501:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     /* Process unlocked */
 502:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     __HAL_UNLOCK(hdma);	  
 601              		.loc 1 502 0
 602 00aa FB68     		ldr	r3, [r7, #12]
 603 00ac 0022     		movs	r2, #0
 604 00ae 83F83420 		strb	r2, [r3, #52]
 503:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     
 504:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     /* Return error status */
 505:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     status = HAL_BUSY;
 605              		.loc 1 505 0
 606 00b2 0223     		movs	r3, #2
 607 00b4 FB75     		strb	r3, [r7, #23]
 608              	.L24:
 506:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   }
 507:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   
 508:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   return status;
 609              		.loc 1 508 0
 610 00b6 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 611              	.L21:
 509:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** }
 612              		.loc 1 509 0
 613 00b8 1846     		mov	r0, r3
 614 00ba 1837     		adds	r7, r7, #24
 615              	.LCFI18:
 616              		.cfi_def_cfa_offset 8
 617 00bc BD46     		mov	sp, r7
 618              	.LCFI19:
 619              		.cfi_def_cfa_register 13
 620              		@ sp needed
 621 00be 80BD     		pop	{r7, pc}
 622              		.cfi_endproc
 623              	.LFE127:
 625              		.section	.text.HAL_DMA_Abort,"ax",%progbits
 626              		.align	1
 627              		.global	HAL_DMA_Abort
 628              		.syntax unified
 629              		.thumb
 630              		.thumb_func
 631              		.fpu fpv4-sp-d16
 633              	HAL_DMA_Abort:
 634              	.LFB128:
 510:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
ARM GAS  /tmp/ccUjksEu.s 			page 21


 511:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** /**
 512:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @brief  Aborts the DMA Transfer.
 513:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @param  hdma   pointer to a DMA_HandleTypeDef structure that contains
 514:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   *                 the configuration information for the specified DMA Stream.
 515:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   *                   
 516:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @note  After disabling a DMA Stream, a check for wait until the DMA Stream is 
 517:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   *        effectively disabled is added. If a Stream is disabled 
 518:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   *        while a data transfer is ongoing, the current data will be transferred
 519:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   *        and the Stream will be effectively disabled only after the transfer of
 520:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   *        this single data is finished.  
 521:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @retval HAL status
 522:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   */
 523:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** HAL_StatusTypeDef HAL_DMA_Abort(DMA_HandleTypeDef *hdma)
 524:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** {
 635              		.loc 1 524 0
 636              		.cfi_startproc
 637              		@ args = 0, pretend = 0, frame = 16
 638              		@ frame_needed = 1, uses_anonymous_args = 0
 639 0000 80B5     		push	{r7, lr}
 640              	.LCFI20:
 641              		.cfi_def_cfa_offset 8
 642              		.cfi_offset 7, -8
 643              		.cfi_offset 14, -4
 644 0002 84B0     		sub	sp, sp, #16
 645              	.LCFI21:
 646              		.cfi_def_cfa_offset 24
 647 0004 00AF     		add	r7, sp, #0
 648              	.LCFI22:
 649              		.cfi_def_cfa_register 7
 650 0006 7860     		str	r0, [r7, #4]
 525:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   /* calculate DMA base and stream number */
 526:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   DMA_Base_Registers *regs = (DMA_Base_Registers *)hdma->StreamBaseAddress;
 651              		.loc 1 526 0
 652 0008 7B68     		ldr	r3, [r7, #4]
 653 000a 9B6D     		ldr	r3, [r3, #88]
 654 000c FB60     		str	r3, [r7, #12]
 527:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   
 528:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   uint32_t tickstart = HAL_GetTick();
 655              		.loc 1 528 0
 656 000e FFF7FEFF 		bl	HAL_GetTick
 657 0012 B860     		str	r0, [r7, #8]
 529:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   
 530:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   if(hdma->State != HAL_DMA_STATE_BUSY)
 658              		.loc 1 530 0
 659 0014 7B68     		ldr	r3, [r7, #4]
 660 0016 93F83530 		ldrb	r3, [r3, #53]
 661 001a DBB2     		uxtb	r3, r3
 662 001c 022B     		cmp	r3, #2
 663 001e 08D0     		beq	.L26
 531:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   {
 532:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     hdma->ErrorCode = HAL_DMA_ERROR_NO_XFER;
 664              		.loc 1 532 0
 665 0020 7B68     		ldr	r3, [r7, #4]
 666 0022 8022     		movs	r2, #128
 667 0024 5A65     		str	r2, [r3, #84]
 533:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     
 534:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     /* Process Unlocked */
ARM GAS  /tmp/ccUjksEu.s 			page 22


 535:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     __HAL_UNLOCK(hdma);
 668              		.loc 1 535 0
 669 0026 7B68     		ldr	r3, [r7, #4]
 670 0028 0022     		movs	r2, #0
 671 002a 83F83420 		strb	r2, [r3, #52]
 536:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     
 537:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     return HAL_ERROR;
 672              		.loc 1 537 0
 673 002e 0123     		movs	r3, #1
 674 0030 52E0     		b	.L27
 675              	.L26:
 538:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   }
 539:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   else
 540:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   {
 541:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     /* Disable all the transfer interrupts */
 542:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     hdma->Instance->CR  &= ~(DMA_IT_TC | DMA_IT_TE | DMA_IT_DME);
 676              		.loc 1 542 0
 677 0032 7B68     		ldr	r3, [r7, #4]
 678 0034 1B68     		ldr	r3, [r3]
 679 0036 7A68     		ldr	r2, [r7, #4]
 680 0038 1268     		ldr	r2, [r2]
 681 003a 1268     		ldr	r2, [r2]
 682 003c 22F01602 		bic	r2, r2, #22
 683 0040 1A60     		str	r2, [r3]
 543:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     hdma->Instance->FCR &= ~(DMA_IT_FE);
 684              		.loc 1 543 0
 685 0042 7B68     		ldr	r3, [r7, #4]
 686 0044 1B68     		ldr	r3, [r3]
 687 0046 7A68     		ldr	r2, [r7, #4]
 688 0048 1268     		ldr	r2, [r2]
 689 004a 5269     		ldr	r2, [r2, #20]
 690 004c 22F08002 		bic	r2, r2, #128
 691 0050 5A61     		str	r2, [r3, #20]
 544:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     
 545:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     if((hdma->XferHalfCpltCallback != NULL) || (hdma->XferM1HalfCpltCallback != NULL))
 692              		.loc 1 545 0
 693 0052 7B68     		ldr	r3, [r7, #4]
 694 0054 1B6C     		ldr	r3, [r3, #64]
 695 0056 002B     		cmp	r3, #0
 696 0058 03D1     		bne	.L28
 697              		.loc 1 545 0 is_stmt 0 discriminator 1
 698 005a 7B68     		ldr	r3, [r7, #4]
 699 005c 9B6C     		ldr	r3, [r3, #72]
 700 005e 002B     		cmp	r3, #0
 701 0060 07D0     		beq	.L29
 702              	.L28:
 546:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     {
 547:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       hdma->Instance->CR  &= ~(DMA_IT_HT);
 703              		.loc 1 547 0 is_stmt 1
 704 0062 7B68     		ldr	r3, [r7, #4]
 705 0064 1B68     		ldr	r3, [r3]
 706 0066 7A68     		ldr	r2, [r7, #4]
 707 0068 1268     		ldr	r2, [r2]
 708 006a 1268     		ldr	r2, [r2]
 709 006c 22F00802 		bic	r2, r2, #8
 710 0070 1A60     		str	r2, [r3]
 711              	.L29:
ARM GAS  /tmp/ccUjksEu.s 			page 23


 548:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     }
 549:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     
 550:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     /* Disable the stream */
 551:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     __HAL_DMA_DISABLE(hdma);
 712              		.loc 1 551 0
 713 0072 7B68     		ldr	r3, [r7, #4]
 714 0074 1B68     		ldr	r3, [r3]
 715 0076 7A68     		ldr	r2, [r7, #4]
 716 0078 1268     		ldr	r2, [r2]
 717 007a 1268     		ldr	r2, [r2]
 718 007c 22F00102 		bic	r2, r2, #1
 719 0080 1A60     		str	r2, [r3]
 552:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     
 553:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     /* Check if the DMA Stream is effectively disabled */
 554:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     while((hdma->Instance->CR & DMA_SxCR_EN) != RESET)
 720              		.loc 1 554 0
 721 0082 13E0     		b	.L30
 722              	.L31:
 555:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     {
 556:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       /* Check for the Timeout */
 557:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       if((HAL_GetTick() - tickstart ) > HAL_TIMEOUT_DMA_ABORT)
 723              		.loc 1 557 0
 724 0084 FFF7FEFF 		bl	HAL_GetTick
 725 0088 0246     		mov	r2, r0
 726 008a BB68     		ldr	r3, [r7, #8]
 727 008c D31A     		subs	r3, r2, r3
 728 008e 052B     		cmp	r3, #5
 729 0090 0CD9     		bls	.L30
 558:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       {
 559:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         /* Update error code */
 560:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         hdma->ErrorCode = HAL_DMA_ERROR_TIMEOUT;
 730              		.loc 1 560 0
 731 0092 7B68     		ldr	r3, [r7, #4]
 732 0094 2022     		movs	r2, #32
 733 0096 5A65     		str	r2, [r3, #84]
 561:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         
 562:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         /* Process Unlocked */
 563:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         __HAL_UNLOCK(hdma);
 734              		.loc 1 563 0
 735 0098 7B68     		ldr	r3, [r7, #4]
 736 009a 0022     		movs	r2, #0
 737 009c 83F83420 		strb	r2, [r3, #52]
 564:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         
 565:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         /* Change the DMA state */
 566:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         hdma->State = HAL_DMA_STATE_TIMEOUT;
 738              		.loc 1 566 0
 739 00a0 7B68     		ldr	r3, [r7, #4]
 740 00a2 0322     		movs	r2, #3
 741 00a4 83F83520 		strb	r2, [r3, #53]
 567:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         
 568:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         return HAL_TIMEOUT;
 742              		.loc 1 568 0
 743 00a8 0323     		movs	r3, #3
 744 00aa 15E0     		b	.L27
 745              	.L30:
 554:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     {
 746              		.loc 1 554 0
ARM GAS  /tmp/ccUjksEu.s 			page 24


 747 00ac 7B68     		ldr	r3, [r7, #4]
 748 00ae 1B68     		ldr	r3, [r3]
 749 00b0 1B68     		ldr	r3, [r3]
 750 00b2 03F00103 		and	r3, r3, #1
 751 00b6 002B     		cmp	r3, #0
 752 00b8 E4D1     		bne	.L31
 569:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       }
 570:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     }
 571:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     
 572:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     /* Clear all interrupt flags at correct offset within the register */
 573:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     regs->IFCR = 0x3FU << hdma->StreamIndex;
 753              		.loc 1 573 0
 754 00ba 7B68     		ldr	r3, [r7, #4]
 755 00bc DB6D     		ldr	r3, [r3, #92]
 756 00be 3F22     		movs	r2, #63
 757 00c0 9A40     		lsls	r2, r2, r3
 758 00c2 FB68     		ldr	r3, [r7, #12]
 759 00c4 9A60     		str	r2, [r3, #8]
 574:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     
 575:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     /* Process Unlocked */
 576:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     __HAL_UNLOCK(hdma);
 760              		.loc 1 576 0
 761 00c6 7B68     		ldr	r3, [r7, #4]
 762 00c8 0022     		movs	r2, #0
 763 00ca 83F83420 		strb	r2, [r3, #52]
 577:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     
 578:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     /* Change the DMA state*/
 579:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     hdma->State = HAL_DMA_STATE_READY;
 764              		.loc 1 579 0
 765 00ce 7B68     		ldr	r3, [r7, #4]
 766 00d0 0122     		movs	r2, #1
 767 00d2 83F83520 		strb	r2, [r3, #53]
 580:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   }
 581:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   return HAL_OK;
 768              		.loc 1 581 0
 769 00d6 0023     		movs	r3, #0
 770              	.L27:
 582:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** }
 771              		.loc 1 582 0
 772 00d8 1846     		mov	r0, r3
 773 00da 1037     		adds	r7, r7, #16
 774              	.LCFI23:
 775              		.cfi_def_cfa_offset 8
 776 00dc BD46     		mov	sp, r7
 777              	.LCFI24:
 778              		.cfi_def_cfa_register 13
 779              		@ sp needed
 780 00de 80BD     		pop	{r7, pc}
 781              		.cfi_endproc
 782              	.LFE128:
 784              		.section	.text.HAL_DMA_Abort_IT,"ax",%progbits
 785              		.align	1
 786              		.global	HAL_DMA_Abort_IT
 787              		.syntax unified
 788              		.thumb
 789              		.thumb_func
 790              		.fpu fpv4-sp-d16
ARM GAS  /tmp/ccUjksEu.s 			page 25


 792              	HAL_DMA_Abort_IT:
 793              	.LFB129:
 583:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 584:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** /**
 585:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @brief  Aborts the DMA Transfer in Interrupt mode.
 586:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @param  hdma   pointer to a DMA_HandleTypeDef structure that contains
 587:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   *                 the configuration information for the specified DMA Stream.
 588:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @retval HAL status
 589:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   */
 590:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** HAL_StatusTypeDef HAL_DMA_Abort_IT(DMA_HandleTypeDef *hdma)
 591:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** {
 794              		.loc 1 591 0
 795              		.cfi_startproc
 796              		@ args = 0, pretend = 0, frame = 8
 797              		@ frame_needed = 1, uses_anonymous_args = 0
 798              		@ link register save eliminated.
 799 0000 80B4     		push	{r7}
 800              	.LCFI25:
 801              		.cfi_def_cfa_offset 4
 802              		.cfi_offset 7, -4
 803 0002 83B0     		sub	sp, sp, #12
 804              	.LCFI26:
 805              		.cfi_def_cfa_offset 16
 806 0004 00AF     		add	r7, sp, #0
 807              	.LCFI27:
 808              		.cfi_def_cfa_register 7
 809 0006 7860     		str	r0, [r7, #4]
 592:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   if(hdma->State != HAL_DMA_STATE_BUSY)
 810              		.loc 1 592 0
 811 0008 7B68     		ldr	r3, [r7, #4]
 812 000a 93F83530 		ldrb	r3, [r3, #53]
 813 000e DBB2     		uxtb	r3, r3
 814 0010 022B     		cmp	r3, #2
 815 0012 04D0     		beq	.L33
 593:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   {
 594:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     hdma->ErrorCode = HAL_DMA_ERROR_NO_XFER;
 816              		.loc 1 594 0
 817 0014 7B68     		ldr	r3, [r7, #4]
 818 0016 8022     		movs	r2, #128
 819 0018 5A65     		str	r2, [r3, #84]
 595:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     return HAL_ERROR;
 820              		.loc 1 595 0
 821 001a 0123     		movs	r3, #1
 822 001c 0CE0     		b	.L34
 823              	.L33:
 596:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   }
 597:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   else
 598:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   {
 599:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     /* Set Abort State  */
 600:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     hdma->State = HAL_DMA_STATE_ABORT;
 824              		.loc 1 600 0
 825 001e 7B68     		ldr	r3, [r7, #4]
 826 0020 0522     		movs	r2, #5
 827 0022 83F83520 		strb	r2, [r3, #53]
 601:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     
 602:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     /* Disable the stream */
 603:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     __HAL_DMA_DISABLE(hdma);
ARM GAS  /tmp/ccUjksEu.s 			page 26


 828              		.loc 1 603 0
 829 0026 7B68     		ldr	r3, [r7, #4]
 830 0028 1B68     		ldr	r3, [r3]
 831 002a 7A68     		ldr	r2, [r7, #4]
 832 002c 1268     		ldr	r2, [r2]
 833 002e 1268     		ldr	r2, [r2]
 834 0030 22F00102 		bic	r2, r2, #1
 835 0034 1A60     		str	r2, [r3]
 604:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   }
 605:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 606:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   return HAL_OK;
 836              		.loc 1 606 0
 837 0036 0023     		movs	r3, #0
 838              	.L34:
 607:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** }
 839              		.loc 1 607 0
 840 0038 1846     		mov	r0, r3
 841 003a 0C37     		adds	r7, r7, #12
 842              	.LCFI28:
 843              		.cfi_def_cfa_offset 4
 844 003c BD46     		mov	sp, r7
 845              	.LCFI29:
 846              		.cfi_def_cfa_register 13
 847              		@ sp needed
 848 003e 5DF8047B 		ldr	r7, [sp], #4
 849              	.LCFI30:
 850              		.cfi_restore 7
 851              		.cfi_def_cfa_offset 0
 852 0042 7047     		bx	lr
 853              		.cfi_endproc
 854              	.LFE129:
 856              		.section	.text.HAL_DMA_PollForTransfer,"ax",%progbits
 857              		.align	1
 858              		.global	HAL_DMA_PollForTransfer
 859              		.syntax unified
 860              		.thumb
 861              		.thumb_func
 862              		.fpu fpv4-sp-d16
 864              	HAL_DMA_PollForTransfer:
 865              	.LFB130:
 608:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 609:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** /**
 610:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @brief  Polling for transfer complete.
 611:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @param  hdma          pointer to a DMA_HandleTypeDef structure that contains
 612:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   *                        the configuration information for the specified DMA Stream.
 613:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @param  CompleteLevel Specifies the DMA level complete.
 614:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @note   The polling mode is kept in this version for legacy. it is recommanded to use the IT mo
 615:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   *         This model could be used for debug purpose.
 616:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @note   The HAL_DMA_PollForTransfer API cannot be used in circular and double buffering mode (a
 617:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @param  Timeout       Timeout duration.
 618:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @retval HAL status
 619:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   */
 620:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** HAL_StatusTypeDef HAL_DMA_PollForTransfer(DMA_HandleTypeDef *hdma, HAL_DMA_LevelCompleteTypeDef Com
 621:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** {
 866              		.loc 1 621 0
 867              		.cfi_startproc
 868              		@ args = 0, pretend = 0, frame = 40
ARM GAS  /tmp/ccUjksEu.s 			page 27


 869              		@ frame_needed = 1, uses_anonymous_args = 0
 870 0000 80B5     		push	{r7, lr}
 871              	.LCFI31:
 872              		.cfi_def_cfa_offset 8
 873              		.cfi_offset 7, -8
 874              		.cfi_offset 14, -4
 875 0002 8AB0     		sub	sp, sp, #40
 876              	.LCFI32:
 877              		.cfi_def_cfa_offset 48
 878 0004 00AF     		add	r7, sp, #0
 879              	.LCFI33:
 880              		.cfi_def_cfa_register 7
 881 0006 F860     		str	r0, [r7, #12]
 882 0008 0B46     		mov	r3, r1
 883 000a 7A60     		str	r2, [r7, #4]
 884 000c FB72     		strb	r3, [r7, #11]
 622:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   HAL_StatusTypeDef status = HAL_OK; 
 885              		.loc 1 622 0
 886 000e 0023     		movs	r3, #0
 887 0010 FB77     		strb	r3, [r7, #31]
 623:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   uint32_t mask_cpltlevel;
 624:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   uint32_t tickstart = HAL_GetTick(); 
 888              		.loc 1 624 0
 889 0012 FFF7FEFF 		bl	HAL_GetTick
 890 0016 B861     		str	r0, [r7, #24]
 625:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   uint32_t tmpisr;
 626:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   
 627:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   /* calculate DMA base and stream number */
 628:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   DMA_Base_Registers *regs;
 629:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 630:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   if(HAL_DMA_STATE_BUSY != hdma->State)
 891              		.loc 1 630 0
 892 0018 FB68     		ldr	r3, [r7, #12]
 893 001a 93F83530 		ldrb	r3, [r3, #53]
 894 001e DBB2     		uxtb	r3, r3
 895 0020 022B     		cmp	r3, #2
 896 0022 08D0     		beq	.L36
 631:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   {
 632:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     /* No transfer ongoing */
 633:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     hdma->ErrorCode = HAL_DMA_ERROR_NO_XFER;
 897              		.loc 1 633 0
 898 0024 FB68     		ldr	r3, [r7, #12]
 899 0026 8022     		movs	r2, #128
 900 0028 5A65     		str	r2, [r3, #84]
 634:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     __HAL_UNLOCK(hdma);
 901              		.loc 1 634 0
 902 002a FB68     		ldr	r3, [r7, #12]
 903 002c 0022     		movs	r2, #0
 904 002e 83F83420 		strb	r2, [r3, #52]
 635:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     return HAL_ERROR;
 905              		.loc 1 635 0
 906 0032 0123     		movs	r3, #1
 907 0034 BFE0     		b	.L37
 908              	.L36:
 636:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   }
 637:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 638:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   /* Polling mode not supported in circular mode and double buffering mode */
ARM GAS  /tmp/ccUjksEu.s 			page 28


 639:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   if ((hdma->Instance->CR & DMA_SxCR_CIRC) != RESET)
 909              		.loc 1 639 0
 910 0036 FB68     		ldr	r3, [r7, #12]
 911 0038 1B68     		ldr	r3, [r3]
 912 003a 1B68     		ldr	r3, [r3]
 913 003c 03F48073 		and	r3, r3, #256
 914 0040 002B     		cmp	r3, #0
 915 0042 05D0     		beq	.L38
 640:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   {
 641:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     hdma->ErrorCode = HAL_DMA_ERROR_NOT_SUPPORTED;
 916              		.loc 1 641 0
 917 0044 FB68     		ldr	r3, [r7, #12]
 918 0046 4FF48072 		mov	r2, #256
 919 004a 5A65     		str	r2, [r3, #84]
 642:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     return HAL_ERROR;
 920              		.loc 1 642 0
 921 004c 0123     		movs	r3, #1
 922 004e B2E0     		b	.L37
 923              	.L38:
 643:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   }
 644:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   
 645:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   /* Get the level transfer complete flag */
 646:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   if(CompleteLevel == HAL_DMA_FULL_TRANSFER)
 924              		.loc 1 646 0
 925 0050 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 926 0052 002B     		cmp	r3, #0
 927 0054 06D1     		bne	.L39
 647:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   {
 648:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     /* Transfer Complete flag */
 649:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     mask_cpltlevel = DMA_FLAG_TCIF0_4 << hdma->StreamIndex;
 928              		.loc 1 649 0
 929 0056 FB68     		ldr	r3, [r7, #12]
 930 0058 DB6D     		ldr	r3, [r3, #92]
 931 005a 2022     		movs	r2, #32
 932 005c 02FA03F3 		lsl	r3, r2, r3
 933 0060 7B62     		str	r3, [r7, #36]
 934 0062 05E0     		b	.L40
 935              	.L39:
 650:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   }
 651:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   else
 652:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   {
 653:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     /* Half Transfer Complete flag */
 654:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     mask_cpltlevel = DMA_FLAG_HTIF0_4 << hdma->StreamIndex;
 936              		.loc 1 654 0
 937 0064 FB68     		ldr	r3, [r7, #12]
 938 0066 DB6D     		ldr	r3, [r3, #92]
 939 0068 1022     		movs	r2, #16
 940 006a 02FA03F3 		lsl	r3, r2, r3
 941 006e 7B62     		str	r3, [r7, #36]
 942              	.L40:
 655:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   }
 656:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   
 657:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   regs = (DMA_Base_Registers *)hdma->StreamBaseAddress;
 943              		.loc 1 657 0
 944 0070 FB68     		ldr	r3, [r7, #12]
 945 0072 9B6D     		ldr	r3, [r3, #88]
 946 0074 7B61     		str	r3, [r7, #20]
ARM GAS  /tmp/ccUjksEu.s 			page 29


 658:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   tmpisr = regs->ISR;
 947              		.loc 1 658 0
 948 0076 7B69     		ldr	r3, [r7, #20]
 949 0078 1B68     		ldr	r3, [r3]
 950 007a 3B62     		str	r3, [r7, #32]
 659:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   
 660:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   while(((tmpisr & mask_cpltlevel) == RESET) && ((hdma->ErrorCode & HAL_DMA_ERROR_TE) == RESET))
 951              		.loc 1 660 0
 952 007c 5AE0     		b	.L41
 953              	.L47:
 661:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   {
 662:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     /* Check for the Timeout (Not applicable in circular mode)*/
 663:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     if(Timeout != HAL_MAX_DELAY)
 954              		.loc 1 663 0
 955 007e 7B68     		ldr	r3, [r7, #4]
 956 0080 B3F1FF3F 		cmp	r3, #-1
 957 0084 17D0     		beq	.L42
 664:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     {
 665:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       if((Timeout == 0U)||((HAL_GetTick() - tickstart ) > Timeout))
 958              		.loc 1 665 0
 959 0086 7B68     		ldr	r3, [r7, #4]
 960 0088 002B     		cmp	r3, #0
 961 008a 07D0     		beq	.L43
 962              		.loc 1 665 0 is_stmt 0 discriminator 1
 963 008c FFF7FEFF 		bl	HAL_GetTick
 964 0090 0246     		mov	r2, r0
 965 0092 BB69     		ldr	r3, [r7, #24]
 966 0094 D21A     		subs	r2, r2, r3
 967 0096 7B68     		ldr	r3, [r7, #4]
 968 0098 9A42     		cmp	r2, r3
 969 009a 0CD9     		bls	.L42
 970              	.L43:
 666:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       {
 667:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         /* Update error code */
 668:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         hdma->ErrorCode = HAL_DMA_ERROR_TIMEOUT;
 971              		.loc 1 668 0 is_stmt 1
 972 009c FB68     		ldr	r3, [r7, #12]
 973 009e 2022     		movs	r2, #32
 974 00a0 5A65     		str	r2, [r3, #84]
 669:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 670:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         /* Process Unlocked */
 671:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         __HAL_UNLOCK(hdma);
 975              		.loc 1 671 0
 976 00a2 FB68     		ldr	r3, [r7, #12]
 977 00a4 0022     		movs	r2, #0
 978 00a6 83F83420 		strb	r2, [r3, #52]
 672:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         
 673:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         /* Change the DMA state */
 674:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         hdma->State = HAL_DMA_STATE_READY;
 979              		.loc 1 674 0
 980 00aa FB68     		ldr	r3, [r7, #12]
 981 00ac 0122     		movs	r2, #1
 982 00ae 83F83520 		strb	r2, [r3, #53]
 675:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         
 676:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         return HAL_TIMEOUT;
 983              		.loc 1 676 0
 984 00b2 0323     		movs	r3, #3
ARM GAS  /tmp/ccUjksEu.s 			page 30


 985 00b4 7FE0     		b	.L37
 986              	.L42:
 677:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       }
 678:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     }
 679:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 680:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     /* Get the ISR register value */
 681:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     tmpisr = regs->ISR;
 987              		.loc 1 681 0
 988 00b6 7B69     		ldr	r3, [r7, #20]
 989 00b8 1B68     		ldr	r3, [r3]
 990 00ba 3B62     		str	r3, [r7, #32]
 682:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 683:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     if((tmpisr & (DMA_FLAG_TEIF0_4 << hdma->StreamIndex)) != RESET)
 991              		.loc 1 683 0
 992 00bc FB68     		ldr	r3, [r7, #12]
 993 00be DB6D     		ldr	r3, [r3, #92]
 994 00c0 0822     		movs	r2, #8
 995 00c2 9A40     		lsls	r2, r2, r3
 996 00c4 3B6A     		ldr	r3, [r7, #32]
 997 00c6 1340     		ands	r3, r3, r2
 998 00c8 002B     		cmp	r3, #0
 999 00ca 0BD0     		beq	.L44
 684:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     {
 685:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       /* Update error code */
 686:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       hdma->ErrorCode |= HAL_DMA_ERROR_TE;
 1000              		.loc 1 686 0
 1001 00cc FB68     		ldr	r3, [r7, #12]
 1002 00ce 5B6D     		ldr	r3, [r3, #84]
 1003 00d0 43F00102 		orr	r2, r3, #1
 1004 00d4 FB68     		ldr	r3, [r7, #12]
 1005 00d6 5A65     		str	r2, [r3, #84]
 687:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       
 688:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       /* Clear the transfer error flag */
 689:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       regs->IFCR = DMA_FLAG_TEIF0_4 << hdma->StreamIndex;
 1006              		.loc 1 689 0
 1007 00d8 FB68     		ldr	r3, [r7, #12]
 1008 00da DB6D     		ldr	r3, [r3, #92]
 1009 00dc 0822     		movs	r2, #8
 1010 00de 9A40     		lsls	r2, r2, r3
 1011 00e0 7B69     		ldr	r3, [r7, #20]
 1012 00e2 9A60     		str	r2, [r3, #8]
 1013              	.L44:
 690:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     }
 691:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     
 692:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     if((tmpisr & (DMA_FLAG_FEIF0_4 << hdma->StreamIndex)) != RESET)
 1014              		.loc 1 692 0
 1015 00e4 FB68     		ldr	r3, [r7, #12]
 1016 00e6 DB6D     		ldr	r3, [r3, #92]
 1017 00e8 0122     		movs	r2, #1
 1018 00ea 9A40     		lsls	r2, r2, r3
 1019 00ec 3B6A     		ldr	r3, [r7, #32]
 1020 00ee 1340     		ands	r3, r3, r2
 1021 00f0 002B     		cmp	r3, #0
 1022 00f2 0BD0     		beq	.L45
 693:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     {
 694:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       /* Update error code */
 695:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       hdma->ErrorCode |= HAL_DMA_ERROR_FE;
ARM GAS  /tmp/ccUjksEu.s 			page 31


 1023              		.loc 1 695 0
 1024 00f4 FB68     		ldr	r3, [r7, #12]
 1025 00f6 5B6D     		ldr	r3, [r3, #84]
 1026 00f8 43F00202 		orr	r2, r3, #2
 1027 00fc FB68     		ldr	r3, [r7, #12]
 1028 00fe 5A65     		str	r2, [r3, #84]
 696:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       
 697:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       /* Clear the FIFO error flag */
 698:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       regs->IFCR = DMA_FLAG_FEIF0_4 << hdma->StreamIndex;
 1029              		.loc 1 698 0
 1030 0100 FB68     		ldr	r3, [r7, #12]
 1031 0102 DB6D     		ldr	r3, [r3, #92]
 1032 0104 0122     		movs	r2, #1
 1033 0106 9A40     		lsls	r2, r2, r3
 1034 0108 7B69     		ldr	r3, [r7, #20]
 1035 010a 9A60     		str	r2, [r3, #8]
 1036              	.L45:
 699:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     }
 700:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     
 701:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     if((tmpisr & (DMA_FLAG_DMEIF0_4 << hdma->StreamIndex)) != RESET)
 1037              		.loc 1 701 0
 1038 010c FB68     		ldr	r3, [r7, #12]
 1039 010e DB6D     		ldr	r3, [r3, #92]
 1040 0110 0422     		movs	r2, #4
 1041 0112 9A40     		lsls	r2, r2, r3
 1042 0114 3B6A     		ldr	r3, [r7, #32]
 1043 0116 1340     		ands	r3, r3, r2
 1044 0118 002B     		cmp	r3, #0
 1045 011a 0BD0     		beq	.L41
 702:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     {
 703:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       /* Update error code */
 704:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       hdma->ErrorCode |= HAL_DMA_ERROR_DME;
 1046              		.loc 1 704 0
 1047 011c FB68     		ldr	r3, [r7, #12]
 1048 011e 5B6D     		ldr	r3, [r3, #84]
 1049 0120 43F00402 		orr	r2, r3, #4
 1050 0124 FB68     		ldr	r3, [r7, #12]
 1051 0126 5A65     		str	r2, [r3, #84]
 705:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       
 706:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       /* Clear the Direct Mode error flag */
 707:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       regs->IFCR = DMA_FLAG_DMEIF0_4 << hdma->StreamIndex;
 1052              		.loc 1 707 0
 1053 0128 FB68     		ldr	r3, [r7, #12]
 1054 012a DB6D     		ldr	r3, [r3, #92]
 1055 012c 0422     		movs	r2, #4
 1056 012e 9A40     		lsls	r2, r2, r3
 1057 0130 7B69     		ldr	r3, [r7, #20]
 1058 0132 9A60     		str	r2, [r3, #8]
 1059              	.L41:
 660:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   {
 1060              		.loc 1 660 0
 1061 0134 3A6A     		ldr	r2, [r7, #32]
 1062 0136 7B6A     		ldr	r3, [r7, #36]
 1063 0138 1340     		ands	r3, r3, r2
 1064 013a 002B     		cmp	r3, #0
 1065 013c 05D1     		bne	.L46
 660:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   {
ARM GAS  /tmp/ccUjksEu.s 			page 32


 1066              		.loc 1 660 0 is_stmt 0 discriminator 1
 1067 013e FB68     		ldr	r3, [r7, #12]
 1068 0140 5B6D     		ldr	r3, [r3, #84]
 1069 0142 03F00103 		and	r3, r3, #1
 1070 0146 002B     		cmp	r3, #0
 1071 0148 99D0     		beq	.L47
 1072              	.L46:
 708:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     }
 709:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   }
 710:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   
 711:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   if(hdma->ErrorCode != HAL_DMA_ERROR_NONE)
 1073              		.loc 1 711 0 is_stmt 1
 1074 014a FB68     		ldr	r3, [r7, #12]
 1075 014c 5B6D     		ldr	r3, [r3, #84]
 1076 014e 002B     		cmp	r3, #0
 1077 0150 18D0     		beq	.L48
 712:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   {
 713:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     if((hdma->ErrorCode & HAL_DMA_ERROR_TE) != RESET)
 1078              		.loc 1 713 0
 1079 0152 FB68     		ldr	r3, [r7, #12]
 1080 0154 5B6D     		ldr	r3, [r3, #84]
 1081 0156 03F00103 		and	r3, r3, #1
 1082 015a 002B     		cmp	r3, #0
 1083 015c 12D0     		beq	.L48
 714:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     {
 715:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       HAL_DMA_Abort(hdma);
 1084              		.loc 1 715 0
 1085 015e F868     		ldr	r0, [r7, #12]
 1086 0160 FFF7FEFF 		bl	HAL_DMA_Abort
 716:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     
 717:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       /* Clear the half transfer and transfer complete flags */
 718:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       regs->IFCR = (DMA_FLAG_HTIF0_4 | DMA_FLAG_TCIF0_4) << hdma->StreamIndex;
 1087              		.loc 1 718 0
 1088 0164 FB68     		ldr	r3, [r7, #12]
 1089 0166 DB6D     		ldr	r3, [r3, #92]
 1090 0168 3022     		movs	r2, #48
 1091 016a 9A40     		lsls	r2, r2, r3
 1092 016c 7B69     		ldr	r3, [r7, #20]
 1093 016e 9A60     		str	r2, [r3, #8]
 719:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     
 720:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       /* Process Unlocked */
 721:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       __HAL_UNLOCK(hdma);
 1094              		.loc 1 721 0
 1095 0170 FB68     		ldr	r3, [r7, #12]
 1096 0172 0022     		movs	r2, #0
 1097 0174 83F83420 		strb	r2, [r3, #52]
 722:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 723:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       /* Change the DMA state */
 724:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       hdma->State= HAL_DMA_STATE_READY;
 1098              		.loc 1 724 0
 1099 0178 FB68     		ldr	r3, [r7, #12]
 1100 017a 0122     		movs	r2, #1
 1101 017c 83F83520 		strb	r2, [r3, #53]
 725:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 726:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       return HAL_ERROR;
 1102              		.loc 1 726 0
 1103 0180 0123     		movs	r3, #1
ARM GAS  /tmp/ccUjksEu.s 			page 33


 1104 0182 18E0     		b	.L37
 1105              	.L48:
 727:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****    }
 728:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   }
 729:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   
 730:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   /* Get the level transfer complete flag */
 731:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   if(CompleteLevel == HAL_DMA_FULL_TRANSFER)
 1106              		.loc 1 731 0
 1107 0184 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 1108 0186 002B     		cmp	r3, #0
 1109 0188 0ED1     		bne	.L49
 732:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   {
 733:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     /* Clear the half transfer and transfer complete flags */
 734:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     regs->IFCR = (DMA_FLAG_HTIF0_4 | DMA_FLAG_TCIF0_4) << hdma->StreamIndex;
 1110              		.loc 1 734 0
 1111 018a FB68     		ldr	r3, [r7, #12]
 1112 018c DB6D     		ldr	r3, [r3, #92]
 1113 018e 3022     		movs	r2, #48
 1114 0190 9A40     		lsls	r2, r2, r3
 1115 0192 7B69     		ldr	r3, [r7, #20]
 1116 0194 9A60     		str	r2, [r3, #8]
 735:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     
 736:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     /* Process Unlocked */
 737:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     __HAL_UNLOCK(hdma);
 1117              		.loc 1 737 0
 1118 0196 FB68     		ldr	r3, [r7, #12]
 1119 0198 0022     		movs	r2, #0
 1120 019a 83F83420 		strb	r2, [r3, #52]
 738:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 739:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     hdma->State = HAL_DMA_STATE_READY;
 1121              		.loc 1 739 0
 1122 019e FB68     		ldr	r3, [r7, #12]
 1123 01a0 0122     		movs	r2, #1
 1124 01a2 83F83520 		strb	r2, [r3, #53]
 1125 01a6 05E0     		b	.L50
 1126              	.L49:
 740:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   }
 741:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   else
 742:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   {
 743:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     /* Clear the half transfer and transfer complete flags */
 744:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     regs->IFCR = (DMA_FLAG_HTIF0_4) << hdma->StreamIndex;
 1127              		.loc 1 744 0
 1128 01a8 FB68     		ldr	r3, [r7, #12]
 1129 01aa DB6D     		ldr	r3, [r3, #92]
 1130 01ac 1022     		movs	r2, #16
 1131 01ae 9A40     		lsls	r2, r2, r3
 1132 01b0 7B69     		ldr	r3, [r7, #20]
 1133 01b2 9A60     		str	r2, [r3, #8]
 1134              	.L50:
 745:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   }
 746:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   
 747:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   return status;
 1135              		.loc 1 747 0
 1136 01b4 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 1137              	.L37:
 748:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** }
 1138              		.loc 1 748 0
ARM GAS  /tmp/ccUjksEu.s 			page 34


 1139 01b6 1846     		mov	r0, r3
 1140 01b8 2837     		adds	r7, r7, #40
 1141              	.LCFI34:
 1142              		.cfi_def_cfa_offset 8
 1143 01ba BD46     		mov	sp, r7
 1144              	.LCFI35:
 1145              		.cfi_def_cfa_register 13
 1146              		@ sp needed
 1147 01bc 80BD     		pop	{r7, pc}
 1148              		.cfi_endproc
 1149              	.LFE130:
 1151              		.section	.text.HAL_DMA_IRQHandler,"ax",%progbits
 1152              		.align	1
 1153              		.global	HAL_DMA_IRQHandler
 1154              		.syntax unified
 1155              		.thumb
 1156              		.thumb_func
 1157              		.fpu fpv4-sp-d16
 1159              	HAL_DMA_IRQHandler:
 1160              	.LFB131:
 749:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 750:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** /**
 751:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @brief  Handles DMA interrupt request.
 752:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @param  hdma pointer to a DMA_HandleTypeDef structure that contains
 753:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   *               the configuration information for the specified DMA Stream.  
 754:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @retval None
 755:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   */
 756:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** void HAL_DMA_IRQHandler(DMA_HandleTypeDef *hdma)
 757:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** {
 1161              		.loc 1 757 0
 1162              		.cfi_startproc
 1163              		@ args = 0, pretend = 0, frame = 24
 1164              		@ frame_needed = 1, uses_anonymous_args = 0
 1165 0000 80B5     		push	{r7, lr}
 1166              	.LCFI36:
 1167              		.cfi_def_cfa_offset 8
 1168              		.cfi_offset 7, -8
 1169              		.cfi_offset 14, -4
 1170 0002 86B0     		sub	sp, sp, #24
 1171              	.LCFI37:
 1172              		.cfi_def_cfa_offset 32
 1173 0004 00AF     		add	r7, sp, #0
 1174              	.LCFI38:
 1175              		.cfi_def_cfa_register 7
 1176 0006 7860     		str	r0, [r7, #4]
 758:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   uint32_t tmpisr;
 759:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   __IO uint32_t count = 0U;
 1177              		.loc 1 759 0
 1178 0008 0023     		movs	r3, #0
 1179 000a BB60     		str	r3, [r7, #8]
 760:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   uint32_t timeout = SystemCoreClock / 9600U;
 1180              		.loc 1 760 0
 1181 000c 924B     		ldr	r3, .L78
 1182 000e 1B68     		ldr	r3, [r3]
 1183 0010 924A     		ldr	r2, .L78+4
 1184 0012 A2FB0323 		umull	r2, r3, r2, r3
 1185 0016 9B0A     		lsrs	r3, r3, #10
ARM GAS  /tmp/ccUjksEu.s 			page 35


 1186 0018 7B61     		str	r3, [r7, #20]
 761:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 762:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   /* calculate DMA base and stream number */
 763:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   DMA_Base_Registers *regs = (DMA_Base_Registers *)hdma->StreamBaseAddress;
 1187              		.loc 1 763 0
 1188 001a 7B68     		ldr	r3, [r7, #4]
 1189 001c 9B6D     		ldr	r3, [r3, #88]
 1190 001e 3B61     		str	r3, [r7, #16]
 764:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 765:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   tmpisr = regs->ISR;
 1191              		.loc 1 765 0
 1192 0020 3B69     		ldr	r3, [r7, #16]
 1193 0022 1B68     		ldr	r3, [r3]
 1194 0024 FB60     		str	r3, [r7, #12]
 766:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 767:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   /* Transfer Error Interrupt management ***************************************/
 768:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   if ((tmpisr & (DMA_FLAG_TEIF0_4 << hdma->StreamIndex)) != RESET)
 1195              		.loc 1 768 0
 1196 0026 7B68     		ldr	r3, [r7, #4]
 1197 0028 DB6D     		ldr	r3, [r3, #92]
 1198 002a 0822     		movs	r2, #8
 1199 002c 9A40     		lsls	r2, r2, r3
 1200 002e FB68     		ldr	r3, [r7, #12]
 1201 0030 1340     		ands	r3, r3, r2
 1202 0032 002B     		cmp	r3, #0
 1203 0034 1AD0     		beq	.L52
 769:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   {
 770:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     if(__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_TE) != RESET)
 1204              		.loc 1 770 0
 1205 0036 7B68     		ldr	r3, [r7, #4]
 1206 0038 1B68     		ldr	r3, [r3]
 1207 003a 1B68     		ldr	r3, [r3]
 1208 003c 03F00403 		and	r3, r3, #4
 1209 0040 002B     		cmp	r3, #0
 1210 0042 13D0     		beq	.L52
 771:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     {
 772:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       /* Disable the transfer error interrupt */
 773:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       hdma->Instance->CR  &= ~(DMA_IT_TE);
 1211              		.loc 1 773 0
 1212 0044 7B68     		ldr	r3, [r7, #4]
 1213 0046 1B68     		ldr	r3, [r3]
 1214 0048 7A68     		ldr	r2, [r7, #4]
 1215 004a 1268     		ldr	r2, [r2]
 1216 004c 1268     		ldr	r2, [r2]
 1217 004e 22F00402 		bic	r2, r2, #4
 1218 0052 1A60     		str	r2, [r3]
 774:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       
 775:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       /* Clear the transfer error flag */
 776:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       regs->IFCR = DMA_FLAG_TEIF0_4 << hdma->StreamIndex;
 1219              		.loc 1 776 0
 1220 0054 7B68     		ldr	r3, [r7, #4]
 1221 0056 DB6D     		ldr	r3, [r3, #92]
 1222 0058 0822     		movs	r2, #8
 1223 005a 9A40     		lsls	r2, r2, r3
 1224 005c 3B69     		ldr	r3, [r7, #16]
 1225 005e 9A60     		str	r2, [r3, #8]
 777:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       
ARM GAS  /tmp/ccUjksEu.s 			page 36


 778:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       /* Update error code */
 779:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       hdma->ErrorCode |= HAL_DMA_ERROR_TE;
 1226              		.loc 1 779 0
 1227 0060 7B68     		ldr	r3, [r7, #4]
 1228 0062 5B6D     		ldr	r3, [r3, #84]
 1229 0064 43F00102 		orr	r2, r3, #1
 1230 0068 7B68     		ldr	r3, [r7, #4]
 1231 006a 5A65     		str	r2, [r3, #84]
 1232              	.L52:
 780:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     }
 781:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   }
 782:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   /* FIFO Error Interrupt management ******************************************/
 783:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   if ((tmpisr & (DMA_FLAG_FEIF0_4 << hdma->StreamIndex)) != RESET)
 1233              		.loc 1 783 0
 1234 006c 7B68     		ldr	r3, [r7, #4]
 1235 006e DB6D     		ldr	r3, [r3, #92]
 1236 0070 0122     		movs	r2, #1
 1237 0072 9A40     		lsls	r2, r2, r3
 1238 0074 FB68     		ldr	r3, [r7, #12]
 1239 0076 1340     		ands	r3, r3, r2
 1240 0078 002B     		cmp	r3, #0
 1241 007a 12D0     		beq	.L53
 784:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   {
 785:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     if(__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_FE) != RESET)
 1242              		.loc 1 785 0
 1243 007c 7B68     		ldr	r3, [r7, #4]
 1244 007e 1B68     		ldr	r3, [r3]
 1245 0080 5B69     		ldr	r3, [r3, #20]
 1246 0082 03F08003 		and	r3, r3, #128
 1247 0086 002B     		cmp	r3, #0
 1248 0088 0BD0     		beq	.L53
 786:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     {
 787:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       /* Clear the FIFO error flag */
 788:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       regs->IFCR = DMA_FLAG_FEIF0_4 << hdma->StreamIndex;
 1249              		.loc 1 788 0
 1250 008a 7B68     		ldr	r3, [r7, #4]
 1251 008c DB6D     		ldr	r3, [r3, #92]
 1252 008e 0122     		movs	r2, #1
 1253 0090 9A40     		lsls	r2, r2, r3
 1254 0092 3B69     		ldr	r3, [r7, #16]
 1255 0094 9A60     		str	r2, [r3, #8]
 789:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 790:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       /* Update error code */
 791:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       hdma->ErrorCode |= HAL_DMA_ERROR_FE;
 1256              		.loc 1 791 0
 1257 0096 7B68     		ldr	r3, [r7, #4]
 1258 0098 5B6D     		ldr	r3, [r3, #84]
 1259 009a 43F00202 		orr	r2, r3, #2
 1260 009e 7B68     		ldr	r3, [r7, #4]
 1261 00a0 5A65     		str	r2, [r3, #84]
 1262              	.L53:
 792:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     }
 793:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   }
 794:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   /* Direct Mode Error Interrupt management ***********************************/
 795:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   if ((tmpisr & (DMA_FLAG_DMEIF0_4 << hdma->StreamIndex)) != RESET)
 1263              		.loc 1 795 0
 1264 00a2 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccUjksEu.s 			page 37


 1265 00a4 DB6D     		ldr	r3, [r3, #92]
 1266 00a6 0422     		movs	r2, #4
 1267 00a8 9A40     		lsls	r2, r2, r3
 1268 00aa FB68     		ldr	r3, [r7, #12]
 1269 00ac 1340     		ands	r3, r3, r2
 1270 00ae 002B     		cmp	r3, #0
 1271 00b0 12D0     		beq	.L54
 796:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   {
 797:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     if(__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_DME) != RESET)
 1272              		.loc 1 797 0
 1273 00b2 7B68     		ldr	r3, [r7, #4]
 1274 00b4 1B68     		ldr	r3, [r3]
 1275 00b6 1B68     		ldr	r3, [r3]
 1276 00b8 03F00203 		and	r3, r3, #2
 1277 00bc 002B     		cmp	r3, #0
 1278 00be 0BD0     		beq	.L54
 798:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     {
 799:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       /* Clear the direct mode error flag */
 800:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       regs->IFCR = DMA_FLAG_DMEIF0_4 << hdma->StreamIndex;
 1279              		.loc 1 800 0
 1280 00c0 7B68     		ldr	r3, [r7, #4]
 1281 00c2 DB6D     		ldr	r3, [r3, #92]
 1282 00c4 0422     		movs	r2, #4
 1283 00c6 9A40     		lsls	r2, r2, r3
 1284 00c8 3B69     		ldr	r3, [r7, #16]
 1285 00ca 9A60     		str	r2, [r3, #8]
 801:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 802:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       /* Update error code */
 803:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       hdma->ErrorCode |= HAL_DMA_ERROR_DME;
 1286              		.loc 1 803 0
 1287 00cc 7B68     		ldr	r3, [r7, #4]
 1288 00ce 5B6D     		ldr	r3, [r3, #84]
 1289 00d0 43F00402 		orr	r2, r3, #4
 1290 00d4 7B68     		ldr	r3, [r7, #4]
 1291 00d6 5A65     		str	r2, [r3, #84]
 1292              	.L54:
 804:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     }
 805:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   }
 806:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   /* Half Transfer Complete Interrupt management ******************************/
 807:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   if ((tmpisr & (DMA_FLAG_HTIF0_4 << hdma->StreamIndex)) != RESET)
 1293              		.loc 1 807 0
 1294 00d8 7B68     		ldr	r3, [r7, #4]
 1295 00da DB6D     		ldr	r3, [r3, #92]
 1296 00dc 1022     		movs	r2, #16
 1297 00de 9A40     		lsls	r2, r2, r3
 1298 00e0 FB68     		ldr	r3, [r7, #12]
 1299 00e2 1340     		ands	r3, r3, r2
 1300 00e4 002B     		cmp	r3, #0
 1301 00e6 43D0     		beq	.L55
 808:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   {
 809:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     if(__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_HT) != RESET)
 1302              		.loc 1 809 0
 1303 00e8 7B68     		ldr	r3, [r7, #4]
 1304 00ea 1B68     		ldr	r3, [r3]
 1305 00ec 1B68     		ldr	r3, [r3]
 1306 00ee 03F00803 		and	r3, r3, #8
 1307 00f2 002B     		cmp	r3, #0
ARM GAS  /tmp/ccUjksEu.s 			page 38


 1308 00f4 3CD0     		beq	.L55
 810:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     {
 811:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       /* Clear the half transfer complete flag */
 812:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       regs->IFCR = DMA_FLAG_HTIF0_4 << hdma->StreamIndex;
 1309              		.loc 1 812 0
 1310 00f6 7B68     		ldr	r3, [r7, #4]
 1311 00f8 DB6D     		ldr	r3, [r3, #92]
 1312 00fa 1022     		movs	r2, #16
 1313 00fc 9A40     		lsls	r2, r2, r3
 1314 00fe 3B69     		ldr	r3, [r7, #16]
 1315 0100 9A60     		str	r2, [r3, #8]
 813:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       
 814:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       /* Multi_Buffering mode enabled */
 815:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       if(((hdma->Instance->CR) & (uint32_t)(DMA_SxCR_DBM)) != RESET)
 1316              		.loc 1 815 0
 1317 0102 7B68     		ldr	r3, [r7, #4]
 1318 0104 1B68     		ldr	r3, [r3]
 1319 0106 1B68     		ldr	r3, [r3]
 1320 0108 03F48023 		and	r3, r3, #262144
 1321 010c 002B     		cmp	r3, #0
 1322 010e 18D0     		beq	.L56
 816:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       {
 817:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         /* Current memory buffer used is Memory 0 */
 818:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         if((hdma->Instance->CR & DMA_SxCR_CT) == RESET)
 1323              		.loc 1 818 0
 1324 0110 7B68     		ldr	r3, [r7, #4]
 1325 0112 1B68     		ldr	r3, [r3]
 1326 0114 1B68     		ldr	r3, [r3]
 1327 0116 03F40023 		and	r3, r3, #524288
 1328 011a 002B     		cmp	r3, #0
 1329 011c 08D1     		bne	.L57
 819:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         {
 820:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****           if(hdma->XferHalfCpltCallback != NULL)
 1330              		.loc 1 820 0
 1331 011e 7B68     		ldr	r3, [r7, #4]
 1332 0120 1B6C     		ldr	r3, [r3, #64]
 1333 0122 002B     		cmp	r3, #0
 1334 0124 24D0     		beq	.L55
 821:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****           {
 822:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****             /* Half transfer callback */
 823:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****             hdma->XferHalfCpltCallback(hdma);
 1335              		.loc 1 823 0
 1336 0126 7B68     		ldr	r3, [r7, #4]
 1337 0128 1B6C     		ldr	r3, [r3, #64]
 1338 012a 7868     		ldr	r0, [r7, #4]
 1339 012c 9847     		blx	r3
 1340              	.LVL0:
 1341 012e 1FE0     		b	.L55
 1342              	.L57:
 824:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****           }
 825:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         }
 826:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         /* Current memory buffer used is Memory 1 */
 827:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         else
 828:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         {
 829:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****           if(hdma->XferM1HalfCpltCallback != NULL)
 1343              		.loc 1 829 0
 1344 0130 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccUjksEu.s 			page 39


 1345 0132 9B6C     		ldr	r3, [r3, #72]
 1346 0134 002B     		cmp	r3, #0
 1347 0136 1BD0     		beq	.L55
 830:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****           {
 831:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****             /* Half transfer callback */
 832:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****             hdma->XferM1HalfCpltCallback(hdma);
 1348              		.loc 1 832 0
 1349 0138 7B68     		ldr	r3, [r7, #4]
 1350 013a 9B6C     		ldr	r3, [r3, #72]
 1351 013c 7868     		ldr	r0, [r7, #4]
 1352 013e 9847     		blx	r3
 1353              	.LVL1:
 1354 0140 16E0     		b	.L55
 1355              	.L56:
 833:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****           }
 834:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         }
 835:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       }
 836:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       else
 837:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       {
 838:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         /* Disable the half transfer interrupt if the DMA mode is not CIRCULAR */
 839:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         if((hdma->Instance->CR & DMA_SxCR_CIRC) == RESET)
 1356              		.loc 1 839 0
 1357 0142 7B68     		ldr	r3, [r7, #4]
 1358 0144 1B68     		ldr	r3, [r3]
 1359 0146 1B68     		ldr	r3, [r3]
 1360 0148 03F48073 		and	r3, r3, #256
 1361 014c 002B     		cmp	r3, #0
 1362 014e 07D1     		bne	.L60
 840:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         {
 841:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****           /* Disable the half transfer interrupt */
 842:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****           hdma->Instance->CR  &= ~(DMA_IT_HT);
 1363              		.loc 1 842 0
 1364 0150 7B68     		ldr	r3, [r7, #4]
 1365 0152 1B68     		ldr	r3, [r3]
 1366 0154 7A68     		ldr	r2, [r7, #4]
 1367 0156 1268     		ldr	r2, [r2]
 1368 0158 1268     		ldr	r2, [r2]
 1369 015a 22F00802 		bic	r2, r2, #8
 1370 015e 1A60     		str	r2, [r3]
 1371              	.L60:
 843:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         }
 844:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         
 845:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         if(hdma->XferHalfCpltCallback != NULL)
 1372              		.loc 1 845 0
 1373 0160 7B68     		ldr	r3, [r7, #4]
 1374 0162 1B6C     		ldr	r3, [r3, #64]
 1375 0164 002B     		cmp	r3, #0
 1376 0166 03D0     		beq	.L55
 846:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         {
 847:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****           /* Half transfer callback */
 848:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****           hdma->XferHalfCpltCallback(hdma);
 1377              		.loc 1 848 0
 1378 0168 7B68     		ldr	r3, [r7, #4]
 1379 016a 1B6C     		ldr	r3, [r3, #64]
 1380 016c 7868     		ldr	r0, [r7, #4]
 1381 016e 9847     		blx	r3
 1382              	.LVL2:
ARM GAS  /tmp/ccUjksEu.s 			page 40


 1383              	.L55:
 849:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         }
 850:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       }
 851:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     }
 852:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   }
 853:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   /* Transfer Complete Interrupt management ***********************************/
 854:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   if ((tmpisr & (DMA_FLAG_TCIF0_4 << hdma->StreamIndex)) != RESET)
 1384              		.loc 1 854 0
 1385 0170 7B68     		ldr	r3, [r7, #4]
 1386 0172 DB6D     		ldr	r3, [r3, #92]
 1387 0174 2022     		movs	r2, #32
 1388 0176 9A40     		lsls	r2, r2, r3
 1389 0178 FB68     		ldr	r3, [r7, #12]
 1390 017a 1340     		ands	r3, r3, r2
 1391 017c 002B     		cmp	r3, #0
 1392 017e 00F08E80 		beq	.L61
 855:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   {
 856:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     if(__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_TC) != RESET)
 1393              		.loc 1 856 0
 1394 0182 7B68     		ldr	r3, [r7, #4]
 1395 0184 1B68     		ldr	r3, [r3]
 1396 0186 1B68     		ldr	r3, [r3]
 1397 0188 03F01003 		and	r3, r3, #16
 1398 018c 002B     		cmp	r3, #0
 1399 018e 00F08680 		beq	.L61
 857:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     {
 858:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       /* Clear the transfer complete flag */
 859:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       regs->IFCR = DMA_FLAG_TCIF0_4 << hdma->StreamIndex;
 1400              		.loc 1 859 0
 1401 0192 7B68     		ldr	r3, [r7, #4]
 1402 0194 DB6D     		ldr	r3, [r3, #92]
 1403 0196 2022     		movs	r2, #32
 1404 0198 9A40     		lsls	r2, r2, r3
 1405 019a 3B69     		ldr	r3, [r7, #16]
 1406 019c 9A60     		str	r2, [r3, #8]
 860:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       
 861:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       if(HAL_DMA_STATE_ABORT == hdma->State)
 1407              		.loc 1 861 0
 1408 019e 7B68     		ldr	r3, [r7, #4]
 1409 01a0 93F83530 		ldrb	r3, [r3, #53]
 1410 01a4 DBB2     		uxtb	r3, r3
 1411 01a6 052B     		cmp	r3, #5
 1412 01a8 36D1     		bne	.L62
 862:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       {
 863:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         /* Disable all the transfer interrupts */
 864:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         hdma->Instance->CR  &= ~(DMA_IT_TC | DMA_IT_TE | DMA_IT_DME);
 1413              		.loc 1 864 0
 1414 01aa 7B68     		ldr	r3, [r7, #4]
 1415 01ac 1B68     		ldr	r3, [r3]
 1416 01ae 7A68     		ldr	r2, [r7, #4]
 1417 01b0 1268     		ldr	r2, [r2]
 1418 01b2 1268     		ldr	r2, [r2]
 1419 01b4 22F01602 		bic	r2, r2, #22
 1420 01b8 1A60     		str	r2, [r3]
 865:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         hdma->Instance->FCR &= ~(DMA_IT_FE);
 1421              		.loc 1 865 0
 1422 01ba 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccUjksEu.s 			page 41


 1423 01bc 1B68     		ldr	r3, [r3]
 1424 01be 7A68     		ldr	r2, [r7, #4]
 1425 01c0 1268     		ldr	r2, [r2]
 1426 01c2 5269     		ldr	r2, [r2, #20]
 1427 01c4 22F08002 		bic	r2, r2, #128
 1428 01c8 5A61     		str	r2, [r3, #20]
 866:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         
 867:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         if((hdma->XferHalfCpltCallback != NULL) || (hdma->XferM1HalfCpltCallback != NULL))
 1429              		.loc 1 867 0
 1430 01ca 7B68     		ldr	r3, [r7, #4]
 1431 01cc 1B6C     		ldr	r3, [r3, #64]
 1432 01ce 002B     		cmp	r3, #0
 1433 01d0 03D1     		bne	.L63
 1434              		.loc 1 867 0 is_stmt 0 discriminator 1
 1435 01d2 7B68     		ldr	r3, [r7, #4]
 1436 01d4 9B6C     		ldr	r3, [r3, #72]
 1437 01d6 002B     		cmp	r3, #0
 1438 01d8 07D0     		beq	.L64
 1439              	.L63:
 868:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         {
 869:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****           hdma->Instance->CR  &= ~(DMA_IT_HT);
 1440              		.loc 1 869 0 is_stmt 1
 1441 01da 7B68     		ldr	r3, [r7, #4]
 1442 01dc 1B68     		ldr	r3, [r3]
 1443 01de 7A68     		ldr	r2, [r7, #4]
 1444 01e0 1268     		ldr	r2, [r2]
 1445 01e2 1268     		ldr	r2, [r2]
 1446 01e4 22F00802 		bic	r2, r2, #8
 1447 01e8 1A60     		str	r2, [r3]
 1448              	.L64:
 870:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         }
 871:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 872:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         /* Clear all interrupt flags at correct offset within the register */
 873:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         regs->IFCR = 0x3FU << hdma->StreamIndex;
 1449              		.loc 1 873 0
 1450 01ea 7B68     		ldr	r3, [r7, #4]
 1451 01ec DB6D     		ldr	r3, [r3, #92]
 1452 01ee 3F22     		movs	r2, #63
 1453 01f0 9A40     		lsls	r2, r2, r3
 1454 01f2 3B69     		ldr	r3, [r7, #16]
 1455 01f4 9A60     		str	r2, [r3, #8]
 874:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 875:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         /* Process Unlocked */
 876:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         __HAL_UNLOCK(hdma);
 1456              		.loc 1 876 0
 1457 01f6 7B68     		ldr	r3, [r7, #4]
 1458 01f8 0022     		movs	r2, #0
 1459 01fa 83F83420 		strb	r2, [r3, #52]
 877:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 878:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         /* Change the DMA state */
 879:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         hdma->State = HAL_DMA_STATE_READY;
 1460              		.loc 1 879 0
 1461 01fe 7B68     		ldr	r3, [r7, #4]
 1462 0200 0122     		movs	r2, #1
 1463 0202 83F83520 		strb	r2, [r3, #53]
 880:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 881:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         if(hdma->XferAbortCallback != NULL)
ARM GAS  /tmp/ccUjksEu.s 			page 42


 1464              		.loc 1 881 0
 1465 0206 7B68     		ldr	r3, [r7, #4]
 1466 0208 1B6D     		ldr	r3, [r3, #80]
 1467 020a 002B     		cmp	r3, #0
 1468 020c 7DD0     		beq	.L76
 882:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         {
 883:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****           hdma->XferAbortCallback(hdma);
 1469              		.loc 1 883 0
 1470 020e 7B68     		ldr	r3, [r7, #4]
 1471 0210 1B6D     		ldr	r3, [r3, #80]
 1472 0212 7868     		ldr	r0, [r7, #4]
 1473 0214 9847     		blx	r3
 1474              	.LVL3:
 884:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         }
 885:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         return;
 1475              		.loc 1 885 0
 1476 0216 78E0     		b	.L76
 1477              	.L62:
 886:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       }
 887:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 888:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       if(((hdma->Instance->CR) & (uint32_t)(DMA_SxCR_DBM)) != RESET)
 1478              		.loc 1 888 0
 1479 0218 7B68     		ldr	r3, [r7, #4]
 1480 021a 1B68     		ldr	r3, [r3]
 1481 021c 1B68     		ldr	r3, [r3]
 1482 021e 03F48023 		and	r3, r3, #262144
 1483 0222 002B     		cmp	r3, #0
 1484 0224 1CD0     		beq	.L67
 889:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       {
 890:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         /* Current memory buffer used is Memory 0 */
 891:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         if((hdma->Instance->CR & DMA_SxCR_CT) == RESET)
 1485              		.loc 1 891 0
 1486 0226 7B68     		ldr	r3, [r7, #4]
 1487 0228 1B68     		ldr	r3, [r3]
 1488 022a 1B68     		ldr	r3, [r3]
 1489 022c 03F40023 		and	r3, r3, #524288
 1490 0230 002B     		cmp	r3, #0
 1491 0232 08D1     		bne	.L68
 892:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         {
 893:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****           if(hdma->XferM1CpltCallback != NULL)
 1492              		.loc 1 893 0
 1493 0234 7B68     		ldr	r3, [r7, #4]
 1494 0236 5B6C     		ldr	r3, [r3, #68]
 1495 0238 002B     		cmp	r3, #0
 1496 023a 30D0     		beq	.L61
 894:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****           {
 895:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****             /* Transfer complete Callback for memory1 */
 896:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****             hdma->XferM1CpltCallback(hdma);
 1497              		.loc 1 896 0
 1498 023c 7B68     		ldr	r3, [r7, #4]
 1499 023e 5B6C     		ldr	r3, [r3, #68]
 1500 0240 7868     		ldr	r0, [r7, #4]
 1501 0242 9847     		blx	r3
 1502              	.LVL4:
 1503 0244 2BE0     		b	.L61
 1504              	.L68:
 897:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****           }
ARM GAS  /tmp/ccUjksEu.s 			page 43


 898:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         }
 899:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         /* Current memory buffer used is Memory 1 */
 900:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         else
 901:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         {
 902:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****           if(hdma->XferCpltCallback != NULL)
 1505              		.loc 1 902 0
 1506 0246 7B68     		ldr	r3, [r7, #4]
 1507 0248 DB6B     		ldr	r3, [r3, #60]
 1508 024a 002B     		cmp	r3, #0
 1509 024c 27D0     		beq	.L61
 903:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****           {
 904:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****             /* Transfer complete Callback for memory0 */
 905:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****             hdma->XferCpltCallback(hdma);
 1510              		.loc 1 905 0
 1511 024e 7B68     		ldr	r3, [r7, #4]
 1512 0250 DB6B     		ldr	r3, [r3, #60]
 1513 0252 7868     		ldr	r0, [r7, #4]
 1514 0254 9847     		blx	r3
 1515              	.LVL5:
 1516 0256 22E0     		b	.L61
 1517              	.L79:
 1518              		.align	2
 1519              	.L78:
 1520 0258 00000000 		.word	SystemCoreClock
 1521 025c B5814E1B 		.word	458129845
 1522              	.L67:
 906:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****           }
 907:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         }
 908:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       }
 909:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       /* Disable the transfer complete interrupt if the DMA mode is not CIRCULAR */
 910:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       else
 911:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       {
 912:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         if((hdma->Instance->CR & DMA_SxCR_CIRC) == RESET)
 1523              		.loc 1 912 0
 1524 0260 7B68     		ldr	r3, [r7, #4]
 1525 0262 1B68     		ldr	r3, [r3]
 1526 0264 1B68     		ldr	r3, [r3]
 1527 0266 03F48073 		and	r3, r3, #256
 1528 026a 002B     		cmp	r3, #0
 1529 026c 0FD1     		bne	.L71
 913:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         {
 914:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****           /* Disable the transfer complete interrupt */
 915:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****           hdma->Instance->CR  &= ~(DMA_IT_TC);
 1530              		.loc 1 915 0
 1531 026e 7B68     		ldr	r3, [r7, #4]
 1532 0270 1B68     		ldr	r3, [r3]
 1533 0272 7A68     		ldr	r2, [r7, #4]
 1534 0274 1268     		ldr	r2, [r2]
 1535 0276 1268     		ldr	r2, [r2]
 1536 0278 22F01002 		bic	r2, r2, #16
 1537 027c 1A60     		str	r2, [r3]
 916:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 917:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****           /* Process Unlocked */
 918:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****           __HAL_UNLOCK(hdma);
 1538              		.loc 1 918 0
 1539 027e 7B68     		ldr	r3, [r7, #4]
 1540 0280 0022     		movs	r2, #0
ARM GAS  /tmp/ccUjksEu.s 			page 44


 1541 0282 83F83420 		strb	r2, [r3, #52]
 919:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 920:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****           /* Change the DMA state */
 921:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****           hdma->State = HAL_DMA_STATE_READY;
 1542              		.loc 1 921 0
 1543 0286 7B68     		ldr	r3, [r7, #4]
 1544 0288 0122     		movs	r2, #1
 1545 028a 83F83520 		strb	r2, [r3, #53]
 1546              	.L71:
 922:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         }
 923:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 924:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         if(hdma->XferCpltCallback != NULL)
 1547              		.loc 1 924 0
 1548 028e 7B68     		ldr	r3, [r7, #4]
 1549 0290 DB6B     		ldr	r3, [r3, #60]
 1550 0292 002B     		cmp	r3, #0
 1551 0294 03D0     		beq	.L61
 925:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         {
 926:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****           /* Transfer complete callback */
 927:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****           hdma->XferCpltCallback(hdma);
 1552              		.loc 1 927 0
 1553 0296 7B68     		ldr	r3, [r7, #4]
 1554 0298 DB6B     		ldr	r3, [r3, #60]
 1555 029a 7868     		ldr	r0, [r7, #4]
 1556 029c 9847     		blx	r3
 1557              	.LVL6:
 1558              	.L61:
 928:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         }
 929:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       }
 930:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     }
 931:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   }
 932:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   
 933:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   /* manage error case */
 934:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   if(hdma->ErrorCode != HAL_DMA_ERROR_NONE)
 1559              		.loc 1 934 0
 1560 029e 7B68     		ldr	r3, [r7, #4]
 1561 02a0 5B6D     		ldr	r3, [r3, #84]
 1562 02a2 002B     		cmp	r3, #0
 1563 02a4 32D0     		beq	.L51
 935:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   {
 936:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     if((hdma->ErrorCode & HAL_DMA_ERROR_TE) != RESET)
 1564              		.loc 1 936 0
 1565 02a6 7B68     		ldr	r3, [r7, #4]
 1566 02a8 5B6D     		ldr	r3, [r3, #84]
 1567 02aa 03F00103 		and	r3, r3, #1
 1568 02ae 002B     		cmp	r3, #0
 1569 02b0 22D0     		beq	.L72
 937:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     {
 938:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       hdma->State = HAL_DMA_STATE_ABORT;
 1570              		.loc 1 938 0
 1571 02b2 7B68     		ldr	r3, [r7, #4]
 1572 02b4 0522     		movs	r2, #5
 1573 02b6 83F83520 		strb	r2, [r3, #53]
 939:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 940:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       /* Disable the stream */
 941:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       __HAL_DMA_DISABLE(hdma);
 1574              		.loc 1 941 0
ARM GAS  /tmp/ccUjksEu.s 			page 45


 1575 02ba 7B68     		ldr	r3, [r7, #4]
 1576 02bc 1B68     		ldr	r3, [r3]
 1577 02be 7A68     		ldr	r2, [r7, #4]
 1578 02c0 1268     		ldr	r2, [r2]
 1579 02c2 1268     		ldr	r2, [r2]
 1580 02c4 22F00102 		bic	r2, r2, #1
 1581 02c8 1A60     		str	r2, [r3]
 1582              	.L75:
 942:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 943:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       do
 944:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       {
 945:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         if (++count > timeout)
 1583              		.loc 1 945 0
 1584 02ca BB68     		ldr	r3, [r7, #8]
 1585 02cc 0133     		adds	r3, r3, #1
 1586 02ce BB60     		str	r3, [r7, #8]
 1587 02d0 7A69     		ldr	r2, [r7, #20]
 1588 02d2 9342     		cmp	r3, r2
 1589 02d4 07D8     		bhi	.L77
 946:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         {
 947:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****           break;
 948:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         }
 949:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       }
 950:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       while((hdma->Instance->CR & DMA_SxCR_EN) != RESET);
 1590              		.loc 1 950 0
 1591 02d6 7B68     		ldr	r3, [r7, #4]
 1592 02d8 1B68     		ldr	r3, [r3]
 1593 02da 1B68     		ldr	r3, [r3]
 1594 02dc 03F00103 		and	r3, r3, #1
 1595 02e0 002B     		cmp	r3, #0
 1596 02e2 F2D1     		bne	.L75
 1597 02e4 00E0     		b	.L74
 1598              	.L77:
 947:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         }
 1599              		.loc 1 947 0
 1600 02e6 00BF     		nop
 1601              	.L74:
 951:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 952:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       /* Process Unlocked */
 953:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       __HAL_UNLOCK(hdma);
 1602              		.loc 1 953 0
 1603 02e8 7B68     		ldr	r3, [r7, #4]
 1604 02ea 0022     		movs	r2, #0
 1605 02ec 83F83420 		strb	r2, [r3, #52]
 954:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 955:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       /* Change the DMA state */
 956:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       hdma->State = HAL_DMA_STATE_READY;
 1606              		.loc 1 956 0
 1607 02f0 7B68     		ldr	r3, [r7, #4]
 1608 02f2 0122     		movs	r2, #1
 1609 02f4 83F83520 		strb	r2, [r3, #53]
 1610              	.L72:
 957:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     }
 958:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 959:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     if(hdma->XferErrorCallback != NULL)
 1611              		.loc 1 959 0
 1612 02f8 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccUjksEu.s 			page 46


 1613 02fa DB6C     		ldr	r3, [r3, #76]
 1614 02fc 002B     		cmp	r3, #0
 1615 02fe 05D0     		beq	.L51
 960:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     {
 961:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       /* Transfer error callback */
 962:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       hdma->XferErrorCallback(hdma);
 1616              		.loc 1 962 0
 1617 0300 7B68     		ldr	r3, [r7, #4]
 1618 0302 DB6C     		ldr	r3, [r3, #76]
 1619 0304 7868     		ldr	r0, [r7, #4]
 1620 0306 9847     		blx	r3
 1621              	.LVL7:
 1622 0308 00E0     		b	.L51
 1623              	.L76:
 885:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       }
 1624              		.loc 1 885 0
 1625 030a 00BF     		nop
 1626              	.L51:
 963:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     }
 964:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   }
 965:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** }
 1627              		.loc 1 965 0
 1628 030c 1837     		adds	r7, r7, #24
 1629              	.LCFI39:
 1630              		.cfi_def_cfa_offset 8
 1631 030e BD46     		mov	sp, r7
 1632              	.LCFI40:
 1633              		.cfi_def_cfa_register 13
 1634              		@ sp needed
 1635 0310 80BD     		pop	{r7, pc}
 1636              		.cfi_endproc
 1637              	.LFE131:
 1639 0312 00BF     		.section	.text.HAL_DMA_RegisterCallback,"ax",%progbits
 1640              		.align	1
 1641              		.global	HAL_DMA_RegisterCallback
 1642              		.syntax unified
 1643              		.thumb
 1644              		.thumb_func
 1645              		.fpu fpv4-sp-d16
 1647              	HAL_DMA_RegisterCallback:
 1648              	.LFB132:
 966:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 967:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** /**
 968:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @brief  Register callbacks
 969:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @param  hdma                 pointer to a DMA_HandleTypeDef structure that contains
 970:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   *                               the configuration information for the specified DMA Stream.
 971:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @param  CallbackID           User Callback identifer
 972:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   *                               a DMA_HandleTypeDef structure as parameter.
 973:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @param  pCallback            pointer to private callbacsk function which has pointer to 
 974:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   *                               a DMA_HandleTypeDef structure as parameter.
 975:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @retval HAL status
 976:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   */                      
 977:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** HAL_StatusTypeDef HAL_DMA_RegisterCallback(DMA_HandleTypeDef *hdma, HAL_DMA_CallbackIDTypeDef Callb
 978:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** {
 1649              		.loc 1 978 0
 1650              		.cfi_startproc
 1651              		@ args = 0, pretend = 0, frame = 24
ARM GAS  /tmp/ccUjksEu.s 			page 47


 1652              		@ frame_needed = 1, uses_anonymous_args = 0
 1653              		@ link register save eliminated.
 1654 0000 80B4     		push	{r7}
 1655              	.LCFI41:
 1656              		.cfi_def_cfa_offset 4
 1657              		.cfi_offset 7, -4
 1658 0002 87B0     		sub	sp, sp, #28
 1659              	.LCFI42:
 1660              		.cfi_def_cfa_offset 32
 1661 0004 00AF     		add	r7, sp, #0
 1662              	.LCFI43:
 1663              		.cfi_def_cfa_register 7
 1664 0006 F860     		str	r0, [r7, #12]
 1665 0008 0B46     		mov	r3, r1
 1666 000a 7A60     		str	r2, [r7, #4]
 1667 000c FB72     		strb	r3, [r7, #11]
 979:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 980:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   HAL_StatusTypeDef status = HAL_OK;
 1668              		.loc 1 980 0
 1669 000e 0023     		movs	r3, #0
 1670 0010 FB75     		strb	r3, [r7, #23]
 981:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 982:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   /* Process locked */
 983:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   __HAL_LOCK(hdma);
 1671              		.loc 1 983 0
 1672 0012 FB68     		ldr	r3, [r7, #12]
 1673 0014 93F83430 		ldrb	r3, [r3, #52]	@ zero_extendqisi2
 1674 0018 012B     		cmp	r3, #1
 1675 001a 01D1     		bne	.L81
 1676              		.loc 1 983 0 is_stmt 0 discriminator 1
 1677 001c 0223     		movs	r3, #2
 1678 001e 3CE0     		b	.L82
 1679              	.L81:
 1680              		.loc 1 983 0 discriminator 2
 1681 0020 FB68     		ldr	r3, [r7, #12]
 1682 0022 0122     		movs	r2, #1
 1683 0024 83F83420 		strb	r2, [r3, #52]
 984:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 985:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   if(HAL_DMA_STATE_READY == hdma->State)
 1684              		.loc 1 985 0 is_stmt 1 discriminator 2
 1685 0028 FB68     		ldr	r3, [r7, #12]
 1686 002a 93F83530 		ldrb	r3, [r3, #53]
 1687 002e DBB2     		uxtb	r3, r3
 1688 0030 012B     		cmp	r3, #1
 1689 0032 29D1     		bne	.L83
 986:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   {
 987:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     switch (CallbackID)
 1690              		.loc 1 987 0
 1691 0034 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 1692 0036 052B     		cmp	r3, #5
 1693 0038 29D8     		bhi	.L94
 1694 003a 01A2     		adr	r2, .L86
 1695 003c 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1696              		.p2align 2
 1697              	.L86:
 1698 0040 59000000 		.word	.L85+1
 1699 0044 61000000 		.word	.L87+1
ARM GAS  /tmp/ccUjksEu.s 			page 48


 1700 0048 69000000 		.word	.L88+1
 1701 004c 71000000 		.word	.L89+1
 1702 0050 79000000 		.word	.L90+1
 1703 0054 81000000 		.word	.L91+1
 1704              		.p2align 1
 1705              	.L85:
 988:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     {
 989:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     case  HAL_DMA_XFER_CPLT_CB_ID:
 990:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       hdma->XferCpltCallback = pCallback;
 1706              		.loc 1 990 0
 1707 0058 FB68     		ldr	r3, [r7, #12]
 1708 005a 7A68     		ldr	r2, [r7, #4]
 1709 005c DA63     		str	r2, [r3, #60]
 991:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       break;
 1710              		.loc 1 991 0
 1711 005e 17E0     		b	.L93
 1712              	.L87:
 992:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 993:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     case  HAL_DMA_XFER_HALFCPLT_CB_ID:
 994:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       hdma->XferHalfCpltCallback = pCallback;
 1713              		.loc 1 994 0
 1714 0060 FB68     		ldr	r3, [r7, #12]
 1715 0062 7A68     		ldr	r2, [r7, #4]
 1716 0064 1A64     		str	r2, [r3, #64]
 995:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       break;
 1717              		.loc 1 995 0
 1718 0066 13E0     		b	.L93
 1719              	.L88:
 996:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 997:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     case  HAL_DMA_XFER_M1CPLT_CB_ID:
 998:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       hdma->XferM1CpltCallback = pCallback;
 1720              		.loc 1 998 0
 1721 0068 FB68     		ldr	r3, [r7, #12]
 1722 006a 7A68     		ldr	r2, [r7, #4]
 1723 006c 5A64     		str	r2, [r3, #68]
 999:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       break;
 1724              		.loc 1 999 0
 1725 006e 0FE0     		b	.L93
 1726              	.L89:
1000:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
1001:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     case  HAL_DMA_XFER_M1HALFCPLT_CB_ID:
1002:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       hdma->XferM1HalfCpltCallback = pCallback;
 1727              		.loc 1 1002 0
 1728 0070 FB68     		ldr	r3, [r7, #12]
 1729 0072 7A68     		ldr	r2, [r7, #4]
 1730 0074 9A64     		str	r2, [r3, #72]
1003:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       break;
 1731              		.loc 1 1003 0
 1732 0076 0BE0     		b	.L93
 1733              	.L90:
1004:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
1005:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     case  HAL_DMA_XFER_ERROR_CB_ID:
1006:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       hdma->XferErrorCallback = pCallback;
 1734              		.loc 1 1006 0
 1735 0078 FB68     		ldr	r3, [r7, #12]
 1736 007a 7A68     		ldr	r2, [r7, #4]
 1737 007c DA64     		str	r2, [r3, #76]
ARM GAS  /tmp/ccUjksEu.s 			page 49


1007:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       break;
 1738              		.loc 1 1007 0
 1739 007e 07E0     		b	.L93
 1740              	.L91:
1008:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
1009:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     case  HAL_DMA_XFER_ABORT_CB_ID:
1010:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       hdma->XferAbortCallback = pCallback;
 1741              		.loc 1 1010 0
 1742 0080 FB68     		ldr	r3, [r7, #12]
 1743 0082 7A68     		ldr	r2, [r7, #4]
 1744 0084 1A65     		str	r2, [r3, #80]
1011:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       break;
 1745              		.loc 1 1011 0
 1746 0086 03E0     		b	.L93
 1747              	.L83:
1012:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
1013:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     default:
1014:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       break;
1015:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     }
1016:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   }
1017:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   else
1018:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   {
1019:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     /* Return error status */
1020:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     status =  HAL_ERROR;
 1748              		.loc 1 1020 0
 1749 0088 0123     		movs	r3, #1
 1750 008a FB75     		strb	r3, [r7, #23]
 1751 008c 00E0     		b	.L93
 1752              	.L94:
1014:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     }
 1753              		.loc 1 1014 0
 1754 008e 00BF     		nop
 1755              	.L93:
1021:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   }
1022:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
1023:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   /* Release Lock */
1024:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   __HAL_UNLOCK(hdma);
 1756              		.loc 1 1024 0
 1757 0090 FB68     		ldr	r3, [r7, #12]
 1758 0092 0022     		movs	r2, #0
 1759 0094 83F83420 		strb	r2, [r3, #52]
1025:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   
1026:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   return status;
 1760              		.loc 1 1026 0
 1761 0098 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 1762              	.L82:
1027:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** }
 1763              		.loc 1 1027 0
 1764 009a 1846     		mov	r0, r3
 1765 009c 1C37     		adds	r7, r7, #28
 1766              	.LCFI44:
 1767              		.cfi_def_cfa_offset 4
 1768 009e BD46     		mov	sp, r7
 1769              	.LCFI45:
 1770              		.cfi_def_cfa_register 13
 1771              		@ sp needed
 1772 00a0 5DF8047B 		ldr	r7, [sp], #4
ARM GAS  /tmp/ccUjksEu.s 			page 50


 1773              	.LCFI46:
 1774              		.cfi_restore 7
 1775              		.cfi_def_cfa_offset 0
 1776 00a4 7047     		bx	lr
 1777              		.cfi_endproc
 1778              	.LFE132:
 1780 00a6 00BF     		.section	.text.HAL_DMA_UnRegisterCallback,"ax",%progbits
 1781              		.align	1
 1782              		.global	HAL_DMA_UnRegisterCallback
 1783              		.syntax unified
 1784              		.thumb
 1785              		.thumb_func
 1786              		.fpu fpv4-sp-d16
 1788              	HAL_DMA_UnRegisterCallback:
 1789              	.LFB133:
1028:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
1029:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** /**
1030:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @brief  UnRegister callbacks
1031:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @param  hdma                 pointer to a DMA_HandleTypeDef structure that contains
1032:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   *                               the configuration information for the specified DMA Stream.
1033:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @param  CallbackID           User Callback identifer
1034:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   *                               a HAL_DMA_CallbackIDTypeDef ENUM as parameter.
1035:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @retval HAL status
1036:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   */              
1037:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** HAL_StatusTypeDef HAL_DMA_UnRegisterCallback(DMA_HandleTypeDef *hdma, HAL_DMA_CallbackIDTypeDef Cal
1038:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** {
 1790              		.loc 1 1038 0
 1791              		.cfi_startproc
 1792              		@ args = 0, pretend = 0, frame = 16
 1793              		@ frame_needed = 1, uses_anonymous_args = 0
 1794              		@ link register save eliminated.
 1795 0000 80B4     		push	{r7}
 1796              	.LCFI47:
 1797              		.cfi_def_cfa_offset 4
 1798              		.cfi_offset 7, -4
 1799 0002 85B0     		sub	sp, sp, #20
 1800              	.LCFI48:
 1801              		.cfi_def_cfa_offset 24
 1802 0004 00AF     		add	r7, sp, #0
 1803              	.LCFI49:
 1804              		.cfi_def_cfa_register 7
 1805 0006 7860     		str	r0, [r7, #4]
 1806 0008 0B46     		mov	r3, r1
 1807 000a FB70     		strb	r3, [r7, #3]
1039:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   HAL_StatusTypeDef status = HAL_OK;
 1808              		.loc 1 1039 0
 1809 000c 0023     		movs	r3, #0
 1810 000e FB73     		strb	r3, [r7, #15]
1040:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   
1041:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   /* Process locked */
1042:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   __HAL_LOCK(hdma);
 1811              		.loc 1 1042 0
 1812 0010 7B68     		ldr	r3, [r7, #4]
 1813 0012 93F83430 		ldrb	r3, [r3, #52]	@ zero_extendqisi2
 1814 0016 012B     		cmp	r3, #1
 1815 0018 01D1     		bne	.L96
 1816              		.loc 1 1042 0 is_stmt 0 discriminator 1
ARM GAS  /tmp/ccUjksEu.s 			page 51


 1817 001a 0223     		movs	r3, #2
 1818 001c 54E0     		b	.L97
 1819              	.L96:
 1820              		.loc 1 1042 0 discriminator 2
 1821 001e 7B68     		ldr	r3, [r7, #4]
 1822 0020 0122     		movs	r2, #1
 1823 0022 83F83420 		strb	r2, [r3, #52]
1043:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   
1044:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   if(HAL_DMA_STATE_READY == hdma->State)
 1824              		.loc 1 1044 0 is_stmt 1 discriminator 2
 1825 0026 7B68     		ldr	r3, [r7, #4]
 1826 0028 93F83530 		ldrb	r3, [r3, #53]
 1827 002c DBB2     		uxtb	r3, r3
 1828 002e 012B     		cmp	r3, #1
 1829 0030 43D1     		bne	.L98
1045:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   {
1046:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     switch (CallbackID)
 1830              		.loc 1 1046 0
 1831 0032 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1832 0034 062B     		cmp	r3, #6
 1833 0036 3CD8     		bhi	.L99
 1834 0038 01A2     		adr	r2, .L101
 1835 003a 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1836 003e 00BF     		.p2align 2
 1837              	.L101:
 1838 0040 5D000000 		.word	.L100+1
 1839 0044 65000000 		.word	.L102+1
 1840 0048 6D000000 		.word	.L103+1
 1841 004c 75000000 		.word	.L104+1
 1842 0050 7D000000 		.word	.L105+1
 1843 0054 85000000 		.word	.L106+1
 1844 0058 8D000000 		.word	.L107+1
 1845              		.p2align 1
 1846              	.L100:
1047:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     {
1048:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     case  HAL_DMA_XFER_CPLT_CB_ID:
1049:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       hdma->XferCpltCallback = NULL;
 1847              		.loc 1 1049 0
 1848 005c 7B68     		ldr	r3, [r7, #4]
 1849 005e 0022     		movs	r2, #0
 1850 0060 DA63     		str	r2, [r3, #60]
1050:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       break;
 1851              		.loc 1 1050 0
 1852 0062 2CE0     		b	.L109
 1853              	.L102:
1051:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       
1052:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     case  HAL_DMA_XFER_HALFCPLT_CB_ID:
1053:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       hdma->XferHalfCpltCallback = NULL;
 1854              		.loc 1 1053 0
 1855 0064 7B68     		ldr	r3, [r7, #4]
 1856 0066 0022     		movs	r2, #0
 1857 0068 1A64     		str	r2, [r3, #64]
1054:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       break;
 1858              		.loc 1 1054 0
 1859 006a 28E0     		b	.L109
 1860              	.L103:
1055:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       
ARM GAS  /tmp/ccUjksEu.s 			page 52


1056:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     case  HAL_DMA_XFER_M1CPLT_CB_ID:
1057:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       hdma->XferM1CpltCallback = NULL;
 1861              		.loc 1 1057 0
 1862 006c 7B68     		ldr	r3, [r7, #4]
 1863 006e 0022     		movs	r2, #0
 1864 0070 5A64     		str	r2, [r3, #68]
1058:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       break;
 1865              		.loc 1 1058 0
 1866 0072 24E0     		b	.L109
 1867              	.L104:
1059:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       
1060:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     case  HAL_DMA_XFER_M1HALFCPLT_CB_ID:
1061:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       hdma->XferM1HalfCpltCallback = NULL;
 1868              		.loc 1 1061 0
 1869 0074 7B68     		ldr	r3, [r7, #4]
 1870 0076 0022     		movs	r2, #0
 1871 0078 9A64     		str	r2, [r3, #72]
1062:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       break;
 1872              		.loc 1 1062 0
 1873 007a 20E0     		b	.L109
 1874              	.L105:
1063:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       
1064:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     case  HAL_DMA_XFER_ERROR_CB_ID:
1065:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       hdma->XferErrorCallback = NULL;
 1875              		.loc 1 1065 0
 1876 007c 7B68     		ldr	r3, [r7, #4]
 1877 007e 0022     		movs	r2, #0
 1878 0080 DA64     		str	r2, [r3, #76]
1066:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       break;
 1879              		.loc 1 1066 0
 1880 0082 1CE0     		b	.L109
 1881              	.L106:
1067:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       
1068:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     case  HAL_DMA_XFER_ABORT_CB_ID:
1069:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       hdma->XferAbortCallback = NULL;
 1882              		.loc 1 1069 0
 1883 0084 7B68     		ldr	r3, [r7, #4]
 1884 0086 0022     		movs	r2, #0
 1885 0088 1A65     		str	r2, [r3, #80]
1070:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       break; 
 1886              		.loc 1 1070 0
 1887 008a 18E0     		b	.L109
 1888              	.L107:
1071:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       
1072:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     case   HAL_DMA_XFER_ALL_CB_ID:
1073:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       hdma->XferCpltCallback = NULL;
 1889              		.loc 1 1073 0
 1890 008c 7B68     		ldr	r3, [r7, #4]
 1891 008e 0022     		movs	r2, #0
 1892 0090 DA63     		str	r2, [r3, #60]
1074:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       hdma->XferHalfCpltCallback = NULL;
 1893              		.loc 1 1074 0
 1894 0092 7B68     		ldr	r3, [r7, #4]
 1895 0094 0022     		movs	r2, #0
 1896 0096 1A64     		str	r2, [r3, #64]
1075:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       hdma->XferM1CpltCallback = NULL;
 1897              		.loc 1 1075 0
ARM GAS  /tmp/ccUjksEu.s 			page 53


 1898 0098 7B68     		ldr	r3, [r7, #4]
 1899 009a 0022     		movs	r2, #0
 1900 009c 5A64     		str	r2, [r3, #68]
1076:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       hdma->XferM1HalfCpltCallback = NULL;
 1901              		.loc 1 1076 0
 1902 009e 7B68     		ldr	r3, [r7, #4]
 1903 00a0 0022     		movs	r2, #0
 1904 00a2 9A64     		str	r2, [r3, #72]
1077:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       hdma->XferErrorCallback = NULL;
 1905              		.loc 1 1077 0
 1906 00a4 7B68     		ldr	r3, [r7, #4]
 1907 00a6 0022     		movs	r2, #0
 1908 00a8 DA64     		str	r2, [r3, #76]
1078:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       hdma->XferAbortCallback = NULL;
 1909              		.loc 1 1078 0
 1910 00aa 7B68     		ldr	r3, [r7, #4]
 1911 00ac 0022     		movs	r2, #0
 1912 00ae 1A65     		str	r2, [r3, #80]
1079:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       break; 
 1913              		.loc 1 1079 0
 1914 00b0 05E0     		b	.L109
 1915              	.L99:
1080:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       
1081:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     default:
1082:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       status = HAL_ERROR;
 1916              		.loc 1 1082 0
 1917 00b2 0123     		movs	r3, #1
 1918 00b4 FB73     		strb	r3, [r7, #15]
1083:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       break;
 1919              		.loc 1 1083 0
 1920 00b6 00BF     		nop
 1921 00b8 01E0     		b	.L109
 1922              	.L98:
1084:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     }
1085:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   }
1086:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   else
1087:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   {
1088:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     status = HAL_ERROR;
 1923              		.loc 1 1088 0
 1924 00ba 0123     		movs	r3, #1
 1925 00bc FB73     		strb	r3, [r7, #15]
 1926              	.L109:
1089:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   }
1090:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   
1091:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   /* Release Lock */
1092:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   __HAL_UNLOCK(hdma);
 1927              		.loc 1 1092 0
 1928 00be 7B68     		ldr	r3, [r7, #4]
 1929 00c0 0022     		movs	r2, #0
 1930 00c2 83F83420 		strb	r2, [r3, #52]
1093:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   
1094:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   return status;
 1931              		.loc 1 1094 0
 1932 00c6 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1933              	.L97:
1095:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** }
 1934              		.loc 1 1095 0
ARM GAS  /tmp/ccUjksEu.s 			page 54


 1935 00c8 1846     		mov	r0, r3
 1936 00ca 1437     		adds	r7, r7, #20
 1937              	.LCFI50:
 1938              		.cfi_def_cfa_offset 4
 1939 00cc BD46     		mov	sp, r7
 1940              	.LCFI51:
 1941              		.cfi_def_cfa_register 13
 1942              		@ sp needed
 1943 00ce 5DF8047B 		ldr	r7, [sp], #4
 1944              	.LCFI52:
 1945              		.cfi_restore 7
 1946              		.cfi_def_cfa_offset 0
 1947 00d2 7047     		bx	lr
 1948              		.cfi_endproc
 1949              	.LFE133:
 1951              		.section	.text.HAL_DMA_GetState,"ax",%progbits
 1952              		.align	1
 1953              		.global	HAL_DMA_GetState
 1954              		.syntax unified
 1955              		.thumb
 1956              		.thumb_func
 1957              		.fpu fpv4-sp-d16
 1959              	HAL_DMA_GetState:
 1960              	.LFB134:
1096:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
1097:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** /**
1098:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @}
1099:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   */
1100:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
1101:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** /** @addtogroup DMA_Exported_Functions_Group3
1102:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   *
1103:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** @verbatim
1104:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****  ===============================================================================
1105:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****                     ##### State and Errors functions #####
1106:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****  ===============================================================================
1107:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     [..]
1108:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     This subsection provides functions allowing to
1109:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       (+) Check the DMA state
1110:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       (+) Get error code
1111:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
1112:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** @endverbatim
1113:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @{
1114:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   */
1115:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
1116:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** /**
1117:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @brief  Returns the DMA state.
1118:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @param  hdma pointer to a DMA_HandleTypeDef structure that contains
1119:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   *               the configuration information for the specified DMA Stream.
1120:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @retval HAL state
1121:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   */
1122:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** HAL_DMA_StateTypeDef HAL_DMA_GetState(DMA_HandleTypeDef *hdma)
1123:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** {
 1961              		.loc 1 1123 0
 1962              		.cfi_startproc
 1963              		@ args = 0, pretend = 0, frame = 8
 1964              		@ frame_needed = 1, uses_anonymous_args = 0
 1965              		@ link register save eliminated.
ARM GAS  /tmp/ccUjksEu.s 			page 55


 1966 0000 80B4     		push	{r7}
 1967              	.LCFI53:
 1968              		.cfi_def_cfa_offset 4
 1969              		.cfi_offset 7, -4
 1970 0002 83B0     		sub	sp, sp, #12
 1971              	.LCFI54:
 1972              		.cfi_def_cfa_offset 16
 1973 0004 00AF     		add	r7, sp, #0
 1974              	.LCFI55:
 1975              		.cfi_def_cfa_register 7
 1976 0006 7860     		str	r0, [r7, #4]
1124:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   return hdma->State;
 1977              		.loc 1 1124 0
 1978 0008 7B68     		ldr	r3, [r7, #4]
 1979 000a 93F83530 		ldrb	r3, [r3, #53]
 1980 000e DBB2     		uxtb	r3, r3
1125:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** }
 1981              		.loc 1 1125 0
 1982 0010 1846     		mov	r0, r3
 1983 0012 0C37     		adds	r7, r7, #12
 1984              	.LCFI56:
 1985              		.cfi_def_cfa_offset 4
 1986 0014 BD46     		mov	sp, r7
 1987              	.LCFI57:
 1988              		.cfi_def_cfa_register 13
 1989              		@ sp needed
 1990 0016 5DF8047B 		ldr	r7, [sp], #4
 1991              	.LCFI58:
 1992              		.cfi_restore 7
 1993              		.cfi_def_cfa_offset 0
 1994 001a 7047     		bx	lr
 1995              		.cfi_endproc
 1996              	.LFE134:
 1998              		.section	.text.HAL_DMA_GetError,"ax",%progbits
 1999              		.align	1
 2000              		.global	HAL_DMA_GetError
 2001              		.syntax unified
 2002              		.thumb
 2003              		.thumb_func
 2004              		.fpu fpv4-sp-d16
 2006              	HAL_DMA_GetError:
 2007              	.LFB135:
1126:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
1127:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** /**
1128:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @brief  Return the DMA error code
1129:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @param  hdma  pointer to a DMA_HandleTypeDef structure that contains
1130:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   *              the configuration information for the specified DMA Stream.
1131:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @retval DMA Error Code
1132:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   */
1133:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** uint32_t HAL_DMA_GetError(DMA_HandleTypeDef *hdma)
1134:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** {
 2008              		.loc 1 1134 0
 2009              		.cfi_startproc
 2010              		@ args = 0, pretend = 0, frame = 8
 2011              		@ frame_needed = 1, uses_anonymous_args = 0
 2012              		@ link register save eliminated.
 2013 0000 80B4     		push	{r7}
ARM GAS  /tmp/ccUjksEu.s 			page 56


 2014              	.LCFI59:
 2015              		.cfi_def_cfa_offset 4
 2016              		.cfi_offset 7, -4
 2017 0002 83B0     		sub	sp, sp, #12
 2018              	.LCFI60:
 2019              		.cfi_def_cfa_offset 16
 2020 0004 00AF     		add	r7, sp, #0
 2021              	.LCFI61:
 2022              		.cfi_def_cfa_register 7
 2023 0006 7860     		str	r0, [r7, #4]
1135:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   return hdma->ErrorCode;
 2024              		.loc 1 1135 0
 2025 0008 7B68     		ldr	r3, [r7, #4]
 2026 000a 5B6D     		ldr	r3, [r3, #84]
1136:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** }
 2027              		.loc 1 1136 0
 2028 000c 1846     		mov	r0, r3
 2029 000e 0C37     		adds	r7, r7, #12
 2030              	.LCFI62:
 2031              		.cfi_def_cfa_offset 4
 2032 0010 BD46     		mov	sp, r7
 2033              	.LCFI63:
 2034              		.cfi_def_cfa_register 13
 2035              		@ sp needed
 2036 0012 5DF8047B 		ldr	r7, [sp], #4
 2037              	.LCFI64:
 2038              		.cfi_restore 7
 2039              		.cfi_def_cfa_offset 0
 2040 0016 7047     		bx	lr
 2041              		.cfi_endproc
 2042              	.LFE135:
 2044              		.section	.text.DMA_SetConfig,"ax",%progbits
 2045              		.align	1
 2046              		.syntax unified
 2047              		.thumb
 2048              		.thumb_func
 2049              		.fpu fpv4-sp-d16
 2051              	DMA_SetConfig:
 2052              	.LFB136:
1137:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
1138:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** /**
1139:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @}
1140:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   */
1141:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
1142:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** /**
1143:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @}
1144:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   */
1145:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
1146:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** /** @addtogroup DMA_Private_Functions
1147:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @{
1148:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   */
1149:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
1150:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** /**
1151:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @brief  Sets the DMA Transfer parameter.
1152:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @param  hdma       pointer to a DMA_HandleTypeDef structure that contains
1153:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   *                     the configuration information for the specified DMA Stream.
1154:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @param  SrcAddress The source memory Buffer address
ARM GAS  /tmp/ccUjksEu.s 			page 57


1155:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @param  DstAddress The destination memory Buffer address
1156:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @param  DataLength The length of data to be transferred from source to destination
1157:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @retval HAL status
1158:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   */
1159:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** static void DMA_SetConfig(DMA_HandleTypeDef *hdma, uint32_t SrcAddress, uint32_t DstAddress, uint32
1160:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** {
 2053              		.loc 1 1160 0
 2054              		.cfi_startproc
 2055              		@ args = 0, pretend = 0, frame = 16
 2056              		@ frame_needed = 1, uses_anonymous_args = 0
 2057              		@ link register save eliminated.
 2058 0000 80B4     		push	{r7}
 2059              	.LCFI65:
 2060              		.cfi_def_cfa_offset 4
 2061              		.cfi_offset 7, -4
 2062 0002 85B0     		sub	sp, sp, #20
 2063              	.LCFI66:
 2064              		.cfi_def_cfa_offset 24
 2065 0004 00AF     		add	r7, sp, #0
 2066              	.LCFI67:
 2067              		.cfi_def_cfa_register 7
 2068 0006 F860     		str	r0, [r7, #12]
 2069 0008 B960     		str	r1, [r7, #8]
 2070 000a 7A60     		str	r2, [r7, #4]
 2071 000c 3B60     		str	r3, [r7]
1161:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   /* Clear DBM bit */
1162:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   hdma->Instance->CR &= (uint32_t)(~DMA_SxCR_DBM);
 2072              		.loc 1 1162 0
 2073 000e FB68     		ldr	r3, [r7, #12]
 2074 0010 1B68     		ldr	r3, [r3]
 2075 0012 FA68     		ldr	r2, [r7, #12]
 2076 0014 1268     		ldr	r2, [r2]
 2077 0016 1268     		ldr	r2, [r2]
 2078 0018 22F48022 		bic	r2, r2, #262144
 2079 001c 1A60     		str	r2, [r3]
1163:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
1164:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   /* Configure DMA Stream data length */
1165:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   hdma->Instance->NDTR = DataLength;
 2080              		.loc 1 1165 0
 2081 001e FB68     		ldr	r3, [r7, #12]
 2082 0020 1B68     		ldr	r3, [r3]
 2083 0022 3A68     		ldr	r2, [r7]
 2084 0024 5A60     		str	r2, [r3, #4]
1166:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
1167:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   /* Memory to Peripheral */
1168:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   if((hdma->Init.Direction) == DMA_MEMORY_TO_PERIPH)
 2085              		.loc 1 1168 0
 2086 0026 FB68     		ldr	r3, [r7, #12]
 2087 0028 9B68     		ldr	r3, [r3, #8]
 2088 002a 402B     		cmp	r3, #64
 2089 002c 08D1     		bne	.L115
1169:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   {
1170:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     /* Configure DMA Stream destination address */
1171:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     hdma->Instance->PAR = DstAddress;
 2090              		.loc 1 1171 0
 2091 002e FB68     		ldr	r3, [r7, #12]
 2092 0030 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/ccUjksEu.s 			page 58


 2093 0032 7A68     		ldr	r2, [r7, #4]
 2094 0034 9A60     		str	r2, [r3, #8]
1172:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
1173:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     /* Configure DMA Stream source address */
1174:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     hdma->Instance->M0AR = SrcAddress;
 2095              		.loc 1 1174 0
 2096 0036 FB68     		ldr	r3, [r7, #12]
 2097 0038 1B68     		ldr	r3, [r3]
 2098 003a BA68     		ldr	r2, [r7, #8]
 2099 003c DA60     		str	r2, [r3, #12]
1175:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   }
1176:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   /* Peripheral to Memory */
1177:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   else
1178:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   {
1179:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     /* Configure DMA Stream source address */
1180:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     hdma->Instance->PAR = SrcAddress;
1181:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
1182:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     /* Configure DMA Stream destination address */
1183:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     hdma->Instance->M0AR = DstAddress;
1184:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   }
1185:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** }
 2100              		.loc 1 1185 0
 2101 003e 07E0     		b	.L117
 2102              	.L115:
1180:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 2103              		.loc 1 1180 0
 2104 0040 FB68     		ldr	r3, [r7, #12]
 2105 0042 1B68     		ldr	r3, [r3]
 2106 0044 BA68     		ldr	r2, [r7, #8]
 2107 0046 9A60     		str	r2, [r3, #8]
1183:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   }
 2108              		.loc 1 1183 0
 2109 0048 FB68     		ldr	r3, [r7, #12]
 2110 004a 1B68     		ldr	r3, [r3]
 2111 004c 7A68     		ldr	r2, [r7, #4]
 2112 004e DA60     		str	r2, [r3, #12]
 2113              	.L117:
 2114              		.loc 1 1185 0
 2115 0050 00BF     		nop
 2116 0052 1437     		adds	r7, r7, #20
 2117              	.LCFI68:
 2118              		.cfi_def_cfa_offset 4
 2119 0054 BD46     		mov	sp, r7
 2120              	.LCFI69:
 2121              		.cfi_def_cfa_register 13
 2122              		@ sp needed
 2123 0056 5DF8047B 		ldr	r7, [sp], #4
 2124              	.LCFI70:
 2125              		.cfi_restore 7
 2126              		.cfi_def_cfa_offset 0
 2127 005a 7047     		bx	lr
 2128              		.cfi_endproc
 2129              	.LFE136:
 2131              		.section	.text.DMA_CalcBaseAndBitshift,"ax",%progbits
 2132              		.align	1
 2133              		.syntax unified
 2134              		.thumb
ARM GAS  /tmp/ccUjksEu.s 			page 59


 2135              		.thumb_func
 2136              		.fpu fpv4-sp-d16
 2138              	DMA_CalcBaseAndBitshift:
 2139              	.LFB137:
1186:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
1187:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** /**
1188:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @brief  Returns the DMA Stream base address depending on stream number
1189:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @param  hdma       pointer to a DMA_HandleTypeDef structure that contains
1190:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   *                     the configuration information for the specified DMA Stream. 
1191:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @retval Stream base address
1192:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   */
1193:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** static uint32_t DMA_CalcBaseAndBitshift(DMA_HandleTypeDef *hdma)
1194:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** {
 2140              		.loc 1 1194 0
 2141              		.cfi_startproc
 2142              		@ args = 0, pretend = 0, frame = 16
 2143              		@ frame_needed = 1, uses_anonymous_args = 0
 2144              		@ link register save eliminated.
 2145 0000 80B4     		push	{r7}
 2146              	.LCFI71:
 2147              		.cfi_def_cfa_offset 4
 2148              		.cfi_offset 7, -4
 2149 0002 85B0     		sub	sp, sp, #20
 2150              	.LCFI72:
 2151              		.cfi_def_cfa_offset 24
 2152 0004 00AF     		add	r7, sp, #0
 2153              	.LCFI73:
 2154              		.cfi_def_cfa_register 7
 2155 0006 7860     		str	r0, [r7, #4]
1195:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   uint32_t stream_number = (((uint32_t)hdma->Instance & 0xFFU) - 16U) / 24U;
 2156              		.loc 1 1195 0
 2157 0008 7B68     		ldr	r3, [r7, #4]
 2158 000a 1B68     		ldr	r3, [r3]
 2159 000c DBB2     		uxtb	r3, r3
 2160 000e 103B     		subs	r3, r3, #16
 2161 0010 144A     		ldr	r2, .L122
 2162 0012 A2FB0323 		umull	r2, r3, r2, r3
 2163 0016 1B09     		lsrs	r3, r3, #4
 2164 0018 FB60     		str	r3, [r7, #12]
1196:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   
1197:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   /* lookup table for necessary bitshift of flags within status registers */
1198:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   static const uint8_t flagBitshiftOffset[8U] = {0U, 6U, 16U, 22U, 0U, 6U, 16U, 22U};
1199:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   hdma->StreamIndex = flagBitshiftOffset[stream_number];
 2165              		.loc 1 1199 0
 2166 001a 134A     		ldr	r2, .L122+4
 2167 001c FB68     		ldr	r3, [r7, #12]
 2168 001e 1344     		add	r3, r3, r2
 2169 0020 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2170 0022 1A46     		mov	r2, r3
 2171 0024 7B68     		ldr	r3, [r7, #4]
 2172 0026 DA65     		str	r2, [r3, #92]
1200:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   
1201:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   if (stream_number > 3U)
 2173              		.loc 1 1201 0
 2174 0028 FB68     		ldr	r3, [r7, #12]
 2175 002a 032B     		cmp	r3, #3
 2176 002c 09D9     		bls	.L119
ARM GAS  /tmp/ccUjksEu.s 			page 60


1202:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   {
1203:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     /* return pointer to HISR and HIFCR */
1204:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     hdma->StreamBaseAddress = (((uint32_t)hdma->Instance & (uint32_t)(~0x3FFU)) + 4U);
 2177              		.loc 1 1204 0
 2178 002e 7B68     		ldr	r3, [r7, #4]
 2179 0030 1B68     		ldr	r3, [r3]
 2180 0032 23F47F73 		bic	r3, r3, #1020
 2181 0036 23F00303 		bic	r3, r3, #3
 2182 003a 1A1D     		adds	r2, r3, #4
 2183 003c 7B68     		ldr	r3, [r7, #4]
 2184 003e 9A65     		str	r2, [r3, #88]
 2185 0040 07E0     		b	.L120
 2186              	.L119:
1205:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   }
1206:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   else
1207:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   {
1208:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     /* return pointer to LISR and LIFCR */
1209:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     hdma->StreamBaseAddress = ((uint32_t)hdma->Instance & (uint32_t)(~0x3FFU));
 2187              		.loc 1 1209 0
 2188 0042 7B68     		ldr	r3, [r7, #4]
 2189 0044 1B68     		ldr	r3, [r3]
 2190 0046 23F47F73 		bic	r3, r3, #1020
 2191 004a 23F00303 		bic	r3, r3, #3
 2192 004e 7A68     		ldr	r2, [r7, #4]
 2193 0050 9365     		str	r3, [r2, #88]
 2194              	.L120:
1210:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   }
1211:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   
1212:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   return hdma->StreamBaseAddress;
 2195              		.loc 1 1212 0
 2196 0052 7B68     		ldr	r3, [r7, #4]
 2197 0054 9B6D     		ldr	r3, [r3, #88]
1213:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** }
 2198              		.loc 1 1213 0
 2199 0056 1846     		mov	r0, r3
 2200 0058 1437     		adds	r7, r7, #20
 2201              	.LCFI74:
 2202              		.cfi_def_cfa_offset 4
 2203 005a BD46     		mov	sp, r7
 2204              	.LCFI75:
 2205              		.cfi_def_cfa_register 13
 2206              		@ sp needed
 2207 005c 5DF8047B 		ldr	r7, [sp], #4
 2208              	.LCFI76:
 2209              		.cfi_restore 7
 2210              		.cfi_def_cfa_offset 0
 2211 0060 7047     		bx	lr
 2212              	.L123:
 2213 0062 00BF     		.align	2
 2214              	.L122:
 2215 0064 ABAAAAAA 		.word	-1431655765
 2216 0068 00000000 		.word	flagBitshiftOffset.8157
 2217              		.cfi_endproc
 2218              	.LFE137:
 2220              		.section	.text.DMA_CheckFifoParam,"ax",%progbits
 2221              		.align	1
 2222              		.syntax unified
ARM GAS  /tmp/ccUjksEu.s 			page 61


 2223              		.thumb
 2224              		.thumb_func
 2225              		.fpu fpv4-sp-d16
 2227              	DMA_CheckFifoParam:
 2228              	.LFB138:
1214:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
1215:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** /**
1216:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @brief  Check compatibility between FIFO threshold level and size of the memory burst
1217:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @param  hdma       pointer to a DMA_HandleTypeDef structure that contains
1218:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   *                     the configuration information for the specified DMA Stream. 
1219:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @retval HAL status
1220:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   */
1221:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** static HAL_StatusTypeDef DMA_CheckFifoParam(DMA_HandleTypeDef *hdma)
1222:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** {
 2229              		.loc 1 1222 0
 2230              		.cfi_startproc
 2231              		@ args = 0, pretend = 0, frame = 16
 2232              		@ frame_needed = 1, uses_anonymous_args = 0
 2233              		@ link register save eliminated.
 2234 0000 80B4     		push	{r7}
 2235              	.LCFI77:
 2236              		.cfi_def_cfa_offset 4
 2237              		.cfi_offset 7, -4
 2238 0002 85B0     		sub	sp, sp, #20
 2239              	.LCFI78:
 2240              		.cfi_def_cfa_offset 24
 2241 0004 00AF     		add	r7, sp, #0
 2242              	.LCFI79:
 2243              		.cfi_def_cfa_register 7
 2244 0006 7860     		str	r0, [r7, #4]
1223:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   HAL_StatusTypeDef status = HAL_OK;
 2245              		.loc 1 1223 0
 2246 0008 0023     		movs	r3, #0
 2247 000a FB73     		strb	r3, [r7, #15]
1224:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   uint32_t tmp = hdma->Init.FIFOThreshold;
 2248              		.loc 1 1224 0
 2249 000c 7B68     		ldr	r3, [r7, #4]
 2250 000e 9B6A     		ldr	r3, [r3, #40]
 2251 0010 BB60     		str	r3, [r7, #8]
1225:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   
1226:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   /* Memory Data size equal to Byte */
1227:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   if(hdma->Init.MemDataAlignment == DMA_MDATAALIGN_BYTE)
 2252              		.loc 1 1227 0
 2253 0012 7B68     		ldr	r3, [r7, #4]
 2254 0014 9B69     		ldr	r3, [r3, #24]
 2255 0016 002B     		cmp	r3, #0
 2256 0018 1FD1     		bne	.L125
1228:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   {
1229:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     switch (tmp)
 2257              		.loc 1 1229 0
 2258 001a BB68     		ldr	r3, [r7, #8]
 2259 001c 032B     		cmp	r3, #3
 2260 001e 55D8     		bhi	.L149
 2261 0020 01A2     		adr	r2, .L128
 2262 0022 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 2263 0026 00BF     		.p2align 2
 2264              	.L128:
ARM GAS  /tmp/ccUjksEu.s 			page 62


 2265 0028 39000000 		.word	.L127+1
 2266 002c 4B000000 		.word	.L129+1
 2267 0030 39000000 		.word	.L127+1
 2268 0034 CD000000 		.word	.L149+1
 2269              		.p2align 1
 2270              	.L127:
1230:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     {
1231:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     case DMA_FIFO_THRESHOLD_1QUARTERFULL:
1232:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     case DMA_FIFO_THRESHOLD_3QUARTERSFULL:
1233:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       if ((hdma->Init.MemBurst & DMA_SxCR_MBURST_1) == DMA_SxCR_MBURST_1)
 2271              		.loc 1 1233 0
 2272 0038 7B68     		ldr	r3, [r7, #4]
 2273 003a DB6A     		ldr	r3, [r3, #44]
 2274 003c 03F08073 		and	r3, r3, #16777216
 2275 0040 002B     		cmp	r3, #0
 2276 0042 45D0     		beq	.L150
1234:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       {
1235:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         status = HAL_ERROR;
 2277              		.loc 1 1235 0
 2278 0044 0123     		movs	r3, #1
 2279 0046 FB73     		strb	r3, [r7, #15]
1236:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       }
1237:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       break;
 2280              		.loc 1 1237 0
 2281 0048 42E0     		b	.L150
 2282              	.L129:
1238:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     case DMA_FIFO_THRESHOLD_HALFFULL:
1239:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       if (hdma->Init.MemBurst == DMA_MBURST_INC16)
 2283              		.loc 1 1239 0
 2284 004a 7B68     		ldr	r3, [r7, #4]
 2285 004c DB6A     		ldr	r3, [r3, #44]
 2286 004e B3F1C07F 		cmp	r3, #25165824
 2287 0052 3FD1     		bne	.L151
1240:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       {
1241:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         status = HAL_ERROR;
 2288              		.loc 1 1241 0
 2289 0054 0123     		movs	r3, #1
 2290 0056 FB73     		strb	r3, [r7, #15]
1242:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       }
1243:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       break;
 2291              		.loc 1 1243 0
 2292 0058 3CE0     		b	.L151
 2293              	.L125:
1244:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     case DMA_FIFO_THRESHOLD_FULL:
1245:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       break;
1246:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     default:
1247:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       break;
1248:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     }
1249:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   }
1250:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   
1251:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   /* Memory Data size equal to Half-Word */
1252:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   else if (hdma->Init.MemDataAlignment == DMA_MDATAALIGN_HALFWORD)
 2294              		.loc 1 1252 0
 2295 005a 7B68     		ldr	r3, [r7, #4]
 2296 005c 9B69     		ldr	r3, [r3, #24]
 2297 005e B3F5005F 		cmp	r3, #8192
 2298 0062 21D1     		bne	.L135
ARM GAS  /tmp/ccUjksEu.s 			page 63


1253:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   {
1254:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     switch (tmp)
 2299              		.loc 1 1254 0
 2300 0064 BB68     		ldr	r3, [r7, #8]
 2301 0066 032B     		cmp	r3, #3
 2302 0068 36D8     		bhi	.L152
 2303 006a 01A2     		adr	r2, .L138
 2304 006c 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 2305              		.p2align 2
 2306              	.L138:
 2307 0070 81000000 		.word	.L137+1
 2308 0074 87000000 		.word	.L139+1
 2309 0078 81000000 		.word	.L137+1
 2310 007c 99000000 		.word	.L140+1
 2311              		.p2align 1
 2312              	.L137:
1255:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     {
1256:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     case DMA_FIFO_THRESHOLD_1QUARTERFULL:
1257:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     case DMA_FIFO_THRESHOLD_3QUARTERSFULL:
1258:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       status = HAL_ERROR;
 2313              		.loc 1 1258 0
 2314 0080 0123     		movs	r3, #1
 2315 0082 FB73     		strb	r3, [r7, #15]
1259:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       break;
 2316              		.loc 1 1259 0
 2317 0084 2FE0     		b	.L134
 2318              	.L139:
1260:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     case DMA_FIFO_THRESHOLD_HALFFULL:
1261:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       if ((hdma->Init.MemBurst & DMA_SxCR_MBURST_1) == DMA_SxCR_MBURST_1)
 2319              		.loc 1 1261 0
 2320 0086 7B68     		ldr	r3, [r7, #4]
 2321 0088 DB6A     		ldr	r3, [r3, #44]
 2322 008a 03F08073 		and	r3, r3, #16777216
 2323 008e 002B     		cmp	r3, #0
 2324 0090 24D0     		beq	.L153
1262:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       {
1263:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         status = HAL_ERROR;
 2325              		.loc 1 1263 0
 2326 0092 0123     		movs	r3, #1
 2327 0094 FB73     		strb	r3, [r7, #15]
1264:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       }
1265:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       break;
 2328              		.loc 1 1265 0
 2329 0096 21E0     		b	.L153
 2330              	.L140:
1266:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     case DMA_FIFO_THRESHOLD_FULL:
1267:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       if (hdma->Init.MemBurst == DMA_MBURST_INC16)
 2331              		.loc 1 1267 0
 2332 0098 7B68     		ldr	r3, [r7, #4]
 2333 009a DB6A     		ldr	r3, [r3, #44]
 2334 009c B3F1C07F 		cmp	r3, #25165824
 2335 00a0 1ED1     		bne	.L154
1268:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       {
1269:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         status = HAL_ERROR;
 2336              		.loc 1 1269 0
 2337 00a2 0123     		movs	r3, #1
 2338 00a4 FB73     		strb	r3, [r7, #15]
ARM GAS  /tmp/ccUjksEu.s 			page 64


1270:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       }
1271:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       break;   
 2339              		.loc 1 1271 0
 2340 00a6 1BE0     		b	.L154
 2341              	.L135:
1272:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     default:
1273:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       break;
1274:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     }
1275:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   }
1276:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   
1277:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   /* Memory Data size equal to Word */
1278:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   else
1279:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   {
1280:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     switch (tmp)
 2342              		.loc 1 1280 0
 2343 00a8 BB68     		ldr	r3, [r7, #8]
 2344 00aa 022B     		cmp	r3, #2
 2345 00ac 02D9     		bls	.L145
 2346 00ae 032B     		cmp	r3, #3
 2347 00b0 03D0     		beq	.L146
1281:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     {
1282:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     case DMA_FIFO_THRESHOLD_1QUARTERFULL:
1283:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     case DMA_FIFO_THRESHOLD_HALFFULL:
1284:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     case DMA_FIFO_THRESHOLD_3QUARTERSFULL:
1285:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       status = HAL_ERROR;
1286:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       break;
1287:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     case DMA_FIFO_THRESHOLD_FULL:
1288:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       if ((hdma->Init.MemBurst & DMA_SxCR_MBURST_1) == DMA_SxCR_MBURST_1)
1289:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       {
1290:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         status = HAL_ERROR;
1291:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       }
1292:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       break;
1293:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     default:
1294:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       break;
 2348              		.loc 1 1294 0
 2349 00b2 18E0     		b	.L134
 2350              	.L145:
1285:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       break;
 2351              		.loc 1 1285 0
 2352 00b4 0123     		movs	r3, #1
 2353 00b6 FB73     		strb	r3, [r7, #15]
1286:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     case DMA_FIFO_THRESHOLD_FULL:
 2354              		.loc 1 1286 0
 2355 00b8 15E0     		b	.L134
 2356              	.L146:
1288:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       {
 2357              		.loc 1 1288 0
 2358 00ba 7B68     		ldr	r3, [r7, #4]
 2359 00bc DB6A     		ldr	r3, [r3, #44]
 2360 00be 03F08073 		and	r3, r3, #16777216
 2361 00c2 002B     		cmp	r3, #0
 2362 00c4 0ED0     		beq	.L155
1290:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       }
 2363              		.loc 1 1290 0
 2364 00c6 0123     		movs	r3, #1
 2365 00c8 FB73     		strb	r3, [r7, #15]
1292:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     default:
ARM GAS  /tmp/ccUjksEu.s 			page 65


 2366              		.loc 1 1292 0
 2367 00ca 0BE0     		b	.L155
 2368              	.L149:
1247:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     }
 2369              		.loc 1 1247 0
 2370 00cc 00BF     		nop
 2371 00ce 0AE0     		b	.L134
 2372              	.L150:
1237:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     case DMA_FIFO_THRESHOLD_HALFFULL:
 2373              		.loc 1 1237 0
 2374 00d0 00BF     		nop
 2375 00d2 08E0     		b	.L134
 2376              	.L151:
1243:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     case DMA_FIFO_THRESHOLD_FULL:
 2377              		.loc 1 1243 0
 2378 00d4 00BF     		nop
 2379 00d6 06E0     		b	.L134
 2380              	.L152:
1273:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     }
 2381              		.loc 1 1273 0
 2382 00d8 00BF     		nop
 2383 00da 04E0     		b	.L134
 2384              	.L153:
1265:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     case DMA_FIFO_THRESHOLD_FULL:
 2385              		.loc 1 1265 0
 2386 00dc 00BF     		nop
 2387 00de 02E0     		b	.L134
 2388              	.L154:
1271:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     default:
 2389              		.loc 1 1271 0
 2390 00e0 00BF     		nop
 2391 00e2 00E0     		b	.L134
 2392              	.L155:
1292:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     default:
 2393              		.loc 1 1292 0
 2394 00e4 00BF     		nop
 2395              	.L134:
1295:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     }
1296:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   } 
1297:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   
1298:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   return status; 
 2396              		.loc 1 1298 0
 2397 00e6 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
1299:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** }
 2398              		.loc 1 1299 0
 2399 00e8 1846     		mov	r0, r3
 2400 00ea 1437     		adds	r7, r7, #20
 2401              	.LCFI80:
 2402              		.cfi_def_cfa_offset 4
 2403 00ec BD46     		mov	sp, r7
 2404              	.LCFI81:
 2405              		.cfi_def_cfa_register 13
 2406              		@ sp needed
 2407 00ee 5DF8047B 		ldr	r7, [sp], #4
 2408              	.LCFI82:
 2409              		.cfi_restore 7
 2410              		.cfi_def_cfa_offset 0
ARM GAS  /tmp/ccUjksEu.s 			page 66


 2411 00f2 7047     		bx	lr
 2412              		.cfi_endproc
 2413              	.LFE138:
 2415              		.section	.rodata.flagBitshiftOffset.8157,"a",%progbits
 2416              		.align	2
 2419              	flagBitshiftOffset.8157:
 2420 0000 00       		.byte	0
 2421 0001 06       		.byte	6
 2422 0002 10       		.byte	16
 2423 0003 16       		.byte	22
 2424 0004 00       		.byte	0
 2425 0005 06       		.byte	6
 2426 0006 10       		.byte	16
 2427 0007 16       		.byte	22
 2428              		.text
 2429              	.Letext0:
 2430              		.file 2 "/opt/gcc4mbed/gcc-arm-none-eabi/arm-none-eabi/include/machine/_default_types.h"
 2431              		.file 3 "/opt/gcc4mbed/gcc-arm-none-eabi/arm-none-eabi/include/sys/_stdint.h"
 2432              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 2433              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 2434              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f411xe.h"
 2435              		.file 7 "/opt/gcc4mbed/gcc-arm-none-eabi/arm-none-eabi/include/sys/lock.h"
 2436              		.file 8 "/opt/gcc4mbed/gcc-arm-none-eabi/arm-none-eabi/include/sys/_types.h"
 2437              		.file 9 "/opt/gcc4mbed/gcc-arm-none-eabi/lib/gcc/arm-none-eabi/6.3.1/include/stddef.h"
 2438              		.file 10 "/opt/gcc4mbed/gcc-arm-none-eabi/arm-none-eabi/include/sys/reent.h"
 2439              		.file 11 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f4xx.h"
 2440              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 2441              		.file 13 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
ARM GAS  /tmp/ccUjksEu.s 			page 67


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f4xx_hal_dma.c
     /tmp/ccUjksEu.s:18     .text.HAL_DMA_Init:0000000000000000 $t
     /tmp/ccUjksEu.s:25     .text.HAL_DMA_Init:0000000000000000 HAL_DMA_Init
     /tmp/ccUjksEu.s:2227   .text.DMA_CheckFifoParam:0000000000000000 DMA_CheckFifoParam
     /tmp/ccUjksEu.s:2138   .text.DMA_CalcBaseAndBitshift:0000000000000000 DMA_CalcBaseAndBitshift
     /tmp/ccUjksEu.s:260    .text.HAL_DMA_Init:0000000000000158 $d
     /tmp/ccUjksEu.s:265    .text.HAL_DMA_DeInit:0000000000000000 $t
     /tmp/ccUjksEu.s:272    .text.HAL_DMA_DeInit:0000000000000000 HAL_DMA_DeInit
     /tmp/ccUjksEu.s:387    .text.HAL_DMA_Start:0000000000000000 $t
     /tmp/ccUjksEu.s:394    .text.HAL_DMA_Start:0000000000000000 HAL_DMA_Start
     /tmp/ccUjksEu.s:2051   .text.DMA_SetConfig:0000000000000000 DMA_SetConfig
     /tmp/ccUjksEu.s:486    .text.HAL_DMA_Start_IT:0000000000000000 $t
     /tmp/ccUjksEu.s:493    .text.HAL_DMA_Start_IT:0000000000000000 HAL_DMA_Start_IT
     /tmp/ccUjksEu.s:626    .text.HAL_DMA_Abort:0000000000000000 $t
     /tmp/ccUjksEu.s:633    .text.HAL_DMA_Abort:0000000000000000 HAL_DMA_Abort
     /tmp/ccUjksEu.s:785    .text.HAL_DMA_Abort_IT:0000000000000000 $t
     /tmp/ccUjksEu.s:792    .text.HAL_DMA_Abort_IT:0000000000000000 HAL_DMA_Abort_IT
     /tmp/ccUjksEu.s:857    .text.HAL_DMA_PollForTransfer:0000000000000000 $t
     /tmp/ccUjksEu.s:864    .text.HAL_DMA_PollForTransfer:0000000000000000 HAL_DMA_PollForTransfer
     /tmp/ccUjksEu.s:1152   .text.HAL_DMA_IRQHandler:0000000000000000 $t
     /tmp/ccUjksEu.s:1159   .text.HAL_DMA_IRQHandler:0000000000000000 HAL_DMA_IRQHandler
     /tmp/ccUjksEu.s:1520   .text.HAL_DMA_IRQHandler:0000000000000258 $d
     /tmp/ccUjksEu.s:1524   .text.HAL_DMA_IRQHandler:0000000000000260 $t
     /tmp/ccUjksEu.s:1640   .text.HAL_DMA_RegisterCallback:0000000000000000 $t
     /tmp/ccUjksEu.s:1647   .text.HAL_DMA_RegisterCallback:0000000000000000 HAL_DMA_RegisterCallback
     /tmp/ccUjksEu.s:1698   .text.HAL_DMA_RegisterCallback:0000000000000040 $d
     /tmp/ccUjksEu.s:1704   .text.HAL_DMA_RegisterCallback:0000000000000058 $t
     /tmp/ccUjksEu.s:1781   .text.HAL_DMA_UnRegisterCallback:0000000000000000 $t
     /tmp/ccUjksEu.s:1788   .text.HAL_DMA_UnRegisterCallback:0000000000000000 HAL_DMA_UnRegisterCallback
     /tmp/ccUjksEu.s:1838   .text.HAL_DMA_UnRegisterCallback:0000000000000040 $d
     /tmp/ccUjksEu.s:1845   .text.HAL_DMA_UnRegisterCallback:000000000000005c $t
     /tmp/ccUjksEu.s:1952   .text.HAL_DMA_GetState:0000000000000000 $t
     /tmp/ccUjksEu.s:1959   .text.HAL_DMA_GetState:0000000000000000 HAL_DMA_GetState
     /tmp/ccUjksEu.s:1999   .text.HAL_DMA_GetError:0000000000000000 $t
     /tmp/ccUjksEu.s:2006   .text.HAL_DMA_GetError:0000000000000000 HAL_DMA_GetError
     /tmp/ccUjksEu.s:2045   .text.DMA_SetConfig:0000000000000000 $t
     /tmp/ccUjksEu.s:2132   .text.DMA_CalcBaseAndBitshift:0000000000000000 $t
     /tmp/ccUjksEu.s:2215   .text.DMA_CalcBaseAndBitshift:0000000000000064 $d
     /tmp/ccUjksEu.s:2419   .rodata.flagBitshiftOffset.8157:0000000000000000 flagBitshiftOffset.8157
     /tmp/ccUjksEu.s:2221   .text.DMA_CheckFifoParam:0000000000000000 $t
     /tmp/ccUjksEu.s:2265   .text.DMA_CheckFifoParam:0000000000000028 $d
     /tmp/ccUjksEu.s:2269   .text.DMA_CheckFifoParam:0000000000000038 $t
     /tmp/ccUjksEu.s:2307   .text.DMA_CheckFifoParam:0000000000000070 $d
     /tmp/ccUjksEu.s:2311   .text.DMA_CheckFifoParam:0000000000000080 $t
     /tmp/ccUjksEu.s:2416   .rodata.flagBitshiftOffset.8157:0000000000000000 $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
HAL_GetTick
SystemCoreClock
