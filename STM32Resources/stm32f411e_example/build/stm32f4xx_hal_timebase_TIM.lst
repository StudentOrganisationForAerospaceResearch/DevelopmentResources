ARM GAS  /tmp/ccNue0o8.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32f4xx_hal_timebase_TIM.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.comm	htim1,60,4
  18              		.global	uwIncrementState
  19              		.section	.bss.uwIncrementState,"aw",%nobits
  20              		.align	2
  23              	uwIncrementState:
  24 0000 00000000 		.space	4
  25              		.section	.text.HAL_InitTick,"ax",%progbits
  26              		.align	1
  27              		.global	HAL_InitTick
  28              		.syntax unified
  29              		.thumb
  30              		.thumb_func
  31              		.fpu fpv4-sp-d16
  33              	HAL_InitTick:
  34              	.LFB124:
  35              		.file 1 "Src/stm32f4xx_hal_timebase_TIM.c"
   1:Src/stm32f4xx_hal_timebase_TIM.c **** /**
   2:Src/stm32f4xx_hal_timebase_TIM.c ****   ******************************************************************************
   3:Src/stm32f4xx_hal_timebase_TIM.c ****   * @file    stm32f4xx_hal_timebase_TIM.c 
   4:Src/stm32f4xx_hal_timebase_TIM.c ****   * @brief   HAL time base based on the hardware TIM.
   5:Src/stm32f4xx_hal_timebase_TIM.c ****   ******************************************************************************
   6:Src/stm32f4xx_hal_timebase_TIM.c ****   * This notice applies to any and all portions of this file
   7:Src/stm32f4xx_hal_timebase_TIM.c ****   * that are not between comment pairs USER CODE BEGIN and
   8:Src/stm32f4xx_hal_timebase_TIM.c ****   * USER CODE END. Other portions of this file, whether 
   9:Src/stm32f4xx_hal_timebase_TIM.c ****   * inserted by the user or by software development tools
  10:Src/stm32f4xx_hal_timebase_TIM.c ****   * are owned by their respective copyright owners.
  11:Src/stm32f4xx_hal_timebase_TIM.c ****   *
  12:Src/stm32f4xx_hal_timebase_TIM.c ****   * Copyright (c) 2018 STMicroelectronics International N.V. 
  13:Src/stm32f4xx_hal_timebase_TIM.c ****   * All rights reserved.
  14:Src/stm32f4xx_hal_timebase_TIM.c ****   *
  15:Src/stm32f4xx_hal_timebase_TIM.c ****   * Redistribution and use in source and binary forms, with or without 
  16:Src/stm32f4xx_hal_timebase_TIM.c ****   * modification, are permitted, provided that the following conditions are met:
  17:Src/stm32f4xx_hal_timebase_TIM.c ****   *
  18:Src/stm32f4xx_hal_timebase_TIM.c ****   * 1. Redistribution of source code must retain the above copyright notice, 
  19:Src/stm32f4xx_hal_timebase_TIM.c ****   *    this list of conditions and the following disclaimer.
  20:Src/stm32f4xx_hal_timebase_TIM.c ****   * 2. Redistributions in binary form must reproduce the above copyright notice,
  21:Src/stm32f4xx_hal_timebase_TIM.c ****   *    this list of conditions and the following disclaimer in the documentation
  22:Src/stm32f4xx_hal_timebase_TIM.c ****   *    and/or other materials provided with the distribution.
  23:Src/stm32f4xx_hal_timebase_TIM.c ****   * 3. Neither the name of STMicroelectronics nor the names of other 
  24:Src/stm32f4xx_hal_timebase_TIM.c ****   *    contributors to this software may be used to endorse or promote products 
  25:Src/stm32f4xx_hal_timebase_TIM.c ****   *    derived from this software without specific written permission.
ARM GAS  /tmp/ccNue0o8.s 			page 2


  26:Src/stm32f4xx_hal_timebase_TIM.c ****   * 4. This software, including modifications and/or derivative works of this 
  27:Src/stm32f4xx_hal_timebase_TIM.c ****   *    software, must execute solely and exclusively on microcontroller or
  28:Src/stm32f4xx_hal_timebase_TIM.c ****   *    microprocessor devices manufactured by or for STMicroelectronics.
  29:Src/stm32f4xx_hal_timebase_TIM.c ****   * 5. Redistribution and use of this software other than as permitted under 
  30:Src/stm32f4xx_hal_timebase_TIM.c ****   *    this license is void and will automatically terminate your rights under 
  31:Src/stm32f4xx_hal_timebase_TIM.c ****   *    this license. 
  32:Src/stm32f4xx_hal_timebase_TIM.c ****   *
  33:Src/stm32f4xx_hal_timebase_TIM.c ****   * THIS SOFTWARE IS PROVIDED BY STMICROELECTRONICS AND CONTRIBUTORS "AS IS" 
  34:Src/stm32f4xx_hal_timebase_TIM.c ****   * AND ANY EXPRESS, IMPLIED OR STATUTORY WARRANTIES, INCLUDING, BUT NOT 
  35:Src/stm32f4xx_hal_timebase_TIM.c ****   * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS FOR A 
  36:Src/stm32f4xx_hal_timebase_TIM.c ****   * PARTICULAR PURPOSE AND NON-INFRINGEMENT OF THIRD PARTY INTELLECTUAL PROPERTY
  37:Src/stm32f4xx_hal_timebase_TIM.c ****   * RIGHTS ARE DISCLAIMED TO THE FULLEST EXTENT PERMITTED BY LAW. IN NO EVENT 
  38:Src/stm32f4xx_hal_timebase_TIM.c ****   * SHALL STMICROELECTRONICS OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
  39:Src/stm32f4xx_hal_timebase_TIM.c ****   * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
  40:Src/stm32f4xx_hal_timebase_TIM.c ****   * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, 
  41:Src/stm32f4xx_hal_timebase_TIM.c ****   * OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF 
  42:Src/stm32f4xx_hal_timebase_TIM.c ****   * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING 
  43:Src/stm32f4xx_hal_timebase_TIM.c ****   * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
  44:Src/stm32f4xx_hal_timebase_TIM.c ****   * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  45:Src/stm32f4xx_hal_timebase_TIM.c ****   *
  46:Src/stm32f4xx_hal_timebase_TIM.c ****   ******************************************************************************
  47:Src/stm32f4xx_hal_timebase_TIM.c ****   */
  48:Src/stm32f4xx_hal_timebase_TIM.c **** 
  49:Src/stm32f4xx_hal_timebase_TIM.c **** /* Includes ------------------------------------------------------------------*/
  50:Src/stm32f4xx_hal_timebase_TIM.c **** #include "stm32f4xx_hal.h"
  51:Src/stm32f4xx_hal_timebase_TIM.c **** #include "stm32f4xx_hal_tim.h"
  52:Src/stm32f4xx_hal_timebase_TIM.c **** /** @addtogroup STM32F7xx_HAL_Examples
  53:Src/stm32f4xx_hal_timebase_TIM.c ****   * @{
  54:Src/stm32f4xx_hal_timebase_TIM.c ****   */
  55:Src/stm32f4xx_hal_timebase_TIM.c **** 
  56:Src/stm32f4xx_hal_timebase_TIM.c **** /** @addtogroup HAL_TimeBase
  57:Src/stm32f4xx_hal_timebase_TIM.c ****   * @{
  58:Src/stm32f4xx_hal_timebase_TIM.c ****   */ 
  59:Src/stm32f4xx_hal_timebase_TIM.c **** 
  60:Src/stm32f4xx_hal_timebase_TIM.c **** /* Private typedef -----------------------------------------------------------*/
  61:Src/stm32f4xx_hal_timebase_TIM.c **** /* Private define ------------------------------------------------------------*/
  62:Src/stm32f4xx_hal_timebase_TIM.c **** /* Private macro -------------------------------------------------------------*/
  63:Src/stm32f4xx_hal_timebase_TIM.c **** /* Private variables ---------------------------------------------------------*/
  64:Src/stm32f4xx_hal_timebase_TIM.c **** TIM_HandleTypeDef        htim1; 
  65:Src/stm32f4xx_hal_timebase_TIM.c **** uint32_t                 uwIncrementState = 0;
  66:Src/stm32f4xx_hal_timebase_TIM.c **** /* Private function prototypes -----------------------------------------------*/
  67:Src/stm32f4xx_hal_timebase_TIM.c **** /* Private functions ---------------------------------------------------------*/
  68:Src/stm32f4xx_hal_timebase_TIM.c **** 
  69:Src/stm32f4xx_hal_timebase_TIM.c **** /**
  70:Src/stm32f4xx_hal_timebase_TIM.c ****   * @brief  This function configures the TIM1 as a time base source. 
  71:Src/stm32f4xx_hal_timebase_TIM.c ****   *         The time source is configured  to have 1ms time base with a dedicated 
  72:Src/stm32f4xx_hal_timebase_TIM.c ****   *         Tick interrupt priority. 
  73:Src/stm32f4xx_hal_timebase_TIM.c ****   * @note   This function is called  automatically at the beginning of program after
  74:Src/stm32f4xx_hal_timebase_TIM.c ****   *         reset by HAL_Init() or at any time when clock is configured, by HAL_RCC_ClockConfig(). 
  75:Src/stm32f4xx_hal_timebase_TIM.c ****   * @param  TickPriority: Tick interrupt priorty.
  76:Src/stm32f4xx_hal_timebase_TIM.c ****   * @retval HAL status
  77:Src/stm32f4xx_hal_timebase_TIM.c ****   */
  78:Src/stm32f4xx_hal_timebase_TIM.c **** HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
  79:Src/stm32f4xx_hal_timebase_TIM.c **** {
  36              		.loc 1 79 0
  37              		.cfi_startproc
  38              		@ args = 0, pretend = 0, frame = 48
ARM GAS  /tmp/ccNue0o8.s 			page 3


  39              		@ frame_needed = 1, uses_anonymous_args = 0
  40 0000 80B5     		push	{r7, lr}
  41              	.LCFI0:
  42              		.cfi_def_cfa_offset 8
  43              		.cfi_offset 7, -8
  44              		.cfi_offset 14, -4
  45 0002 8CB0     		sub	sp, sp, #48
  46              	.LCFI1:
  47              		.cfi_def_cfa_offset 56
  48 0004 00AF     		add	r7, sp, #0
  49              	.LCFI2:
  50              		.cfi_def_cfa_register 7
  51 0006 7860     		str	r0, [r7, #4]
  80:Src/stm32f4xx_hal_timebase_TIM.c ****   RCC_ClkInitTypeDef    clkconfig;
  81:Src/stm32f4xx_hal_timebase_TIM.c ****   uint32_t              uwTimclock = 0;
  52              		.loc 1 81 0
  53 0008 0023     		movs	r3, #0
  54 000a FB62     		str	r3, [r7, #44]
  82:Src/stm32f4xx_hal_timebase_TIM.c ****   uint32_t              uwPrescalerValue = 0;
  55              		.loc 1 82 0
  56 000c 0023     		movs	r3, #0
  57 000e BB62     		str	r3, [r7, #40]
  83:Src/stm32f4xx_hal_timebase_TIM.c ****   uint32_t              pFLatency;
  84:Src/stm32f4xx_hal_timebase_TIM.c ****   
  85:Src/stm32f4xx_hal_timebase_TIM.c ****   /*Configure the TIM1 IRQ priority */
  86:Src/stm32f4xx_hal_timebase_TIM.c ****   HAL_NVIC_SetPriority(TIM1_UP_TIM10_IRQn, TickPriority ,0); 
  58              		.loc 1 86 0
  59 0010 0022     		movs	r2, #0
  60 0012 7968     		ldr	r1, [r7, #4]
  61 0014 1920     		movs	r0, #25
  62 0016 FFF7FEFF 		bl	HAL_NVIC_SetPriority
  87:Src/stm32f4xx_hal_timebase_TIM.c ****   
  88:Src/stm32f4xx_hal_timebase_TIM.c ****   /* Enable the TIM1 global Interrupt */
  89:Src/stm32f4xx_hal_timebase_TIM.c ****   HAL_NVIC_EnableIRQ(TIM1_UP_TIM10_IRQn); 
  63              		.loc 1 89 0
  64 001a 1920     		movs	r0, #25
  65 001c FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
  66              	.LBB2:
  90:Src/stm32f4xx_hal_timebase_TIM.c ****   
  91:Src/stm32f4xx_hal_timebase_TIM.c ****   /* Enable TIM1 clock */
  92:Src/stm32f4xx_hal_timebase_TIM.c ****   __HAL_RCC_TIM1_CLK_ENABLE();
  67              		.loc 1 92 0
  68 0020 0023     		movs	r3, #0
  69 0022 FB60     		str	r3, [r7, #12]
  70 0024 1F4A     		ldr	r2, .L5
  71 0026 1F4B     		ldr	r3, .L5
  72 0028 5B6C     		ldr	r3, [r3, #68]
  73 002a 43F00103 		orr	r3, r3, #1
  74 002e 5364     		str	r3, [r2, #68]
  75 0030 1C4B     		ldr	r3, .L5
  76 0032 5B6C     		ldr	r3, [r3, #68]
  77 0034 03F00103 		and	r3, r3, #1
  78 0038 FB60     		str	r3, [r7, #12]
  79 003a FB68     		ldr	r3, [r7, #12]
  80              	.LBE2:
  93:Src/stm32f4xx_hal_timebase_TIM.c ****   
  94:Src/stm32f4xx_hal_timebase_TIM.c ****   /* Get clock configuration */
ARM GAS  /tmp/ccNue0o8.s 			page 4


  95:Src/stm32f4xx_hal_timebase_TIM.c ****   HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
  81              		.loc 1 95 0
  82 003c 07F11002 		add	r2, r7, #16
  83 0040 07F11403 		add	r3, r7, #20
  84 0044 1146     		mov	r1, r2
  85 0046 1846     		mov	r0, r3
  86 0048 FFF7FEFF 		bl	HAL_RCC_GetClockConfig
  96:Src/stm32f4xx_hal_timebase_TIM.c ****   
  97:Src/stm32f4xx_hal_timebase_TIM.c ****   /* Compute TIM1 clock */
  98:Src/stm32f4xx_hal_timebase_TIM.c ****   uwTimclock = 2*HAL_RCC_GetPCLK2Freq();
  87              		.loc 1 98 0
  88 004c FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
  89 0050 0346     		mov	r3, r0
  90 0052 5B00     		lsls	r3, r3, #1
  91 0054 FB62     		str	r3, [r7, #44]
  99:Src/stm32f4xx_hal_timebase_TIM.c ****    
 100:Src/stm32f4xx_hal_timebase_TIM.c ****   /* Compute the prescaler value to have TIM1 counter clock equal to 1MHz */
 101:Src/stm32f4xx_hal_timebase_TIM.c ****   uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000) - 1);
  92              		.loc 1 101 0
  93 0056 FB6A     		ldr	r3, [r7, #44]
  94 0058 134A     		ldr	r2, .L5+4
  95 005a A2FB0323 		umull	r2, r3, r2, r3
  96 005e 9B0C     		lsrs	r3, r3, #18
  97 0060 013B     		subs	r3, r3, #1
  98 0062 BB62     		str	r3, [r7, #40]
 102:Src/stm32f4xx_hal_timebase_TIM.c ****   
 103:Src/stm32f4xx_hal_timebase_TIM.c ****   /* Initialize TIM1 */
 104:Src/stm32f4xx_hal_timebase_TIM.c ****   htim1.Instance = TIM1;
  99              		.loc 1 104 0
 100 0064 114B     		ldr	r3, .L5+8
 101 0066 124A     		ldr	r2, .L5+12
 102 0068 1A60     		str	r2, [r3]
 105:Src/stm32f4xx_hal_timebase_TIM.c ****   
 106:Src/stm32f4xx_hal_timebase_TIM.c ****   /* Initialize TIMx peripheral as follow:
 107:Src/stm32f4xx_hal_timebase_TIM.c ****   + Period = [(TIM1CLK/1000) - 1]. to have a (1/1000) s time base.
 108:Src/stm32f4xx_hal_timebase_TIM.c ****   + Prescaler = (uwTimclock/1000000 - 1) to have a 1MHz counter clock.
 109:Src/stm32f4xx_hal_timebase_TIM.c ****   + ClockDivision = 0
 110:Src/stm32f4xx_hal_timebase_TIM.c ****   + Counter direction = Up
 111:Src/stm32f4xx_hal_timebase_TIM.c ****   */
 112:Src/stm32f4xx_hal_timebase_TIM.c ****   htim1.Init.Period = (1000000 / 1000) - 1;
 103              		.loc 1 112 0
 104 006a 104B     		ldr	r3, .L5+8
 105 006c 40F2E732 		movw	r2, #999
 106 0070 DA60     		str	r2, [r3, #12]
 113:Src/stm32f4xx_hal_timebase_TIM.c ****   htim1.Init.Prescaler = uwPrescalerValue;
 107              		.loc 1 113 0
 108 0072 0E4A     		ldr	r2, .L5+8
 109 0074 BB6A     		ldr	r3, [r7, #40]
 110 0076 5360     		str	r3, [r2, #4]
 114:Src/stm32f4xx_hal_timebase_TIM.c ****   htim1.Init.ClockDivision = 0;
 111              		.loc 1 114 0
 112 0078 0C4B     		ldr	r3, .L5+8
 113 007a 0022     		movs	r2, #0
 114 007c 1A61     		str	r2, [r3, #16]
 115:Src/stm32f4xx_hal_timebase_TIM.c ****   htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 115              		.loc 1 115 0
 116 007e 0B4B     		ldr	r3, .L5+8
ARM GAS  /tmp/ccNue0o8.s 			page 5


 117 0080 0022     		movs	r2, #0
 118 0082 9A60     		str	r2, [r3, #8]
 116:Src/stm32f4xx_hal_timebase_TIM.c ****   if(HAL_TIM_Base_Init(&htim1) == HAL_OK)
 119              		.loc 1 116 0
 120 0084 0948     		ldr	r0, .L5+8
 121 0086 FFF7FEFF 		bl	HAL_TIM_Base_Init
 122 008a 0346     		mov	r3, r0
 123 008c 002B     		cmp	r3, #0
 124 008e 04D1     		bne	.L2
 117:Src/stm32f4xx_hal_timebase_TIM.c ****   {
 118:Src/stm32f4xx_hal_timebase_TIM.c ****     /* Start the TIM time Base generation in interrupt mode */
 119:Src/stm32f4xx_hal_timebase_TIM.c ****     return HAL_TIM_Base_Start_IT(&htim1);
 125              		.loc 1 119 0
 126 0090 0648     		ldr	r0, .L5+8
 127 0092 FFF7FEFF 		bl	HAL_TIM_Base_Start_IT
 128 0096 0346     		mov	r3, r0
 129 0098 00E0     		b	.L4
 130              	.L2:
 120:Src/stm32f4xx_hal_timebase_TIM.c ****   }
 121:Src/stm32f4xx_hal_timebase_TIM.c ****   
 122:Src/stm32f4xx_hal_timebase_TIM.c ****   /* Return function status */
 123:Src/stm32f4xx_hal_timebase_TIM.c ****   return HAL_ERROR;
 131              		.loc 1 123 0
 132 009a 0123     		movs	r3, #1
 133              	.L4:
 124:Src/stm32f4xx_hal_timebase_TIM.c **** }
 134              		.loc 1 124 0 discriminator 1
 135 009c 1846     		mov	r0, r3
 136 009e 3037     		adds	r7, r7, #48
 137              	.LCFI3:
 138              		.cfi_def_cfa_offset 8
 139 00a0 BD46     		mov	sp, r7
 140              	.LCFI4:
 141              		.cfi_def_cfa_register 13
 142              		@ sp needed
 143 00a2 80BD     		pop	{r7, pc}
 144              	.L6:
 145              		.align	2
 146              	.L5:
 147 00a4 00380240 		.word	1073887232
 148 00a8 83DE1B43 		.word	1125899907
 149 00ac 00000000 		.word	htim1
 150 00b0 00000140 		.word	1073807360
 151              		.cfi_endproc
 152              	.LFE124:
 154              		.section	.text.HAL_SuspendTick,"ax",%progbits
 155              		.align	1
 156              		.global	HAL_SuspendTick
 157              		.syntax unified
 158              		.thumb
 159              		.thumb_func
 160              		.fpu fpv4-sp-d16
 162              	HAL_SuspendTick:
 163              	.LFB125:
 125:Src/stm32f4xx_hal_timebase_TIM.c **** 
 126:Src/stm32f4xx_hal_timebase_TIM.c **** /**
 127:Src/stm32f4xx_hal_timebase_TIM.c ****   * @brief  Suspend Tick increment.
ARM GAS  /tmp/ccNue0o8.s 			page 6


 128:Src/stm32f4xx_hal_timebase_TIM.c ****   * @note   Disable the tick increment by disabling TIM1 update interrupt.
 129:Src/stm32f4xx_hal_timebase_TIM.c ****   * @param  None
 130:Src/stm32f4xx_hal_timebase_TIM.c ****   * @retval None
 131:Src/stm32f4xx_hal_timebase_TIM.c ****   */
 132:Src/stm32f4xx_hal_timebase_TIM.c **** void HAL_SuspendTick(void)
 133:Src/stm32f4xx_hal_timebase_TIM.c **** {
 164              		.loc 1 133 0
 165              		.cfi_startproc
 166              		@ args = 0, pretend = 0, frame = 0
 167              		@ frame_needed = 1, uses_anonymous_args = 0
 168              		@ link register save eliminated.
 169 0000 80B4     		push	{r7}
 170              	.LCFI5:
 171              		.cfi_def_cfa_offset 4
 172              		.cfi_offset 7, -4
 173 0002 00AF     		add	r7, sp, #0
 174              	.LCFI6:
 175              		.cfi_def_cfa_register 7
 134:Src/stm32f4xx_hal_timebase_TIM.c ****   /* Disable TIM1 update Interrupt */
 135:Src/stm32f4xx_hal_timebase_TIM.c ****   __HAL_TIM_DISABLE_IT(&htim1, TIM_IT_UPDATE);                                                  
 176              		.loc 1 135 0
 177 0004 064B     		ldr	r3, .L8
 178 0006 1B68     		ldr	r3, [r3]
 179 0008 054A     		ldr	r2, .L8
 180 000a 1268     		ldr	r2, [r2]
 181 000c D268     		ldr	r2, [r2, #12]
 182 000e 22F00102 		bic	r2, r2, #1
 183 0012 DA60     		str	r2, [r3, #12]
 136:Src/stm32f4xx_hal_timebase_TIM.c **** }
 184              		.loc 1 136 0
 185 0014 00BF     		nop
 186 0016 BD46     		mov	sp, r7
 187              	.LCFI7:
 188              		.cfi_def_cfa_register 13
 189              		@ sp needed
 190 0018 5DF8047B 		ldr	r7, [sp], #4
 191              	.LCFI8:
 192              		.cfi_restore 7
 193              		.cfi_def_cfa_offset 0
 194 001c 7047     		bx	lr
 195              	.L9:
 196 001e 00BF     		.align	2
 197              	.L8:
 198 0020 00000000 		.word	htim1
 199              		.cfi_endproc
 200              	.LFE125:
 202              		.section	.text.HAL_ResumeTick,"ax",%progbits
 203              		.align	1
 204              		.global	HAL_ResumeTick
 205              		.syntax unified
 206              		.thumb
 207              		.thumb_func
 208              		.fpu fpv4-sp-d16
 210              	HAL_ResumeTick:
 211              	.LFB126:
 137:Src/stm32f4xx_hal_timebase_TIM.c **** 
 138:Src/stm32f4xx_hal_timebase_TIM.c **** /**
ARM GAS  /tmp/ccNue0o8.s 			page 7


 139:Src/stm32f4xx_hal_timebase_TIM.c ****   * @brief  Resume Tick increment.
 140:Src/stm32f4xx_hal_timebase_TIM.c ****   * @note   Enable the tick increment by Enabling TIM1 update interrupt.
 141:Src/stm32f4xx_hal_timebase_TIM.c ****   * @param  None
 142:Src/stm32f4xx_hal_timebase_TIM.c ****   * @retval None
 143:Src/stm32f4xx_hal_timebase_TIM.c ****   */
 144:Src/stm32f4xx_hal_timebase_TIM.c **** void HAL_ResumeTick(void)
 145:Src/stm32f4xx_hal_timebase_TIM.c **** {
 212              		.loc 1 145 0
 213              		.cfi_startproc
 214              		@ args = 0, pretend = 0, frame = 0
 215              		@ frame_needed = 1, uses_anonymous_args = 0
 216              		@ link register save eliminated.
 217 0000 80B4     		push	{r7}
 218              	.LCFI9:
 219              		.cfi_def_cfa_offset 4
 220              		.cfi_offset 7, -4
 221 0002 00AF     		add	r7, sp, #0
 222              	.LCFI10:
 223              		.cfi_def_cfa_register 7
 146:Src/stm32f4xx_hal_timebase_TIM.c ****   /* Enable TIM1 Update interrupt */
 147:Src/stm32f4xx_hal_timebase_TIM.c ****   __HAL_TIM_ENABLE_IT(&htim1, TIM_IT_UPDATE);
 224              		.loc 1 147 0
 225 0004 064B     		ldr	r3, .L11
 226 0006 1B68     		ldr	r3, [r3]
 227 0008 054A     		ldr	r2, .L11
 228 000a 1268     		ldr	r2, [r2]
 229 000c D268     		ldr	r2, [r2, #12]
 230 000e 42F00102 		orr	r2, r2, #1
 231 0012 DA60     		str	r2, [r3, #12]
 148:Src/stm32f4xx_hal_timebase_TIM.c **** }
 232              		.loc 1 148 0
 233 0014 00BF     		nop
 234 0016 BD46     		mov	sp, r7
 235              	.LCFI11:
 236              		.cfi_def_cfa_register 13
 237              		@ sp needed
 238 0018 5DF8047B 		ldr	r7, [sp], #4
 239              	.LCFI12:
 240              		.cfi_restore 7
 241              		.cfi_def_cfa_offset 0
 242 001c 7047     		bx	lr
 243              	.L12:
 244 001e 00BF     		.align	2
 245              	.L11:
 246 0020 00000000 		.word	htim1
 247              		.cfi_endproc
 248              	.LFE126:
 250              		.text
 251              	.Letext0:
 252              		.file 2 "/opt/gcc4mbed/gcc-arm-none-eabi/arm-none-eabi/include/machine/_default_types.h"
 253              		.file 3 "/opt/gcc4mbed/gcc-arm-none-eabi/arm-none-eabi/include/sys/_stdint.h"
 254              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 255              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 256              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f411xe.h"
 257              		.file 7 "/opt/gcc4mbed/gcc-arm-none-eabi/arm-none-eabi/include/sys/lock.h"
 258              		.file 8 "/opt/gcc4mbed/gcc-arm-none-eabi/arm-none-eabi/include/sys/_types.h"
 259              		.file 9 "/opt/gcc4mbed/gcc-arm-none-eabi/lib/gcc/arm-none-eabi/6.3.1/include/stddef.h"
ARM GAS  /tmp/ccNue0o8.s 			page 8


 260              		.file 10 "/opt/gcc4mbed/gcc-arm-none-eabi/arm-none-eabi/include/sys/reent.h"
 261              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 262              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 263              		.file 13 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 264              		.file 14 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
ARM GAS  /tmp/ccNue0o8.s 			page 9


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f4xx_hal_timebase_TIM.c
                            *COM*:000000000000003c htim1
     /tmp/ccNue0o8.s:23     .bss.uwIncrementState:0000000000000000 uwIncrementState
     /tmp/ccNue0o8.s:20     .bss.uwIncrementState:0000000000000000 $d
     /tmp/ccNue0o8.s:26     .text.HAL_InitTick:0000000000000000 $t
     /tmp/ccNue0o8.s:33     .text.HAL_InitTick:0000000000000000 HAL_InitTick
     /tmp/ccNue0o8.s:147    .text.HAL_InitTick:00000000000000a4 $d
     /tmp/ccNue0o8.s:155    .text.HAL_SuspendTick:0000000000000000 $t
     /tmp/ccNue0o8.s:162    .text.HAL_SuspendTick:0000000000000000 HAL_SuspendTick
     /tmp/ccNue0o8.s:198    .text.HAL_SuspendTick:0000000000000020 $d
     /tmp/ccNue0o8.s:203    .text.HAL_ResumeTick:0000000000000000 $t
     /tmp/ccNue0o8.s:210    .text.HAL_ResumeTick:0000000000000000 HAL_ResumeTick
     /tmp/ccNue0o8.s:246    .text.HAL_ResumeTick:0000000000000020 $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
HAL_RCC_GetClockConfig
HAL_RCC_GetPCLK2Freq
HAL_TIM_Base_Init
HAL_TIM_Base_Start_IT
