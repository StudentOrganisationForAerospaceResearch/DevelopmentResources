ARM GAS  /tmp/ccWXBMAI.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"list.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.vListInitialise,"ax",%progbits
  18              		.align	1
  19              		.global	vListInitialise
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	vListInitialise:
  26              	.LFB5:
  27              		.file 1 "Middlewares/Third_Party/FreeRTOS/Source/list.c"
   1:Middlewares/Third_Party/FreeRTOS/Source/list.c **** /*
   2:Middlewares/Third_Party/FreeRTOS/Source/list.c ****     FreeRTOS V9.0.0 - Copyright (C) 2016 Real Time Engineers Ltd.
   3:Middlewares/Third_Party/FreeRTOS/Source/list.c ****     All rights reserved
   4:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 
   5:Middlewares/Third_Party/FreeRTOS/Source/list.c ****     VISIT http://www.FreeRTOS.org TO ENSURE YOU ARE USING THE LATEST VERSION.
   6:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 
   7:Middlewares/Third_Party/FreeRTOS/Source/list.c ****     This file is part of the FreeRTOS distribution.
   8:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 
   9:Middlewares/Third_Party/FreeRTOS/Source/list.c ****     FreeRTOS is free software; you can redistribute it and/or modify it under
  10:Middlewares/Third_Party/FreeRTOS/Source/list.c ****     the terms of the GNU General Public License (version 2) as published by the
  11:Middlewares/Third_Party/FreeRTOS/Source/list.c ****     Free Software Foundation >>>> AND MODIFIED BY <<<< the FreeRTOS exception.
  12:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 
  13:Middlewares/Third_Party/FreeRTOS/Source/list.c ****     ***************************************************************************
  14:Middlewares/Third_Party/FreeRTOS/Source/list.c ****     >>!   NOTE: The modification to the GPL is included to allow you to     !<<
  15:Middlewares/Third_Party/FreeRTOS/Source/list.c ****     >>!   distribute a combined work that includes FreeRTOS without being   !<<
  16:Middlewares/Third_Party/FreeRTOS/Source/list.c ****     >>!   obliged to provide the source code for proprietary components     !<<
  17:Middlewares/Third_Party/FreeRTOS/Source/list.c ****     >>!   outside of the FreeRTOS kernel.                                   !<<
  18:Middlewares/Third_Party/FreeRTOS/Source/list.c ****     ***************************************************************************
  19:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 
  20:Middlewares/Third_Party/FreeRTOS/Source/list.c ****     FreeRTOS is distributed in the hope that it will be useful, but WITHOUT ANY
  21:Middlewares/Third_Party/FreeRTOS/Source/list.c ****     WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
  22:Middlewares/Third_Party/FreeRTOS/Source/list.c ****     FOR A PARTICULAR PURPOSE.  Full license text is available on the following
  23:Middlewares/Third_Party/FreeRTOS/Source/list.c ****     link: http://www.freertos.org/a00114.html
  24:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 
  25:Middlewares/Third_Party/FreeRTOS/Source/list.c ****     ***************************************************************************
  26:Middlewares/Third_Party/FreeRTOS/Source/list.c ****      *                                                                       *
  27:Middlewares/Third_Party/FreeRTOS/Source/list.c ****      *    FreeRTOS provides completely free yet professionally developed,    *
  28:Middlewares/Third_Party/FreeRTOS/Source/list.c ****      *    robust, strictly quality controlled, supported, and cross          *
  29:Middlewares/Third_Party/FreeRTOS/Source/list.c ****      *    platform software that is more than just the market leader, it     *
  30:Middlewares/Third_Party/FreeRTOS/Source/list.c ****      *    is the industry's de facto standard.                               *
  31:Middlewares/Third_Party/FreeRTOS/Source/list.c ****      *                                                                       *
ARM GAS  /tmp/ccWXBMAI.s 			page 2


  32:Middlewares/Third_Party/FreeRTOS/Source/list.c ****      *    Help yourself get started quickly while simultaneously helping     *
  33:Middlewares/Third_Party/FreeRTOS/Source/list.c ****      *    to support the FreeRTOS project by purchasing a FreeRTOS           *
  34:Middlewares/Third_Party/FreeRTOS/Source/list.c ****      *    tutorial book, reference manual, or both:                          *
  35:Middlewares/Third_Party/FreeRTOS/Source/list.c ****      *    http://www.FreeRTOS.org/Documentation                              *
  36:Middlewares/Third_Party/FreeRTOS/Source/list.c ****      *                                                                       *
  37:Middlewares/Third_Party/FreeRTOS/Source/list.c ****     ***************************************************************************
  38:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 
  39:Middlewares/Third_Party/FreeRTOS/Source/list.c ****     http://www.FreeRTOS.org/FAQHelp.html - Having a problem?  Start by reading
  40:Middlewares/Third_Party/FreeRTOS/Source/list.c ****     the FAQ page "My application does not run, what could be wrong?".  Have you
  41:Middlewares/Third_Party/FreeRTOS/Source/list.c ****     defined configASSERT()?
  42:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 
  43:Middlewares/Third_Party/FreeRTOS/Source/list.c ****     http://www.FreeRTOS.org/support - In return for receiving this top quality
  44:Middlewares/Third_Party/FreeRTOS/Source/list.c ****     embedded software for free we request you assist our global community by
  45:Middlewares/Third_Party/FreeRTOS/Source/list.c ****     participating in the support forum.
  46:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 
  47:Middlewares/Third_Party/FreeRTOS/Source/list.c ****     http://www.FreeRTOS.org/training - Investing in training allows your team to
  48:Middlewares/Third_Party/FreeRTOS/Source/list.c ****     be as productive as possible as early as possible.  Now you can receive
  49:Middlewares/Third_Party/FreeRTOS/Source/list.c ****     FreeRTOS training directly from Richard Barry, CEO of Real Time Engineers
  50:Middlewares/Third_Party/FreeRTOS/Source/list.c ****     Ltd, and the world's leading authority on the world's leading RTOS.
  51:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 
  52:Middlewares/Third_Party/FreeRTOS/Source/list.c ****     http://www.FreeRTOS.org/plus - A selection of FreeRTOS ecosystem products,
  53:Middlewares/Third_Party/FreeRTOS/Source/list.c ****     including FreeRTOS+Trace - an indispensable productivity tool, a DOS
  54:Middlewares/Third_Party/FreeRTOS/Source/list.c ****     compatible FAT file system, and our tiny thread aware UDP/IP stack.
  55:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 
  56:Middlewares/Third_Party/FreeRTOS/Source/list.c ****     http://www.FreeRTOS.org/labs - Where new FreeRTOS products go to incubate.
  57:Middlewares/Third_Party/FreeRTOS/Source/list.c ****     Come and try FreeRTOS+TCP, our new open source TCP/IP stack for FreeRTOS.
  58:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 
  59:Middlewares/Third_Party/FreeRTOS/Source/list.c ****     http://www.OpenRTOS.com - Real Time Engineers ltd. license FreeRTOS to High
  60:Middlewares/Third_Party/FreeRTOS/Source/list.c ****     Integrity Systems ltd. to sell under the OpenRTOS brand.  Low cost OpenRTOS
  61:Middlewares/Third_Party/FreeRTOS/Source/list.c ****     licenses offer ticketed support, indemnification and commercial middleware.
  62:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 
  63:Middlewares/Third_Party/FreeRTOS/Source/list.c ****     http://www.SafeRTOS.com - High Integrity Systems also provide a safety
  64:Middlewares/Third_Party/FreeRTOS/Source/list.c ****     engineered and independently SIL3 certified version for use in safety and
  65:Middlewares/Third_Party/FreeRTOS/Source/list.c ****     mission critical applications that require provable dependability.
  66:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 
  67:Middlewares/Third_Party/FreeRTOS/Source/list.c ****     1 tab == 4 spaces!
  68:Middlewares/Third_Party/FreeRTOS/Source/list.c **** */
  69:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 
  70:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 
  71:Middlewares/Third_Party/FreeRTOS/Source/list.c **** #include <stdlib.h>
  72:Middlewares/Third_Party/FreeRTOS/Source/list.c **** #include "FreeRTOS.h"
  73:Middlewares/Third_Party/FreeRTOS/Source/list.c **** #include "list.h"
  74:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 
  75:Middlewares/Third_Party/FreeRTOS/Source/list.c **** /*-----------------------------------------------------------
  76:Middlewares/Third_Party/FreeRTOS/Source/list.c ****  * PUBLIC LIST API documented in list.h
  77:Middlewares/Third_Party/FreeRTOS/Source/list.c ****  *----------------------------------------------------------*/
  78:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 
  79:Middlewares/Third_Party/FreeRTOS/Source/list.c **** void vListInitialise( List_t * const pxList )
  80:Middlewares/Third_Party/FreeRTOS/Source/list.c **** {
  28              		.loc 1 80 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 8
  31              		@ frame_needed = 1, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33 0000 80B4     		push	{r7}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 4
ARM GAS  /tmp/ccWXBMAI.s 			page 3


  36              		.cfi_offset 7, -4
  37 0002 83B0     		sub	sp, sp, #12
  38              	.LCFI1:
  39              		.cfi_def_cfa_offset 16
  40 0004 00AF     		add	r7, sp, #0
  41              	.LCFI2:
  42              		.cfi_def_cfa_register 7
  43 0006 7860     		str	r0, [r7, #4]
  81:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	/* The list structure contains a list item which is used to mark the
  82:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	end of the list.  To initialise the list the list end is inserted
  83:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	as the only list entry. */
  84:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 The mini list struc
  44              		.loc 1 84 0
  45 0008 7B68     		ldr	r3, [r7, #4]
  46 000a 03F10802 		add	r2, r3, #8
  47 000e 7B68     		ldr	r3, [r7, #4]
  48 0010 5A60     		str	r2, [r3, #4]
  85:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 
  86:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	/* The list end value is the highest possible value in the list to
  87:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	ensure it remains at the end of the list. */
  88:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	pxList->xListEnd.xItemValue = portMAX_DELAY;
  49              		.loc 1 88 0
  50 0012 7B68     		ldr	r3, [r7, #4]
  51 0014 4FF0FF32 		mov	r2, #-1
  52 0018 9A60     		str	r2, [r3, #8]
  89:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 
  90:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	/* The list end next and previous pointers point to itself so we know
  91:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	when the list is empty. */
  92:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	pxList->xListEnd.pxNext = ( ListItem_t * ) &( pxList->xListEnd );	/*lint !e826 !e740 The mini list
  53              		.loc 1 92 0
  54 001a 7B68     		ldr	r3, [r7, #4]
  55 001c 03F10802 		add	r2, r3, #8
  56 0020 7B68     		ldr	r3, [r7, #4]
  57 0022 DA60     		str	r2, [r3, #12]
  93:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	pxList->xListEnd.pxPrevious = ( ListItem_t * ) &( pxList->xListEnd );/*lint !e826 !e740 The mini l
  58              		.loc 1 93 0
  59 0024 7B68     		ldr	r3, [r7, #4]
  60 0026 03F10802 		add	r2, r3, #8
  61 002a 7B68     		ldr	r3, [r7, #4]
  62 002c 1A61     		str	r2, [r3, #16]
  94:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 
  95:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
  63              		.loc 1 95 0
  64 002e 7B68     		ldr	r3, [r7, #4]
  65 0030 0022     		movs	r2, #0
  66 0032 1A60     		str	r2, [r3]
  96:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 
  97:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	/* Write known values into the list if
  98:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
  99:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	listSET_LIST_INTEGRITY_CHECK_1_VALUE( pxList );
 100:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	listSET_LIST_INTEGRITY_CHECK_2_VALUE( pxList );
 101:Middlewares/Third_Party/FreeRTOS/Source/list.c **** }
  67              		.loc 1 101 0
  68 0034 00BF     		nop
  69 0036 0C37     		adds	r7, r7, #12
  70              	.LCFI3:
  71              		.cfi_def_cfa_offset 4
ARM GAS  /tmp/ccWXBMAI.s 			page 4


  72 0038 BD46     		mov	sp, r7
  73              	.LCFI4:
  74              		.cfi_def_cfa_register 13
  75              		@ sp needed
  76 003a 5DF8047B 		ldr	r7, [sp], #4
  77              	.LCFI5:
  78              		.cfi_restore 7
  79              		.cfi_def_cfa_offset 0
  80 003e 7047     		bx	lr
  81              		.cfi_endproc
  82              	.LFE5:
  84              		.section	.text.vListInitialiseItem,"ax",%progbits
  85              		.align	1
  86              		.global	vListInitialiseItem
  87              		.syntax unified
  88              		.thumb
  89              		.thumb_func
  90              		.fpu fpv4-sp-d16
  92              	vListInitialiseItem:
  93              	.LFB6:
 102:Middlewares/Third_Party/FreeRTOS/Source/list.c **** /*-----------------------------------------------------------*/
 103:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 
 104:Middlewares/Third_Party/FreeRTOS/Source/list.c **** void vListInitialiseItem( ListItem_t * const pxItem )
 105:Middlewares/Third_Party/FreeRTOS/Source/list.c **** {
  94              		.loc 1 105 0
  95              		.cfi_startproc
  96              		@ args = 0, pretend = 0, frame = 8
  97              		@ frame_needed = 1, uses_anonymous_args = 0
  98              		@ link register save eliminated.
  99 0000 80B4     		push	{r7}
 100              	.LCFI6:
 101              		.cfi_def_cfa_offset 4
 102              		.cfi_offset 7, -4
 103 0002 83B0     		sub	sp, sp, #12
 104              	.LCFI7:
 105              		.cfi_def_cfa_offset 16
 106 0004 00AF     		add	r7, sp, #0
 107              	.LCFI8:
 108              		.cfi_def_cfa_register 7
 109 0006 7860     		str	r0, [r7, #4]
 106:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	/* Make sure the list item is not recorded as being on a list. */
 107:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	pxItem->pvContainer = NULL;
 110              		.loc 1 107 0
 111 0008 7B68     		ldr	r3, [r7, #4]
 112 000a 0022     		movs	r2, #0
 113 000c 1A61     		str	r2, [r3, #16]
 108:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 
 109:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	/* Write known values into the list item if
 110:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
 111:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	listSET_FIRST_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
 112:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	listSET_SECOND_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
 113:Middlewares/Third_Party/FreeRTOS/Source/list.c **** }
 114              		.loc 1 113 0
 115 000e 00BF     		nop
 116 0010 0C37     		adds	r7, r7, #12
 117              	.LCFI9:
 118              		.cfi_def_cfa_offset 4
ARM GAS  /tmp/ccWXBMAI.s 			page 5


 119 0012 BD46     		mov	sp, r7
 120              	.LCFI10:
 121              		.cfi_def_cfa_register 13
 122              		@ sp needed
 123 0014 5DF8047B 		ldr	r7, [sp], #4
 124              	.LCFI11:
 125              		.cfi_restore 7
 126              		.cfi_def_cfa_offset 0
 127 0018 7047     		bx	lr
 128              		.cfi_endproc
 129              	.LFE6:
 131              		.section	.text.vListInsertEnd,"ax",%progbits
 132              		.align	1
 133              		.global	vListInsertEnd
 134              		.syntax unified
 135              		.thumb
 136              		.thumb_func
 137              		.fpu fpv4-sp-d16
 139              	vListInsertEnd:
 140              	.LFB7:
 114:Middlewares/Third_Party/FreeRTOS/Source/list.c **** /*-----------------------------------------------------------*/
 115:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 
 116:Middlewares/Third_Party/FreeRTOS/Source/list.c **** void vListInsertEnd( List_t * const pxList, ListItem_t * const pxNewListItem )
 117:Middlewares/Third_Party/FreeRTOS/Source/list.c **** {
 141              		.loc 1 117 0
 142              		.cfi_startproc
 143              		@ args = 0, pretend = 0, frame = 16
 144              		@ frame_needed = 1, uses_anonymous_args = 0
 145              		@ link register save eliminated.
 146 0000 80B4     		push	{r7}
 147              	.LCFI12:
 148              		.cfi_def_cfa_offset 4
 149              		.cfi_offset 7, -4
 150 0002 85B0     		sub	sp, sp, #20
 151              	.LCFI13:
 152              		.cfi_def_cfa_offset 24
 153 0004 00AF     		add	r7, sp, #0
 154              	.LCFI14:
 155              		.cfi_def_cfa_register 7
 156 0006 7860     		str	r0, [r7, #4]
 157 0008 3960     		str	r1, [r7]
 118:Middlewares/Third_Party/FreeRTOS/Source/list.c **** ListItem_t * const pxIndex = pxList->pxIndex;
 158              		.loc 1 118 0
 159 000a 7B68     		ldr	r3, [r7, #4]
 160 000c 5B68     		ldr	r3, [r3, #4]
 161 000e FB60     		str	r3, [r7, #12]
 119:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 
 120:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	/* Only effective when configASSERT() is also defined, these tests may catch
 121:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	the list data structures being overwritten in memory.  They will not catch
 122:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	data errors caused by incorrect configuration or use of FreeRTOS. */
 123:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	listTEST_LIST_INTEGRITY( pxList );
 124:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	listTEST_LIST_ITEM_INTEGRITY( pxNewListItem );
 125:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 
 126:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	/* Insert a new list item into pxList, but rather than sort the list,
 127:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	makes the new list item the last item to be removed by a call to
 128:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	listGET_OWNER_OF_NEXT_ENTRY(). */
 129:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	pxNewListItem->pxNext = pxIndex;
ARM GAS  /tmp/ccWXBMAI.s 			page 6


 162              		.loc 1 129 0
 163 0010 3B68     		ldr	r3, [r7]
 164 0012 FA68     		ldr	r2, [r7, #12]
 165 0014 5A60     		str	r2, [r3, #4]
 130:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	pxNewListItem->pxPrevious = pxIndex->pxPrevious;
 166              		.loc 1 130 0
 167 0016 FB68     		ldr	r3, [r7, #12]
 168 0018 9A68     		ldr	r2, [r3, #8]
 169 001a 3B68     		ldr	r3, [r7]
 170 001c 9A60     		str	r2, [r3, #8]
 131:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 
 132:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	/* Only used during decision coverage testing. */
 133:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	mtCOVERAGE_TEST_DELAY();
 134:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 
 135:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	pxIndex->pxPrevious->pxNext = pxNewListItem;
 171              		.loc 1 135 0
 172 001e FB68     		ldr	r3, [r7, #12]
 173 0020 9B68     		ldr	r3, [r3, #8]
 174 0022 3A68     		ldr	r2, [r7]
 175 0024 5A60     		str	r2, [r3, #4]
 136:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	pxIndex->pxPrevious = pxNewListItem;
 176              		.loc 1 136 0
 177 0026 FB68     		ldr	r3, [r7, #12]
 178 0028 3A68     		ldr	r2, [r7]
 179 002a 9A60     		str	r2, [r3, #8]
 137:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 
 138:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	/* Remember which list the item is in. */
 139:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	pxNewListItem->pvContainer = ( void * ) pxList;
 180              		.loc 1 139 0
 181 002c 3B68     		ldr	r3, [r7]
 182 002e 7A68     		ldr	r2, [r7, #4]
 183 0030 1A61     		str	r2, [r3, #16]
 140:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 
 141:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	( pxList->uxNumberOfItems )++;
 184              		.loc 1 141 0
 185 0032 7B68     		ldr	r3, [r7, #4]
 186 0034 1B68     		ldr	r3, [r3]
 187 0036 5A1C     		adds	r2, r3, #1
 188 0038 7B68     		ldr	r3, [r7, #4]
 189 003a 1A60     		str	r2, [r3]
 142:Middlewares/Third_Party/FreeRTOS/Source/list.c **** }
 190              		.loc 1 142 0
 191 003c 00BF     		nop
 192 003e 1437     		adds	r7, r7, #20
 193              	.LCFI15:
 194              		.cfi_def_cfa_offset 4
 195 0040 BD46     		mov	sp, r7
 196              	.LCFI16:
 197              		.cfi_def_cfa_register 13
 198              		@ sp needed
 199 0042 5DF8047B 		ldr	r7, [sp], #4
 200              	.LCFI17:
 201              		.cfi_restore 7
 202              		.cfi_def_cfa_offset 0
 203 0046 7047     		bx	lr
 204              		.cfi_endproc
 205              	.LFE7:
ARM GAS  /tmp/ccWXBMAI.s 			page 7


 207              		.section	.text.vListInsert,"ax",%progbits
 208              		.align	1
 209              		.global	vListInsert
 210              		.syntax unified
 211              		.thumb
 212              		.thumb_func
 213              		.fpu fpv4-sp-d16
 215              	vListInsert:
 216              	.LFB8:
 143:Middlewares/Third_Party/FreeRTOS/Source/list.c **** /*-----------------------------------------------------------*/
 144:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 
 145:Middlewares/Third_Party/FreeRTOS/Source/list.c **** void vListInsert( List_t * const pxList, ListItem_t * const pxNewListItem )
 146:Middlewares/Third_Party/FreeRTOS/Source/list.c **** {
 217              		.loc 1 146 0
 218              		.cfi_startproc
 219              		@ args = 0, pretend = 0, frame = 16
 220              		@ frame_needed = 1, uses_anonymous_args = 0
 221              		@ link register save eliminated.
 222 0000 80B4     		push	{r7}
 223              	.LCFI18:
 224              		.cfi_def_cfa_offset 4
 225              		.cfi_offset 7, -4
 226 0002 85B0     		sub	sp, sp, #20
 227              	.LCFI19:
 228              		.cfi_def_cfa_offset 24
 229 0004 00AF     		add	r7, sp, #0
 230              	.LCFI20:
 231              		.cfi_def_cfa_register 7
 232 0006 7860     		str	r0, [r7, #4]
 233 0008 3960     		str	r1, [r7]
 147:Middlewares/Third_Party/FreeRTOS/Source/list.c **** ListItem_t *pxIterator;
 148:Middlewares/Third_Party/FreeRTOS/Source/list.c **** const TickType_t xValueOfInsertion = pxNewListItem->xItemValue;
 234              		.loc 1 148 0
 235 000a 3B68     		ldr	r3, [r7]
 236 000c 1B68     		ldr	r3, [r3]
 237 000e BB60     		str	r3, [r7, #8]
 149:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 
 150:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	/* Only effective when configASSERT() is also defined, these tests may catch
 151:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	the list data structures being overwritten in memory.  They will not catch
 152:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	data errors caused by incorrect configuration or use of FreeRTOS. */
 153:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	listTEST_LIST_INTEGRITY( pxList );
 154:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	listTEST_LIST_ITEM_INTEGRITY( pxNewListItem );
 155:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 
 156:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	/* Insert the new list item into the list, sorted in xItemValue order.
 157:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 
 158:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	If the list already contains a list item with the same item value then the
 159:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	new list item should be placed after it.  This ensures that TCB's which are
 160:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	stored in ready lists (all of which have the same xItemValue value) get a
 161:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	share of the CPU.  However, if the xItemValue is the same as the back marker
 162:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	the iteration loop below will not end.  Therefore the value is checked
 163:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	first, and the algorithm slightly modified if necessary. */
 164:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	if( xValueOfInsertion == portMAX_DELAY )
 238              		.loc 1 164 0
 239 0010 BB68     		ldr	r3, [r7, #8]
 240 0012 B3F1FF3F 		cmp	r3, #-1
 241 0016 03D1     		bne	.L5
 165:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	{
ARM GAS  /tmp/ccWXBMAI.s 			page 8


 166:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 		pxIterator = pxList->xListEnd.pxPrevious;
 242              		.loc 1 166 0
 243 0018 7B68     		ldr	r3, [r7, #4]
 244 001a 1B69     		ldr	r3, [r3, #16]
 245 001c FB60     		str	r3, [r7, #12]
 246 001e 0CE0     		b	.L6
 247              	.L5:
 167:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	}
 168:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	else
 169:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	{
 170:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 		/* *** NOTE ***********************************************************
 171:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 		If you find your application is crashing here then likely causes are
 172:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 		listed below.  In addition see http://www.freertos.org/FAQHelp.html for
 173:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 		more tips, and ensure configASSERT() is defined!
 174:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 		http://www.freertos.org/a00110.html#configASSERT
 175:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 
 176:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 			1) Stack overflow -
 177:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 			   see http://www.freertos.org/Stacks-and-stack-overflow-checking.html
 178:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 			2) Incorrect interrupt priority assignment, especially on Cortex-M
 179:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 			   parts where numerically high priority values denote low actual
 180:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 			   interrupt priorities, which can seem counter intuitive.  See
 181:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 			   http://www.freertos.org/RTOS-Cortex-M3-M4.html and the definition
 182:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 			   of configMAX_SYSCALL_INTERRUPT_PRIORITY on
 183:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 			   http://www.freertos.org/a00110.html
 184:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 			3) Calling an API function from within a critical section or when
 185:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 			   the scheduler is suspended, or calling an API function that does
 186:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 			   not end in "FromISR" from an interrupt.
 187:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 			4) Using a queue or semaphore before it has been initialised or
 188:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 			   before the scheduler has been started (are interrupts firing
 189:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 			   before vTaskStartScheduler() has been called?).
 190:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 		**********************************************************************/
 191:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 
 192:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 		for( pxIterator = ( ListItem_t * ) &( pxList->xListEnd ); pxIterator->pxNext->xItemValue <= xValu
 248              		.loc 1 192 0
 249 0020 7B68     		ldr	r3, [r7, #4]
 250 0022 0833     		adds	r3, r3, #8
 251 0024 FB60     		str	r3, [r7, #12]
 252 0026 02E0     		b	.L7
 253              	.L8:
 254              		.loc 1 192 0 is_stmt 0 discriminator 3
 255 0028 FB68     		ldr	r3, [r7, #12]
 256 002a 5B68     		ldr	r3, [r3, #4]
 257 002c FB60     		str	r3, [r7, #12]
 258              	.L7:
 259              		.loc 1 192 0 discriminator 1
 260 002e FB68     		ldr	r3, [r7, #12]
 261 0030 5B68     		ldr	r3, [r3, #4]
 262 0032 1A68     		ldr	r2, [r3]
 263 0034 BB68     		ldr	r3, [r7, #8]
 264 0036 9A42     		cmp	r2, r3
 265 0038 F6D9     		bls	.L8
 266              	.L6:
 193:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 		{
 194:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 			/* There is nothing to do here, just iterating to the wanted
 195:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 			insertion position. */
 196:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 		}
 197:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	}
ARM GAS  /tmp/ccWXBMAI.s 			page 9


 198:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 
 199:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	pxNewListItem->pxNext = pxIterator->pxNext;
 267              		.loc 1 199 0 is_stmt 1
 268 003a FB68     		ldr	r3, [r7, #12]
 269 003c 5A68     		ldr	r2, [r3, #4]
 270 003e 3B68     		ldr	r3, [r7]
 271 0040 5A60     		str	r2, [r3, #4]
 200:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	pxNewListItem->pxNext->pxPrevious = pxNewListItem;
 272              		.loc 1 200 0
 273 0042 3B68     		ldr	r3, [r7]
 274 0044 5B68     		ldr	r3, [r3, #4]
 275 0046 3A68     		ldr	r2, [r7]
 276 0048 9A60     		str	r2, [r3, #8]
 201:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	pxNewListItem->pxPrevious = pxIterator;
 277              		.loc 1 201 0
 278 004a 3B68     		ldr	r3, [r7]
 279 004c FA68     		ldr	r2, [r7, #12]
 280 004e 9A60     		str	r2, [r3, #8]
 202:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	pxIterator->pxNext = pxNewListItem;
 281              		.loc 1 202 0
 282 0050 FB68     		ldr	r3, [r7, #12]
 283 0052 3A68     		ldr	r2, [r7]
 284 0054 5A60     		str	r2, [r3, #4]
 203:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 
 204:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	/* Remember which list the item is in.  This allows fast removal of the
 205:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	item later. */
 206:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	pxNewListItem->pvContainer = ( void * ) pxList;
 285              		.loc 1 206 0
 286 0056 3B68     		ldr	r3, [r7]
 287 0058 7A68     		ldr	r2, [r7, #4]
 288 005a 1A61     		str	r2, [r3, #16]
 207:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 
 208:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	( pxList->uxNumberOfItems )++;
 289              		.loc 1 208 0
 290 005c 7B68     		ldr	r3, [r7, #4]
 291 005e 1B68     		ldr	r3, [r3]
 292 0060 5A1C     		adds	r2, r3, #1
 293 0062 7B68     		ldr	r3, [r7, #4]
 294 0064 1A60     		str	r2, [r3]
 209:Middlewares/Third_Party/FreeRTOS/Source/list.c **** }
 295              		.loc 1 209 0
 296 0066 00BF     		nop
 297 0068 1437     		adds	r7, r7, #20
 298              	.LCFI21:
 299              		.cfi_def_cfa_offset 4
 300 006a BD46     		mov	sp, r7
 301              	.LCFI22:
 302              		.cfi_def_cfa_register 13
 303              		@ sp needed
 304 006c 5DF8047B 		ldr	r7, [sp], #4
 305              	.LCFI23:
 306              		.cfi_restore 7
 307              		.cfi_def_cfa_offset 0
 308 0070 7047     		bx	lr
 309              		.cfi_endproc
 310              	.LFE8:
 312              		.section	.text.uxListRemove,"ax",%progbits
ARM GAS  /tmp/ccWXBMAI.s 			page 10


 313              		.align	1
 314              		.global	uxListRemove
 315              		.syntax unified
 316              		.thumb
 317              		.thumb_func
 318              		.fpu fpv4-sp-d16
 320              	uxListRemove:
 321              	.LFB9:
 210:Middlewares/Third_Party/FreeRTOS/Source/list.c **** /*-----------------------------------------------------------*/
 211:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 
 212:Middlewares/Third_Party/FreeRTOS/Source/list.c **** UBaseType_t uxListRemove( ListItem_t * const pxItemToRemove )
 213:Middlewares/Third_Party/FreeRTOS/Source/list.c **** {
 322              		.loc 1 213 0
 323              		.cfi_startproc
 324              		@ args = 0, pretend = 0, frame = 16
 325              		@ frame_needed = 1, uses_anonymous_args = 0
 326              		@ link register save eliminated.
 327 0000 80B4     		push	{r7}
 328              	.LCFI24:
 329              		.cfi_def_cfa_offset 4
 330              		.cfi_offset 7, -4
 331 0002 85B0     		sub	sp, sp, #20
 332              	.LCFI25:
 333              		.cfi_def_cfa_offset 24
 334 0004 00AF     		add	r7, sp, #0
 335              	.LCFI26:
 336              		.cfi_def_cfa_register 7
 337 0006 7860     		str	r0, [r7, #4]
 214:Middlewares/Third_Party/FreeRTOS/Source/list.c **** /* The list item knows which list it is in.  Obtain the list from the list
 215:Middlewares/Third_Party/FreeRTOS/Source/list.c **** item. */
 216:Middlewares/Third_Party/FreeRTOS/Source/list.c **** List_t * const pxList = ( List_t * ) pxItemToRemove->pvContainer;
 338              		.loc 1 216 0
 339 0008 7B68     		ldr	r3, [r7, #4]
 340 000a 1B69     		ldr	r3, [r3, #16]
 341 000c FB60     		str	r3, [r7, #12]
 217:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 
 218:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 342              		.loc 1 218 0
 343 000e 7B68     		ldr	r3, [r7, #4]
 344 0010 5B68     		ldr	r3, [r3, #4]
 345 0012 7A68     		ldr	r2, [r7, #4]
 346 0014 9268     		ldr	r2, [r2, #8]
 347 0016 9A60     		str	r2, [r3, #8]
 219:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	pxItemToRemove->pxPrevious->pxNext = pxItemToRemove->pxNext;
 348              		.loc 1 219 0
 349 0018 7B68     		ldr	r3, [r7, #4]
 350 001a 9B68     		ldr	r3, [r3, #8]
 351 001c 7A68     		ldr	r2, [r7, #4]
 352 001e 5268     		ldr	r2, [r2, #4]
 353 0020 5A60     		str	r2, [r3, #4]
 220:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 
 221:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	/* Only used during decision coverage testing. */
 222:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	mtCOVERAGE_TEST_DELAY();
 223:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 
 224:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	/* Make sure the index is left pointing to a valid item. */
 225:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	if( pxList->pxIndex == pxItemToRemove )
 354              		.loc 1 225 0
ARM GAS  /tmp/ccWXBMAI.s 			page 11


 355 0022 FB68     		ldr	r3, [r7, #12]
 356 0024 5A68     		ldr	r2, [r3, #4]
 357 0026 7B68     		ldr	r3, [r7, #4]
 358 0028 9A42     		cmp	r2, r3
 359 002a 03D1     		bne	.L10
 226:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	{
 227:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 		pxList->pxIndex = pxItemToRemove->pxPrevious;
 360              		.loc 1 227 0
 361 002c 7B68     		ldr	r3, [r7, #4]
 362 002e 9A68     		ldr	r2, [r3, #8]
 363 0030 FB68     		ldr	r3, [r7, #12]
 364 0032 5A60     		str	r2, [r3, #4]
 365              	.L10:
 228:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	}
 229:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	else
 230:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	{
 231:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 		mtCOVERAGE_TEST_MARKER();
 232:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	}
 233:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 
 234:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	pxItemToRemove->pvContainer = NULL;
 366              		.loc 1 234 0
 367 0034 7B68     		ldr	r3, [r7, #4]
 368 0036 0022     		movs	r2, #0
 369 0038 1A61     		str	r2, [r3, #16]
 235:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	( pxList->uxNumberOfItems )--;
 370              		.loc 1 235 0
 371 003a FB68     		ldr	r3, [r7, #12]
 372 003c 1B68     		ldr	r3, [r3]
 373 003e 5A1E     		subs	r2, r3, #1
 374 0040 FB68     		ldr	r3, [r7, #12]
 375 0042 1A60     		str	r2, [r3]
 236:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 
 237:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	return pxList->uxNumberOfItems;
 376              		.loc 1 237 0
 377 0044 FB68     		ldr	r3, [r7, #12]
 378 0046 1B68     		ldr	r3, [r3]
 238:Middlewares/Third_Party/FreeRTOS/Source/list.c **** }
 379              		.loc 1 238 0
 380 0048 1846     		mov	r0, r3
 381 004a 1437     		adds	r7, r7, #20
 382              	.LCFI27:
 383              		.cfi_def_cfa_offset 4
 384 004c BD46     		mov	sp, r7
 385              	.LCFI28:
 386              		.cfi_def_cfa_register 13
 387              		@ sp needed
 388 004e 5DF8047B 		ldr	r7, [sp], #4
 389              	.LCFI29:
 390              		.cfi_restore 7
 391              		.cfi_def_cfa_offset 0
 392 0052 7047     		bx	lr
 393              		.cfi_endproc
 394              	.LFE9:
 396              		.text
 397              	.Letext0:
 398              		.file 2 "/opt/gcc4mbed/gcc-arm-none-eabi/arm-none-eabi/include/machine/_default_types.h"
 399              		.file 3 "/opt/gcc4mbed/gcc-arm-none-eabi/arm-none-eabi/include/sys/lock.h"
ARM GAS  /tmp/ccWXBMAI.s 			page 12


 400              		.file 4 "/opt/gcc4mbed/gcc-arm-none-eabi/arm-none-eabi/include/sys/_types.h"
 401              		.file 5 "/opt/gcc4mbed/gcc-arm-none-eabi/lib/gcc/arm-none-eabi/6.3.1/include/stddef.h"
 402              		.file 6 "/opt/gcc4mbed/gcc-arm-none-eabi/arm-none-eabi/include/sys/reent.h"
 403              		.file 7 "/opt/gcc4mbed/gcc-arm-none-eabi/arm-none-eabi/include/sys/_stdint.h"
 404              		.file 8 "Inc/FreeRTOSConfig.h"
 405              		.file 9 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h"
 406              		.file 10 "Middlewares/Third_Party/FreeRTOS/Source/include/list.h"
ARM GAS  /tmp/ccWXBMAI.s 			page 13


DEFINED SYMBOLS
                            *ABS*:0000000000000000 list.c
     /tmp/ccWXBMAI.s:18     .text.vListInitialise:0000000000000000 $t
     /tmp/ccWXBMAI.s:25     .text.vListInitialise:0000000000000000 vListInitialise
     /tmp/ccWXBMAI.s:85     .text.vListInitialiseItem:0000000000000000 $t
     /tmp/ccWXBMAI.s:92     .text.vListInitialiseItem:0000000000000000 vListInitialiseItem
     /tmp/ccWXBMAI.s:132    .text.vListInsertEnd:0000000000000000 $t
     /tmp/ccWXBMAI.s:139    .text.vListInsertEnd:0000000000000000 vListInsertEnd
     /tmp/ccWXBMAI.s:208    .text.vListInsert:0000000000000000 $t
     /tmp/ccWXBMAI.s:215    .text.vListInsert:0000000000000000 vListInsert
     /tmp/ccWXBMAI.s:313    .text.uxListRemove:0000000000000000 $t
     /tmp/ccWXBMAI.s:320    .text.uxListRemove:0000000000000000 uxListRemove
                     .debug_frame:0000000000000010 $d

NO UNDEFINED SYMBOLS
